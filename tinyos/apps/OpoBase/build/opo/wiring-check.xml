<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:OpoBaseC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6ae6516298"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6ae5b2b3e0"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6ae5b2b3e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6ae5b2cc70"/></to>
    </wire>
    <wire loc="8:OpoBaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae6516860"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce35e8"/></to>
    </wire>
    <wire loc="17:OpoBaseC.nc">
      <from><interface-ref name="OpoReceive" scoped="" ref="0x2b6ae651a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae727d970"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae727d970"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae6556300"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:OpoBaseC.nc">
      <from><interface-ref name="BlinkReceive" scoped="" ref="0x2b6ae651a6c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae7275dd0"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae7275dd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae6556300"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:OpoBaseC.nc">
      <from><interface-ref name="VisualReceive" scoped="" ref="0x2b6ae651ad68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae726f0e0"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae726f0e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae6556300"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:OpoBaseC.nc">
      <from><interface-ref name="RxReceive" scoped="" ref="0x2b6ae6519420"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae726b390"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae726b390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae6556300"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:OpoBaseC.nc">
      <from><interface-ref name="ADCReceive" scoped="" ref="0x2b6ae6519aa8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae72676d8"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae72676d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae6556300"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:OpoBaseC.nc">
      <from><interface-ref name="RfControl" scoped="" ref="0x2b6ae65181e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae6558140"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6ae6558140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65b3818"/></to>
    </wire>
    <wire loc="23:OpoBaseC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6518c68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6595080"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6595080"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae65b0a88"/></to>
    </wire>
    <wire loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae717fc28"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae7122110"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae70d2e80"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae7095568"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6fab080"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6ea0e00"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6d8e888"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae66f73e0"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae79fbb18"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6a0e5d8"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6646080"/></to>
    </wire>
    <wire loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6522d78"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6508298"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae7827080"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6039ba8"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6ae5cdc308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6ae57f5390"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6ae57f5390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6ae5adf680"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6ae5cdcce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae5b2d7e8"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae5b2d7e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae5b286e8"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5cdb418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b6ae5b28df8"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2b6ae5b37148"/></to>
    </wire>
    <wire loc="46:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b6ae5b37148"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae5b33020"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6ae5b25480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae5cb3460"/></to>
    </wire>
    <wire loc="20:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b6ae5b25ae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae5d1c4a0"/></to>
    </wire>
    <wire loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae5b33020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae5b4e4f0"/></to>
    </wire>
    <wire loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6ae5b442b8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6ae5b4eb60"/></to>
    </wire>
    <wire loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6ae5b07130"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6ae5b4de08"/></to>
    </wire>
    <wire loc="113:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2b6ae5b93a20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c4dc80"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2b6ae5baeba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c63c80"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2b6ae5b9c3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c52c58"/></to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2b6ae5bb5020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c68c58"/></to>
    </wire>
    <wire loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2b6ae5b89d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c52020"/></to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2b6ae5bbc6e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c68020"/></to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2b6ae5bb1020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c8ec58"/></to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2b6ae5ba8020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c81c80"/></to>
    </wire>
    <wire loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2b6ae5b8c1b0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5bf7c80"/></to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2b6ae5bb7020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c59c58"/></to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2b6ae5ba4a70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c59020"/></to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2b6ae5bac060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c5bc80"/></to>
    </wire>
    <wire loc="115:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2b6ae5b9b3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c4bc58"/></to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2b6ae5bb4020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c7fc58"/></to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2b6ae5bab588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c72c80"/></to>
    </wire>
    <wire loc="114:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2b6ae5b9eaa8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c4b020"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2b6ae5b95b88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5be9698"/></to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2b6ae5bbb558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c7f020"/></to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2b6ae5b94588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c39c80"/></to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2b6ae5ba7400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c79c80"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2b6ae5b974e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c3ec58"/></to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2b6ae5bb6020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c70c58"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2b6ae5b89020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c3e020"/></to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2b6ae5ba3868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c70020"/></to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2b6ae5bb2020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c77c58"/></to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2b6ae5baaa20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c6ac80"/></to>
    </wire>
    <wire loc="120:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2b6ae5bba3d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c77020"/></to>
    </wire>
    <wire loc="128:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2b6ae5bb8060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae5c60c58"/></to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2b6ae5bb9120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c8e020"/></to>
    </wire>
    <wire loc="127:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2b6ae5ba5d00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6ae5c60020"/></to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2b6ae5ba6898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6ae5c90c80"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b6ae5be63b8"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5be7d48"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b6ae5be69d0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2b6ae5c86520"/></to>
    </wire>
    <wire loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b6ae5be5020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2b6ae5c86c68"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c3da90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5be9698"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c3b100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5be7d48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c51a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5be9698"/></to>
    </wire>
    <wire loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c4f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5be7d48"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c4aa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5be9698"/></to>
    </wire>
    <wire loc="117:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c48100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5be7d48"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b6ae5bfcd50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b6ae5bfb3a0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2b6ae5c85418"/></to>
    </wire>
    <wire loc="123:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b6ae5bfb9b8"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2b6ae5c85b60"/></to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c5fa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c5d100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c58a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c56100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c6ea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></to>
    </wire>
    <wire loc="144:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c6c100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c67a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c65100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c7da90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c7b100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c76a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c74100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae5c8ca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6ae5c8a100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae5ade4e8"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b6ae5af4998"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b6ae5a246c0"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae5d1c4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae5ce3020"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6ae5cfb7c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b6ae5d1f020"/></to>
    </wire>
    <wire loc="22:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6ae5d1f020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae5f29c30"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6ae5d01958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b6ae5d1e190"/></to>
    </wire>
    <wire loc="25:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6ae5d1e190"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae5f3c448"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6ae5d00ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b6ae5d1d338"/></to>
    </wire>
    <wire loc="28:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6ae5d1d338"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae5f38cf0"/></to>
    </wire>
    <wire loc="23:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae5f28da0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x2b6ae5d60568"/></to>
    </wire>
    <wire loc="471:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2b6ae5d60568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e4cdd8"/></to>
    </wire>
    <wire loc="26:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae5f3b5f8"/></from>
      <to><interface-ref name="Port47" scoped="" ref="0x2b6ae5d52568"/></to>
    </wire>
    <wire loc="478:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2b6ae5d52568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e763d8"/></to>
    </wire>
    <wire loc="29:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae5f37e20"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2b6ae5d3d568"/></to>
    </wire>
    <wire loc="450:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b6ae5d3d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e013d8"/></to>
    </wire>
    <wire loc="442:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b6ae5d28978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5df5ca0"/></to>
    </wire>
    <wire loc="455:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b6ae5d33568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e33ca0"/></to>
    </wire>
    <wire loc="531:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2b6ae5d917d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e243d8"/></to>
    </wire>
    <wire loc="551:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2b6ae5db0558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ea4ca0"/></to>
    </wire>
    <wire loc="532:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2b6ae5d8f660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e44ca0"/></to>
    </wire>
    <wire loc="460:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2b6ae5d4f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e29ca0"/></to>
    </wire>
    <wire loc="473:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2b6ae5d5c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e68ca0"/></to>
    </wire>
    <wire loc="486:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2b6ae5d69568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e86ca0"/></to>
    </wire>
    <wire loc="497:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2b6ae5d7b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5eadca0"/></to>
    </wire>
    <wire loc="535:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2b6ae5d89560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e3bca0"/></to>
    </wire>
    <wire loc="545:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2b6ae5d9a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e99ca0"/></to>
    </wire>
    <wire loc="557:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2b6ae5da8560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ec43d8"/></to>
    </wire>
    <wire loc="445:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b6ae5d22568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e0b3d8"/></to>
    </wire>
    <wire loc="536:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2b6ae5d86560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e363d8"/></to>
    </wire>
    <wire loc="463:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2b6ae5d49568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e3f3d8"/></to>
    </wire>
    <wire loc="476:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2b6ae5d56568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e5a3d8"/></to>
    </wire>
    <wire loc="489:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2b6ae5d63568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e9d3d8"/></to>
    </wire>
    <wire loc="500:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2b6ae5d75568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ec43d8"/></to>
    </wire>
    <wire loc="440:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b6ae5d2cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ddaca0"/></to>
    </wire>
    <wire loc="453:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b6ae5d37568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e18d08"/></to>
    </wire>
    <wire loc="466:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2b6ae5d43568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e56ca0"/></to>
    </wire>
    <wire loc="530:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2b6ae5d93970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e243d8"/></to>
    </wire>
    <wire loc="548:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2b6ae5db6558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5eb13d8"/></to>
    </wire>
    <wire loc="555:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2b6ae5daa558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ec43d8"/></to>
    </wire>
    <wire loc="541:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2b6ae5da0560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e8a3d8"/></to>
    </wire>
    <wire loc="484:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2b6ae5d6d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e8fca0"/></to>
    </wire>
    <wire loc="495:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2b6ae5d7f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5eb6ca0"/></to>
    </wire>
    <wire loc="549:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2b6ae5db4558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5eadca0"/></to>
    </wire>
    <wire loc="538:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2b6ae5da6558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e72ca0"/></to>
    </wire>
    <wire loc="443:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b6ae5d267f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5df03d8"/></to>
    </wire>
    <wire loc="456:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b6ae5d51568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e2e3d8"/></to>
    </wire>
    <wire loc="493:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2b6ae5d83568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e99ca0"/></to>
    </wire>
    <wire loc="461:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2b6ae5d4d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e243d8"/></to>
    </wire>
    <wire loc="474:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2b6ae5d5a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e633d8"/></to>
    </wire>
    <wire loc="487:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2b6ae5d67568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e813d8"/></to>
    </wire>
    <wire loc="498:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2b6ae5d79568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ea83d8"/></to>
    </wire>
    <wire loc="540:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2b6ae5da2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e8fca0"/></to>
    </wire>
    <wire loc="438:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b6ae5d18020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5dc4e18"/></to>
    </wire>
    <wire loc="451:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b6ae5d3b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e21ca0"/></to>
    </wire>
    <wire loc="464:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2b6ae5d47568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e3bca0"/></to>
    </wire>
    <wire loc="477:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2b6ae5d54568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e7cca0"/></to>
    </wire>
    <wire loc="542:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2b6ae5d9e560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e56ca0"/></to>
    </wire>
    <wire loc="546:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2b6ae5d98558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e943d8"/></to>
    </wire>
    <wire loc="552:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2b6ae5dae558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ec43d8"/></to>
    </wire>
    <wire loc="482:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2b6ae5d71568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e72ca0"/></to>
    </wire>
    <wire loc="543:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2b6ae5d9c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e513d8"/></to>
    </wire>
    <wire loc="441:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b6ae5d2ab00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5df93d8"/></to>
    </wire>
    <wire loc="454:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b6ae5d35568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e133d8"/></to>
    </wire>
    <wire loc="467:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2b6ae5d62568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e513d8"/></to>
    </wire>
    <wire loc="539:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2b6ae5da4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e6d3d8"/></to>
    </wire>
    <wire loc="550:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2b6ae5db2558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ea83d8"/></to>
    </wire>
    <wire loc="472:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2b6ae5d5e668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e47478"/></to>
    </wire>
    <wire loc="485:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2b6ae5d6b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e8a3d8"/></to>
    </wire>
    <wire loc="496:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2b6ae5d7d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5eb13d8"/></to>
    </wire>
    <wire loc="444:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b6ae5d24668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5decca0"/></to>
    </wire>
    <wire loc="494:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2b6ae5d81568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e943d8"/></to>
    </wire>
    <wire loc="449:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b6ae5d40568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e06ca0"/></to>
    </wire>
    <wire loc="462:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2b6ae5d4b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e44ca0"/></to>
    </wire>
    <wire loc="475:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2b6ae5d58568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e5fca0"/></to>
    </wire>
    <wire loc="488:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2b6ae5d65568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ea3ca0"/></to>
    </wire>
    <wire loc="499:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2b6ae5d77568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ea4ca0"/></to>
    </wire>
    <wire loc="439:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b6ae5d17e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5dde478"/></to>
    </wire>
    <wire loc="452:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b6ae5d39568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e1c3d8"/></to>
    </wire>
    <wire loc="465:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2b6ae5d45568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e363d8"/></to>
    </wire>
    <wire loc="534:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2b6ae5d8b548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e3f3d8"/></to>
    </wire>
    <wire loc="547:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2b6ae5d96558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5eb6ca0"/></to>
    </wire>
    <wire loc="533:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2b6ae5d8d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e3f3d8"/></to>
    </wire>
    <wire loc="483:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2b6ae5d6f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e6d3d8"/></to>
    </wire>
    <wire loc="554:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2b6ae5dac558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5ea4ca0"/></to>
    </wire>
    <wire loc="558:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2b6ae5dc8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e9d3d8"/></to>
    </wire>
    <wire loc="529:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2b6ae5d955b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6ae5e29ca0"/></to>
    </wire>
    <wire loc="44:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6ae5f507e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6ae5b2b3e0"/></to>
    </wire>
    <wire loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b6ae5f4b020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae5f60b88"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6ae5f60b88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae60362e8"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6ae60362e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae6052d50"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6ae5fbb9d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6ae5fbfb60"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae5fae9f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae603d578"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae5fb85e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae603f9a8"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae5fc20d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae603c268"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae5fc8190"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae603e020"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae6039ba8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6052738"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae60315a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5fc2a08"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6ae603cbb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae6035ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6ae603b8c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae6035270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b6ae602eba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b6ae6452020"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6ae6035ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae615e6f8"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae6035270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae615e020"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b6ae615d5b0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b6ae602eba8"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae604abc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae60315a8"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae615a268"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae60315a8"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae6184bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae60315a8"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b6ae615de78"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b6ae6048b48"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b6ae615b750"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b6ae604c898"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b6ae6042b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b6ae6186328"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b6ae606bb00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6ae6192220"/></to>
    </wire>
    <wire loc="17:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b6ae6192220"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6ae642cd98"/></to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b6ae617bc98"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b6ae61929e8"/></to>
    </wire>
    <wire loc="13:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b6ae61929e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b6ae6430880"/></to>
    </wire>
    <wire loc="332:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b6ae60a5dd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b6ae607e8e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b6ae60a7590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b6ae60a0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b6ae6159908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b6ae6158100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b6ae618ccc8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b6ae642f8c8"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b6ae642f8c8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b6ae61f7e10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b6ae6430880"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b6ae61f8988"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae642e060"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae6429640"/></to>
    </wire>
    <wire loc="19:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6429c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae64314e0"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae64314e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae61fa270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae6430120"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae7766430"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae7766430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae63551c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae61f3e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae642e060"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae775f430"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae61f6b90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b6ae61f4bc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae77676e8"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae77676e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6358e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae61f12b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae7760bd8"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae7760bd8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b6ae63581c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae61f6b90"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6273060"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b6ae61f7e10"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b6ae62729e8"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b6ae61f8988"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b6ae6273900"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae61fa270"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae62752e8"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae62a6180"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae61f3e78"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b6ae62a7408"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b6ae61f4bc8"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae62a10c8"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae61f12b0"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b6ae62a67b8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae6292ce0"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae6292ce0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b6ae62c1060"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae62a1a58"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae6317020"/></to>
    </wire>
    <wire loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae6317020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b6ae634fdf0"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae629fa30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae628f528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b6ae62bd8e0"/></to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae62924f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae628e7d8"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b6ae62bc1e8"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x2b6ae5da4560"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b6ae62ba020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x2b6ae5da2560"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b6ae62b9e00"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x2b6ae5da0560"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b6ae62b7c78"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x2b6ae5d9c560"/></to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b6ae62b5af0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x2b6ae5d9e560"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b6ae634fdf0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae6347330"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae63392a0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae7765430"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae6292ce0"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae7766b90"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6355998"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6355998"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae63ebe20"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae63546c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae775f430"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae63551c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae63ecaf8"/></to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae63ecaf8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae7824388"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b6ae63581c8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6352b20"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6358e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae63edd80"/></to>
    </wire>
    <wire loc="105:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae63edd80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae7825668"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae63ebe20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae7822700"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b6ae6351bc8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae628f528"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae63e96d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae63546c0"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6378a48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae63ebe20"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae640c268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae63eb268"/></to>
    </wire>
    <wire loc="107:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae63eb268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae7824ac8"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae63e5478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae62924f0"/></to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae7821020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae63e96d8"/></to>
    </wire>
    <wire loc="111:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6ae78217a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b6ae7827658"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6ae781f908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae77f1600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae63e5478"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6ae77f1d20"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6ae63e5b98"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae787b2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae640c268"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae787a020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae640ce20"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6ae65070f8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b6ae64efd50"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6ae6502370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6ae64b61d0"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6ae64b61d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6ae786d5c8"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae6501020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae64b6d88"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae64b6d88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae5fae9f8"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b6ae6525b20"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b6ae6505880"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae64b59d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae5fc8190"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b6ae64f10a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae5fc20d0"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6ae786c2c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae6491a68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae786ce80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae5fc8190"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6ae6491a68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae64c3e40"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6ae64c2bd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6ae5fbb9d0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae64c1888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae5fc8190"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae64bf020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae5fae9f8"/></to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b6ae64bfc58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b6ae64be470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b6ae64fb100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b6ae651f3c0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b6ae6525b20"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65b3818"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65cd3a0"/></to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6ae65571c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6ae65b27a8"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6ae65b27a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6ae71b8980"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b6ae6556e48"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b6ae65b0498"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b6ae65b0498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b6ae71b5628"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae6554448"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae65ae0c0"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae65ae0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae71b32a8"/></to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae658b4a8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae6eea130"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae6eea130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae6f44060"/></to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae657fb98"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae65a3ac0"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae65a3ac0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae65c5318"/></to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae6556300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae65b1928"/></to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae65b1928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae71b6ab0"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65947e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65adc78"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65adc78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65c7348"/></to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae65b0a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae71b5c18"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6ae6588378"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6ae6ee6020"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6ae6ee6020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6ae6f40020"/></to>
    </wire>
    <wire loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65cd3a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae7174dc8"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae659ab48"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae71b1020"/></to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b6ae65d0658"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b6ae71b2400"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae65a5e18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae65c8438"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae65c8438"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6eef4b0"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae65c5318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae7174318"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65c7348"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b6ae6eec3b8"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b6ae65d3a98"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b6ae65c5db0"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b6ae65c5db0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b6ae71d22d0"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae65a2ca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae65c7ca8"/></to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae65c7ca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae6eeb6b0"/></to>
    </wire>
    <wire loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b6ae71a9698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae65cc388"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6ae71af020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b6ae65c90c8"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b6ae65c90c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b6ae7168db8"/></to>
    </wire>
    <wire loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6ae71afcc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b6ae65c9d90"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b6ae65c9d90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b6ae7167ae8"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6ae71ab8d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6ae6d16690"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae71ae368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6eef4b0"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6eef4b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6edf2e8"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae71ad188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6f46b60"/></to>
    </wire>
    <wire loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae71adab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae664faf8"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae664faf8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae66444b0"/></to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b6ae71aa6a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae65bf328"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae65bf328"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae65ba638"/></to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae71a82a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6ae7174dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b6ae7171d28"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae6eeb6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae6f45630"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b6ae71d22d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b6ae71d0550"/></to>
    </wire>
    <wire loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b6ae7168db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b6ae715d490"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae7174318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae716d170"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b6ae65cbd10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae7168748"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae7168748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b6ae715edc8"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b6ae6eec3b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b6ae6f46210"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae65cc388"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae7128e28"/></to>
    </wire>
    <wire loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae7128e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae715f440"/></to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b6ae65cb060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae70f9a40"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6ae70f9a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b6ae715e118"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b6ae65ca3d0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b6ae71661a8"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b6ae71661a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b6ae715c808"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b6ae7167ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b6ae715c188"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b6ae7171d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65c34b8"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65c34b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65bed80"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6ae7164670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae70d9a78"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6ae70d9a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae70d2298"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6ae70d6838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae71d55d8"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6ae71d55d8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b6ae71d1020"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6ae71d1020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae7175080"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6ae7175080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b6ae7172838"/></to>
    </wire>
    <wire loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6ae7172838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae65c0020"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6ae65c0020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae65bb8c0"/></to>
    </wire>
    <wire loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7164020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae7175c80"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae7175c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7171668"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7171668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae71270c0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae71270c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae7123450"/></to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7126020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae65c0c60"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae65c0c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae6ea1168"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6ae6ea1168"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6ae6e9b600"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae65b9488"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae665fe10"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae665fe10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae66466b0"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b6ae65f4558"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b6ae665a8b0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b6ae665a8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b6ae6642318"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b6ae65b7850"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6ae6d98c58"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b6ae65b7850"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6ae6ea2020"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b6ae6ea2020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6ae6e9c498"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b6ae6d98c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6ae6d8d020"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6ae65f3020"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6ae6d95480"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6ae6d95480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6ae6d8d880"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b6ae65f3d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae6d94140"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae6d94140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae6d8c638"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae65eade0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6eef4b0"/></to>
    </wire>
    <wire loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae65e7020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6ae65eb020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6ae7098650"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6ae7098650"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6ae7092d58"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b6ae65db540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae709ac68"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b6ae709ac68"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae6a15858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae65eb7b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b6ae661bb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b6ae65d8cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b6ae65dae68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b6ae6649d28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b6ae6641658"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b6ae663e210"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6ae66f7d58"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6ae66f7d58"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6ae67da060"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b6ae66792c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b6ae67d3e20"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b6ae67d3e20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6810020"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b6ae6678500"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b6ae67cf378"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b6ae67cf378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6803720"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b6ae6677688"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b6ae67cd688"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b6ae67cd688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae67f9720"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b6ae6671cd0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b6ae6833c80"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b6ae6833c80"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b6ae6944b58"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b6ae66a43b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6c817d0"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6c817d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6997020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6ae66a5518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b6ae6c7e020"/></to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6ae6c7e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae66a5bf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6c7c2e8"/></to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6c7c2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6661ca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6c7f3a0"/></to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6c7f3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae66613c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6c7c900"/></to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6c7c900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6667120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6c74e10"/></to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6c74e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6667990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6c72d60"/></to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6c72d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6666230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6c71528"/></to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6c71528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6666ab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6c78470"/></to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6c78470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae66643d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6c78c10"/></to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6c78c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b6ae6674a60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b6ae6c647c0"/></to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b6ae6c647c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6674128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6c64020"/></to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6c64020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6664c48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6c74470"/></to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6c74470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6ae6663530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b6ae6c76470"/></to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6ae6c76470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6663da0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6c75470"/></to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6c75470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b6ae66a3e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6cb3e60"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6cb3e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6997020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b6ae66a3140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6ce4558"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6ce4558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6997020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6ae666c1b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6ae6d16690"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b6ae6682998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b6ae6d18cd8"/></to>
    </wire>
    <wire loc="23:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b6ae6d18cd8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b6ae6cfc190"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b6ae66983f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b6ae6699598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae66f73e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae66f07d8"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae66f07d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae788f560"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6ae67da060"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6ae788fd48"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae788f560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae78870c0"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6ae788fd48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6ae7882830"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae78870c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae78fb7a8"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b6ae787cce8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6ae78878a8"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6ae78878a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6ae78fa020"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae787ead0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae6760738"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae6760738"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae67a3878"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae78f6020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae79007d8"/></to>
    </wire>
    <wire loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae79007d8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae78f55b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae78ffd60"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae78ffd60"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae78f48c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae78fd020"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae78fd020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2b6ae5baeba8"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2b6ae5ba5d00"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2b6ae5bab588"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2b6ae5ba3868"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2b6ae5baaa20"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2b6ae5bbc6e0"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2b6ae5ba8020"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2b6ae5bbb558"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2b6ae5ba7400"/></to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2b6ae5bba3d0"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2b6ae5ba6898"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2b6ae5bb9120"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b6ae6787b10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b6ae634fdf0"/></to>
    </wire>
    <wire loc="73:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b6ae67d1020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae680c720"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b6ae67d01b8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6807020"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b6ae66f8c28"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae67cb7d0"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b6ae67ce4f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae67fd020"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae67c9908"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b6ae5d28978"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae680f120"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2b6ae5d5c568"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae680b908"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b6ae5d2ab00"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae6806120"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b6ae5d18020"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae6802908"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2b6ae5d54568"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae67fc120"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b6ae5d5e668"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae67f8908"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2b6ae5d56568"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b6ae68330c8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6ae682b020"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6ae6832898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b6ae6935a78"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae682ba90"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2b6ae5bac060"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2b6ae681ad60"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2b6ae5bb7020"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6819b48"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2b6ae5d5e668"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b6ae6943780"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b6ae68566f0"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b6ae68566f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2b6ae68423e0"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2b6ae69345f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b6ae68587b8"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b6ae68587b8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2b6ae6846470"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b6ae684b6f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2b6ae68843e0"/></to>
    </wire>
    <wire loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b6ae68526f0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2b6ae683f3e0"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b6ae68506f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2b6ae683d3e0"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b6ae685c6f0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2b6ae68443e0"/></to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b6ae684d6f0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b6ae68873e0"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b6ae68556f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2b6ae68413e0"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b6ae684a6f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2b6ae68833e0"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b6ae684f6f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2b6ae683c3e0"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b6ae68576f0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2b6ae68433e0"/></to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b6ae684c6f0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2b6ae68853e0"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b6ae68546f0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2b6ae68403e0"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b6ae68516f0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2b6ae683e3e0"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b6ae685d6f0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2b6ae68453e0"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b6ae684e6f0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2b6ae68883e0"/></to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b6ae6c7f9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6c73d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b6ae6c6b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b6ae6c725c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6c5f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b6ae6c617c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6c7ec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b6ae6c67c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6c637c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae6c6dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b6ae6c6e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6c80430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6997cb0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6997cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6991df8"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6c7b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b6ae6c7bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae6c65060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae6c7a3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6c61020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b6ae6c67470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae6c76c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae6c68470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b6ae6c6bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae6c68c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6c5f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b6ae6c60020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b6ae6c6ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b6ae6c69470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae6c63020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae6c71cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6c5e020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6ae6c80d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b6ae6c79c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae6c75c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae6c6c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae6c6cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6c735f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6c7a9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b6ae6c79638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6c7b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae6c65800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b6ae6c607c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae6c6d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b6ae6c69c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b6ae6c7e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae6c6f4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b6ae6c79020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b6ae6c6fc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b6ae6c66470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6c5ec58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae698de50"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae698a040"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae698ad40"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6997020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae698ec10"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6989a98"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b6ae6985838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae6a18100"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b6ae6a18100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae6a15858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b6ae69881e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae69f7cf0"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae69f7cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae79da020"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b6ae6987d18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b6ae69f6948"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b6ae69f6948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b6ae79d9430"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6985020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6c48020"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6c48020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae79d85b8"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae6984730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b6ae69795d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b6ae6a15858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae6a0d1c8"/></to>
    </wire>
    <wire loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae79d85b8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6a354d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b6ae79d9430"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b6ae6a37e68"/></to>
    </wire>
    <wire loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae79da020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6a384e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae79dac18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae79d0060"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae79d0060"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae6b4b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b6ae6a37e68"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b6ae6a85020"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b6ae79d9a08"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b6ae6a364e0"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b6ae6a364e0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b6ae6a855f8"/></to>
    </wire>
    <wire loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b6ae6a32498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b6ae79d8d18"/></to>
    </wire>
    <wire loc="115:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae79c20c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6a376c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b6ae6a33270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae79d1418"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae79d1418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6b4ece8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae6a32c40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae79ca740"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae79ca740"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6b4f2b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6a376c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6a86860"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6a354d0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6a841e0"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6a384e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6a87ae8"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b6ae6a83860"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b6ae6a32498"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2b6ae6a84ac0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2b6ae6a33270"/></to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae6a7e780"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae6a32c40"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2b6ae6a82020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae6a76bd8"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae6a76bd8"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b6ae6ac1350"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae6a7c020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2b6ae6a7b5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b6ae6ac5d68"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b6ae6abc5d8"/></to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae6ac5528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6abdbf0"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b6ae6ae66e0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b6ae5d93970"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2b6ae6ae4658"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2b6ae5d8f660"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b6ae6ae2558"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b6ae5d8d560"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2b6ae6ae0558"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2b6ae5d86560"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2b6ae6ade558"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2b6ae5d89560"/></to>
    </wire>
    <wire loc="14:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2b6ae6aeba48"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b6ae6b894e8"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b6ae79c9020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b6ae6b4e1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b6ae79c95f8"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b6ae6b95b38"/></to>
    </wire>
    <wire loc="11:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b6ae6b95b38"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2b6ae6b894e8"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae79ce020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae6a76bd8"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae79d07c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6b4b7f0"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6b4b7f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6b9c700"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6b4a570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae79c20c0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae6b4b020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae6b9d388"/></to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae6b9d388"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae79f7e38"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6b4f2b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6b49b70"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6b4ece8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6b9e558"/></to>
    </wire>
    <wire loc="105:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6b9e558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae79f7140"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2b6ae6b4e1c8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2b6ae6ba3590"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6b9c700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae79f5268"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6b9b020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6b4a570"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6ba2a48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6b9c700"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2b6ae6ba3bc8"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae6ac5528"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b6ae6ba2470"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b6ae6ac5d68"/></to>
    </wire>
    <wire loc="107:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae6b9dac8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae79f65b8"/></to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae79f5b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6b9b020"/></to>
    </wire>
    <wire loc="111:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6ae79f42b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b6ae79fa120"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6ae79f22e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2b6ae6b81060"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2b6ae6ac1350"/></to>
    </wire>
    <wire loc="18:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2b6ae6b7d868"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2b6ae5d93970"/></to>
    </wire>
    <wire loc="19:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2b6ae6b7b7e0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2b6ae5d8d560"/></to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6ca6a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b6ae6caf100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6ca9a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6ca3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b6ae6c9cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b6ae6ca3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6c8f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b6ae6c922e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6cae3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b6ae6c98470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6c932e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6ae6ca8a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6ca7a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae6c9d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b6ae6ca0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6ca2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6cb2a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6997cb0"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6cadc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b6ae6cac2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae6c96a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae6caca00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6c93a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6cad020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b6ae6c99c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae6ca72e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6ca82e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6cb0a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae6c9ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b6ae6c9b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae6c99470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6c91a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b6ae6c92a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b6ae6c9f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b6ae6c9bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae6c94a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae6ca1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6c8fa88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6ae6cb0470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b6ae6ca92e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae6ca62e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae6c9dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6ca2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae6c9c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6ca4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6ae6caf718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6ca4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6caa060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b6ae6caac90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b6ae6c942e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6c95a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6cad638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae6c952e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b6ae6c912e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae6c9fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b6ae6c9a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b6ae6cafd30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6cae9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae6ca1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b6ae6caa678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b6ae6ca0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b6ae6c98c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6cec780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6cd7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b6ae6ce2900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6cdb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6cd6d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b6ae6cce470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b6ae6cd55c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6cc27c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b6ae6cc47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6ce1c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b6ae6ccac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6cc57c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6ae6cd9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6cd8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae6cd0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b6ae6cd1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6cd5d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6ce32a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6997cb0"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6cde638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b6ae6cdec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae6cc8060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae6cdd3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6cc4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6cdf900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b6ae6cca470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae6cd9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6cdbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6ce22e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae6ccb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b6ae6ccec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae6ccbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6cc2020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b6ae6cc3020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b6ae6cd1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b6ae6ccc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae6cc5020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae6cd3cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6cc1020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6ae6ce3bd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b6ae6cdcc50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae6cd8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae6ccf470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6cd3528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae6ccfc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6cd7e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6ae6ce1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6cd65f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6cdd9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b6ae6cdc638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b6ae6cc77c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6cc7020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6cde020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae6cc8800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b6ae6cc37c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae6cd0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b6ae6cccc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b6ae6ce1638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6cdf2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae6cd24f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b6ae6cdc020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b6ae6cd2c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b6ae6cc9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6cc1c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b6ae6cf9648"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b6ae6d00ad0"/></to>
    </wire>
    <wire loc="20:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2b6ae6d00ad0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b6ae6d4ab08"/></to>
    </wire>
    <wire loc="16:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b6ae6d443f8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b6ae6cedba8"/></to>
    </wire>
    <wire loc="21:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b6ae6cedba8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b6ae6d31108"/></to>
    </wire>
    <wire loc="17:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2b6ae6d44c40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6ae6da2020"/></to>
    </wire>
    <wire loc="18:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b6ae6d35530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2b6ae6d36378"/></to>
    </wire>
    <wire loc="11:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2b6ae6d36378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6daa4e0"/></to>
    </wire>
    <wire loc="18:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b6ae6d2c748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b6ae6d33b78"/></to>
    </wire>
    <wire loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b6ae6d33b78"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b6ae6d6a920"/></to>
    </wire>
    <wire loc="19:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2b6ae6d31968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b6ae6d35530"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae6d5cd10"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b6ae6d55178"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b6ae6d55178"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae6d52740"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae6d4f8c0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2b6ae5b95b88"/></to>
    </wire>
    <wire loc="9:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae6da95f8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2b6ae5d37568"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b6ae6d93cc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b6ae6d8b5b0"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b6ae6d92458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b6ae6d8bcf8"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b6ae6d896c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6ae66f7d58"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b6ae6d7e8b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b6ae66f8c28"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b6ae6d7dc98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b6ae67d3e20"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b6ae6ddee20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b6ae67ce4f0"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b6ae6ddcd60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b6ae68330c8"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b6ae6dda020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6e6e7d0"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae6e6e7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6997020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6ddacb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6e6d430"/></to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6e6d430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6997cb0"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6ae6dd6670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b6ae6e6dd58"/></to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6ae6e6dd58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b6ae6dd6d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b6ae6e6b638"/></to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b6ae6e6b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6dd5478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6e6bc50"/></to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6e6bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6dd5b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6e68638"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6e68638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6dd7da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6e62470"/></to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6e62470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6dd8720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6e4bc58"/></to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6e4bc58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6dd7538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6e507c0"/></to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6e507c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6dd43d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6e65c10"/></to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6e65c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6dd3558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6e605f8"/></to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6e605f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6dd3de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6e60d98"/></to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6e60d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b6ae6dd4e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b6ae6e66020"/></to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b6ae6e66020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6dd16f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6e4c020"/></to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6e4c020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b6ae6dd2650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b6ae6e4e7c0"/></to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b6ae6e4e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b6ae6dd2e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b6ae6e4d020"/></to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b6ae6e4d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b6ae6dcb750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b6ae6ea2808"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b6ae6ea2808"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b6ae6e9cc80"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6d86940"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6eef4b0"/></to>
    </wire>
    <wire loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6d847e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b6ae6d83460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae6eea130"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6ae6ddc1d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6ae6ee3ac8"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6ae6ee3ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6ae6f3dac8"/></to>
    </wire>
    <wire loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae6dcf0c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6e61470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b6ae6e6c9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6e65470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b6ae6e58470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b6ae6e5f5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6e4c7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b6ae6e54c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6ae6e64470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae6e5ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b6ae6e5b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6e5fd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b6ae6e68c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae6e52060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae6e673a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6e4e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6e6a900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b6ae6e54470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae6e64c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6e6c3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae6e55470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b6ae6e58c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae6e55c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b6ae6e5bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b6ae6e57470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae6e50020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae6e5ecc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6e4b020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b6ae6e66c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae6e62c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae6e59470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6e5e528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae6e59c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6e61e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6ae6e6b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6e679b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b6ae6e66638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b6ae6e517c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6e51020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6e68020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae6e52800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b6ae6e4d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae6e5a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b6ae6e57c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6e6a2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae6e5c4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b6ae6e5cc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b6ae6e53470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b6ae6ea18c0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b6ae6e9bd58"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae6e87a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b6ae6e9a420"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b6ae67d3e20"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b6ae6e99688"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b6ae67d1020"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b6ae6e98818"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b6ae67d01b8"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6ae6e97a30"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6ae6832898"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b6ae6e966c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae7076a10"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6ae7076a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6ae6997020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6e95518"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae7053a88"/></to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae7053a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6e94a88"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae70702e8"/></to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae70702e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b6ae6e94398"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b6ae706f020"/></to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b6ae706f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6e93328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6eef4b0"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6e92188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b6ae6e90b80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae6eea130"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae6e92af0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae664faf8"/></to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6e8cdc8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae7068a88"/></to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae7068a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6e8b6a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae70672e8"/></to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae70672e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6e8c6c8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae706fd50"/></to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae706fd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6e89108"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae70532e8"/></to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae70532e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b6ae6e8a020"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b6ae70552e8"/></to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b6ae70552e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b6ae6e8a850"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b6ae7055a88"/></to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b6ae7055a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6e89970"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae7056a88"/></to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae7056a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6ae6e87210"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b6ae70740a0"/></to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6ae70740a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b6ae6e7ce38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae6f52720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae6760738"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b6ae6f388b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6ae6f53528"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b6ae6f3ab20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6ae6f9c5e0"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b6ae6f9c5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6ae702de18"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6ae6faa350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae703a5e0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae6fab080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae6f98cf8"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae6f98cf8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae7b82358"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b6ae7034858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6ae701aab0"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6ae7015c70"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6ae6fd9538"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6ae6fd9538"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6ae7b7ca20"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae702a0a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae6f8a150"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae6f8a150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae6f85a60"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae7b82358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae7b677a8"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b6ae7b76d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6ae7b82b40"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6ae7b82b40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6ae7b66020"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6ae7b79b38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6ae6f8a150"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae7b63020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae7b6d5e0"/></to>
    </wire>
    <wire loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae7b6d5e0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae7b625b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae7b6cbd8"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae7b6cbd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae7b608c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae7b6a020"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae7b6a020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b6ae6f83c80"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b6ae634fdf0"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b6ae7011cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b6ae702f930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6ae7022e28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6ae701ce38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6ae701ce38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6ae6faa350"/></to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae70697c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b6ae7074cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae706d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2b6ae7060a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b6ae7067a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae7071020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2b6ae705b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae70562e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6ae706b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae706a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae70612e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b6ae7063a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae70652e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae7075740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6997cb0"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae7070900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae705aa38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae706f738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae7071c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2b6ae705ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae706a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae706b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae70746b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae705da88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2b6ae705e2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae705c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae7054a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b6ae70622e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2b6ae705ea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae7057a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae70642e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b6ae706d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae7069020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae7061a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae7065a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae70602e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae70682e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6ae7073368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b6ae706e9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b6ae70572e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae7059a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae70592e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b6ae70542e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae7062a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2b6ae705d2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b6ae7073980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae7071638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae7064a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b6ae706e3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b6ae70632e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2b6ae705ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae7052780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b6ae7096668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b6ae7095d80"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6ae709c868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6ae7095568"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6ae7091558"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="IdReader" scoped="" ref="0x2b6ae7090c88"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2b6ae6d00ad0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6ae70d1578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b6ae70d6838"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b6ae70d02a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae70d3468"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b6ae70d3468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae6a15858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6ae70cf080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6ae7098650"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae70cf848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b6ae7127788"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b6ae7123b18"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7122818"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7126020"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae7122e58"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6ae715b528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b6ae7164670"/></to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6ae715a358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7164020"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae715a970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6eef4b0"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae71597a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b6ae71571c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b6ae717e2a8"/></to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b6ae719eac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b6ae7173928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae716fd50"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b6ae716fd50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6ae6a15858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae71cd3c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65c7348"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae7278020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae6554448"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae7278bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6595080"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae72733b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae6554448"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae7272020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6595080"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae726f678"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae6554448"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae726e268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6595080"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae726b928"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae6554448"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae726a578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6595080"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6ae7267c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6ae6554448"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6ae7265888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6595080"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/MoteClockC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MoteClockP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="3:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wwhuang/git/tinyos-lab11/tos/system/QueueC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OpoBaseP" loc="4:OpoBaseP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6ae621e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6ae621e020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
        <short>&#10; Random interface wired to M twist PRNG.</short>
        <long>&#10; Random interface wired to M twist PRNG.&#10;&#10; @author  William Huang&#10; @date    2013&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMtC" loc="16:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OpoBaseC.OpoReceive" loc="43(OpoBaseC.OpoReceive):/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OpoBaseC.BlinkReceive" loc="43(OpoBaseC.BlinkReceive):/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OpoBaseC.VisualReceive" loc="43(OpoBaseC.VisualReceive):/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OpoBaseC.RxReceive" loc="43(OpoBaseC.RxReceive):/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:23">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OpoBaseC.ADCReceive" loc="43(OpoBaseC.ADCReceive):/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2b6ae5bc7878" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2b6ae5bc7bf0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2b6ae5bc6020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2b6ae5bc6378" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2b6ae5bc66d0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2b6ae5bc6a20" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2b6ae5bc6d88" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2b6ae5bc5150" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2b6ae5bc5500" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2b6ae5bf9748" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2b6ae5bf9af8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2b6ae5dc3998" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2b6ae5dc3d20" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2b6ae5dc2108" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2b6ae5dc2490" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2b6ae5dc27e0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b6ae6349d28" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b6ae6349d28"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b6ae63735a0" loc="89:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b6ae63a0020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b6ae63c28e8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b6ae646e310" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b6ae6469c40" loc="43:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b6ae648cda8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b6ae64ed270" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b6ae64ed270"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b6ae64ed5c8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b6ae67447d8" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b6ae67447d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b6ae67a2230" loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b6ae67a2230"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b6ae67a2998" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b6ae67a2998"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b6ae67a2d60" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b6ae67a2d60"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b6ae67a0528" loc="58:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b6ae67a0528"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b6ae67a08d0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b6ae679f0a8" loc="60:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b6ae679f0a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b6ae675eb00" loc="52:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b6ae675eb00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b6ae67802b0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b6ae67802b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b6ae6780678" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b6ae6780678"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b6ae6780df0" loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b6ae6780df0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b6ae67c81d8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae6d6bc48" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae6d6bc48"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6ae6d68398" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae6d68398"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae6f51110" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae6f51110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae6fd47c0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae6fd47c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae700c210" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae700c210"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b6ae700c520" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b6ae727f7f8" loc="43:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b6ae5b2a808" loc="58:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5b2a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b2ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6ae5b2b3e0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b6ae5b2b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6ae5b2b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae5b2d7e8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae5b2d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b2db38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b6ae5b25480" loc="49:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2b6ae5b25480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b257d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae5b286e8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae5b286e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b28a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2b6ae5b28df8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b6ae5b28df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b25170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b6ae5b25ae0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2b6ae5b25ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b25e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2b6ae5b37148" loc="39:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b6ae5b37148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b37498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b6ae5b442b8" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6ae5b442b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b6ae5b321a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b6ae5b44790"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b6ae5b44918"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b6ae5b44aa0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b6ae5b44608"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b6ae5b44c28"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b6ae5b44db0"/>
        <function-ref name="initClocks" scoped="" ref="0x2b6ae5b32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae5b33020" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae5b33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b33370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b6ae5b4eb60" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6ae5b4eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b6ae5b4dad8"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b6ae5b4d1a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b6ae5b4d330"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b6ae5b4d4b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b6ae5b4d020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b6ae5b4d640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b6ae5b4d7c8"/>
        <function-ref name="initClocks" scoped="" ref="0x2b6ae5b4d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b6ae5b4de08" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6ae5b4de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6ae5b4c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae5b4e4f0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae5b4e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5b4e840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2b6ae5b93a20" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2b6ae5b93a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5b93d70"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5b8b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5b8b1a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5b8b330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5b8b4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5b8b640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5b8b7c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5b8b950"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5b8bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2b6ae5baeba8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2b6ae5baeba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5bad020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5bad1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5bad330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5bad4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5bad640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5bad7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5bad950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5badad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5badc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2b6ae5b9c3d0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2b6ae5b9c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5b9c720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5b9c8a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5b9ca30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5b9cbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5b9cd40"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5b9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2b6ae5bb5020" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2b6ae5bb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bb5370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5bb54f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5bb5680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bb5808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bb5990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5bb5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2b6ae5b89d40" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2b6ae5b89d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5b9e0d8"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5b9e260"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5b9e3e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5b9e570"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5b9e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2b6ae5bbc6e0" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2b6ae5bbc6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bbca30"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5bbcbb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5bbcd40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5bbb020"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bbb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2b6ae5bb1020" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2b6ae5bb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bb1370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5bb14f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5bb1680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bb1808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bb1990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5bb1b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2b6ae5ba8020" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2b6ae5ba8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5ba8370"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5ba84f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5ba8680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5ba8808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5ba8990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5ba8b18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5ba8ca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5ba8e28"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5ba7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2b6ae5b8c1b0" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2b6ae5b8c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5b8c500"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5b8c688"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5b8c810"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5b8c998"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5b8cb20"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5b8cca8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5b8ce30"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5b94020"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5b941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2b6ae5bb7020" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2b6ae5bb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bb7370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5bb74f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5bb7680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bb7808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bb7990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5bb7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2b6ae5ba4a70" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2b6ae5ba4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5ba4dc0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5ba3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5ba31a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5ba3330"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5ba34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2b6ae5bac060" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2b6ae5bac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5bac4b0"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5bac638"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5bac7c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5bac948"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5bacad0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5bacc58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5bacde0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5bab020"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5bab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2b6ae5b9b3d0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2b6ae5b9b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5b9b720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5b9b8a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5b9ba30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5b9bbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5b9bd40"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5baf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2b6ae5bb4020" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2b6ae5bb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bb4370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5bb44f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5bb4680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bb4808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bb4990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5bb4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2b6ae5bab588" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2b6ae5bab588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5bab8d8"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5baba60"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5babbe8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5babd70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5baa020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5baa1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5baa330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5baa4b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5baa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2b6ae5b9eaa8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2b6ae5b9eaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5b9edf8"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5b9d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5b9d1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5b9d330"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5b9d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2b6ae5b95b88" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2b6ae5b95b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5b82020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5b821a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5b82330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5b824b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5b82640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5b827c8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5b82950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5b82ad8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5b82c60"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5b82de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5b81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2b6ae5bbb558" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2b6ae5bbb558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bbb8a8"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5bbba30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5bbbbb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5bbbd40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2b6ae5b94588" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2b6ae5b94588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5b948d8"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5b94a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5b94be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5b94d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5b93020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5b931a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5b93330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5b934b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5b93640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2b6ae5ba7400" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2b6ae5ba7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5ba7750"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5ba78d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5ba7a60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5ba7be8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5ba7d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5ba6020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5ba61a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5ba6330"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5ba64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2b6ae5b974e0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2b6ae5b974e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5b97830"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5b979b8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5b97b40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5b97cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5b97e50"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5b9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2b6ae5bb6020" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2b6ae5bb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bb6370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5bb64f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5bb6680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bb6808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bb6990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5bb6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2b6ae5b89020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2b6ae5b89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5b89370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5b894f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5b89680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5b89808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5b89990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2b6ae5ba3868" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2b6ae5ba3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5ba3bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5ba3d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5bbc020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5bbc1a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bbc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2b6ae5bb2020" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2b6ae5bb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bb2370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5bb24f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5bb2680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bb2808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bb2990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5bb2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2b6ae5baaa20" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2b6ae5baaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5baad70"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5ba9020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5ba91a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5ba9330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5ba94b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5ba9640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5ba97c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5ba9950"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5ba9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2b6ae5baf398" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2b6ae5baf398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5baf6e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5baf870"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5baf9f8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5bafb80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5bafd08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bae020"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5bae1a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bae330"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5bae4b8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5bae640"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5bae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2b6ae5bba3d0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2b6ae5bba3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bba720"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5bba8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5bbaa30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5bbabb8"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bbad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2b6ae5bb8060" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2b6ae5bb8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bb83b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5bb8538"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5bb86c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bb8848"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bb89d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5bb8b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2b6ae5bb9120" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2b6ae5bb9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5bb9670"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5bb97f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5bb9980"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5bb9b08"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bb9c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2b6ae5ba5d00" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2b6ae5ba5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5ba40a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5ba4228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5ba43b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5ba4538"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5ba46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2b6ae5ba6898" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2b6ae5ba6898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5ba6be8"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5ba6d70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5ba5020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5ba51a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5ba5330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5ba54b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5ba5640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5ba57c8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5ba5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b6ae5be69d0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b6ae5be69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5be6d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b6ae5be63b8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b6ae5be63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5be6708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b6ae5be5020" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b6ae5be5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5be5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b6ae5be7d48" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5be7d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5be60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6ae5be9698" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5be9698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5be99e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5be9b70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5be9cf8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5be9e80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5be7030"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5be71b8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5be7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5be74c8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5be7650"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5be77d8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5be7960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b6ae5bfb3a0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b6ae5bfb3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bfb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b6ae5bfcd50" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b6ae5bfcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bfb0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b6ae5bfb9b8" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b6ae5bfb9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bfbd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b6ae5bfc718" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5bfc718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5bfca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6ae5bfd020" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5bfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5bfd370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5bfd4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5bfd680"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5bfd808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5bfd990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5bfdb18"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5bfdca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5bfde28"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5bfc020"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5bfc1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5bfc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c3ec58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c3ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c3d020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c3d1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c3d330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c3d4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c3d640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c3d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5bf7c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5bf7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c3f020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c3f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c3f330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c3f4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c3f640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c3f7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c3f950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c3fad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c3fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c3b100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c3b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c3b450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c3e020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c3e370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c3e4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c3e680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c3e808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c3e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c3da90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c3da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c3dde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c3c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c3c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c3c330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c3c4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c3c640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c3c7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c3c950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c3cad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c3cc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c3cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c52c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c52c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c51020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c511a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c51330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c514b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c51640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c517c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c39c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c39c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c53020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c531a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c53330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c534b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c53640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c537c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c53950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c53ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c53c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c4f100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c4f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c4f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c52020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c52370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c524f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c52680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c52808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c52990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c51a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c51a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c51de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c50020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c501a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c50330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c504b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c50640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c507c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c50950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c50ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c50c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c50de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c4bc58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c4bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c4a020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c4a1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c4a330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c4a4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c4a640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c4a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c4dc80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c4dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c4c020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c4c1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c4c330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c4c4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c4c640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c4c7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c4c950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c4cad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c4cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c48100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c48100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c48450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c4b020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c4b370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c4b4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c4b680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c4b808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c4b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c4aa90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c4aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c4ade0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c49020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c491a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c49330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c494b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c49640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c497c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c49950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c49ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c49c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c49de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c60c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c60c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c5f020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c5f1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c5f330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c5f4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c5f640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c5f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c63c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c63c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c61020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c611a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c61330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c614b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c61640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c617c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c61950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c61ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c61c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c5d100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c5d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c5d450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c60020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c60370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c604f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c60680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c60808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c60990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c5fa90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c5fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c5fde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c5e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c5e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c5e330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c5e4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c5e640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c5e7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c5e950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c5ead8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c5ec60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c5ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c59c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c59c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c58020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c581a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c58330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c584b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c58640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c587c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c5bc80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c5bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c5a020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c5a1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c5a330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c5a4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c5a640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c5a7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c5a950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c5aad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c5ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c56100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c56100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c56450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c59020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c59370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c594f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c59680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c59808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c59990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c58a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c58a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c58de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c57020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c571a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c57330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c574b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c57640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c577c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c57950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c57ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c57c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c57de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c70c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c70c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c6e020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c6e1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c6e330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c6e4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c6e640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c6e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c72c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c72c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c71020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c711a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c71330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c714b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c71640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c717c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c71950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c71ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c71c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c6c100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c6c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c6c450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c70020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c70370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c704f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c70680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c70808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c70990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c6ea90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c6ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c6ede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c6d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c6d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c6d330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c6d4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c6d640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c6d7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c6d950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c6dad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c6dc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c6dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c68c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c68c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c67020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c671a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c67330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c674b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c67640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c6ac80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c6ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c69020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c691a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c69330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c694b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c69640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c697c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c69950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c69ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c69c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c65100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c65100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c65450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c68020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c68370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c684f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c68680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c68808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c68990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c67a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c67a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c67de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c66020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c661a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c66330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c664b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c66640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c667c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c66950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c66ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c66c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c66de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c7fc58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c7fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c7d020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c7d1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c7d330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c7d4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c7d640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c7d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c81c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c81c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c80020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c801a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c80330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c804b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c80640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c807c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c80950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c80ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c80c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c7b100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c7b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c7b450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c7f020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c7f370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c7f4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c7f680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c7f808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c7f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c7da90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c7da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c7dde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c7c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c7c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c7c330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c7c4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c7c640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c7c7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c7c950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c7cad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c7cc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c7cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c77c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c77c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c76020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c761a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c76330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c764b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c76640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c79c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c79c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c78020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c781a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c78330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c784b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c78640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c787c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c78950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c78ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c78c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c74100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c74100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c74450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c77020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c77370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c774f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c77680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c77808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c77990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c76a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c76a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c76de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c75020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c751a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c75330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c754b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c75640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c757c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c75950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c75ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c75c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c75de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae5c8ec58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae5c8ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c8c020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae5c8c1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae5c8c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c8c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c8c640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae5c8c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6ae5c90c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6ae5c90c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae5c8f020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae5c8f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c8f330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae5c8f4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae5c8f640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c8f7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae5c8f950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae5c8fad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae5c8fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6ae5c8a100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6ae5c8a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c8a450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6ae5c8e020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6ae5c8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae5c8e370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae5c8e4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae5c8e680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae5c8e808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c8e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6ae5c8ca90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae5c8ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5c8cde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae5c8b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae5c8b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5c8b330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae5c8b4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae5c8b640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae5c8b7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae5c8b950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae5c8bad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae5c8bc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae5c8bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2b6ae5c85b60" loc="7:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2b6ae5c85b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2b6ae5c86520" loc="4:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2b6ae5c86520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c86870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2b6ae5c86c68" loc="5:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2b6ae5c86c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2b6ae5c85418" loc="6:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2b6ae5c85418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae5c85768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b6ae5b07130" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6ae5b07130"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6ae5b07480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b6ae5a246c0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b6ae5a246c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6ae5a24a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b6ae5b09b08" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2b6ae5b09b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6ae5b09e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2b6ae5b35aa8" loc="39:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6ae5b35aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b6ae5cb2950"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b6ae5cb2020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b6ae5cb21a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b6ae5cb2330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b6ae5b35df8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b6ae5cb24b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b6ae5cb2640"/>
        <function-ref name="initClocks" scoped="" ref="0x2b6ae5cb27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6ae5cb3af0" loc="3:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubInit" scoped="" ref="0x2b6ae5cb3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5cb3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae5cb3460" loc="2:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae5cb3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5cb37b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b6ae5cdb418" loc="60:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6ae5cdb418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5cdb768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6ae5b2cc70" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b6ae5b2cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6ae5cdc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b6ae5cdcce0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2b6ae5cdcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5cdb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b6ae5cdc308" loc="58:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b6ae5cdc308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5cdc658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6ae5cdc7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6ae5cdc968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6ae57fcca0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae57fcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae57bb020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae57bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6ae57f5390" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b6ae57f5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae57f56e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6ae57f5868"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6ae57f59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6ae5ade4e8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b6ae5ade4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae5ade838"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae5ade9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b6ae5af4998" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b6ae5af4998"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6ae5af4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6ae5adf680" loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b6ae5adf680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5adf9d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6ae5adfb58"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6ae5adfce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6ae5ce6c38" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae5cf0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae5cf01a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae5cf0330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae5cf04b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae5cf0640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5cf07c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae5cf0950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae5cef020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5cf0ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae5cf0c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae5cf0de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b6ae5cfb7c8" loc="50:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b6ae5cfb7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5cfbb18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5cfbca0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5cfbe28"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d01020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d01330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d014b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d01640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae5ce3020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae5ce3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5ce3370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b6ae5d01958" loc="51:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b6ae5d01958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d01ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d01e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d00020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d001a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d00330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d004b8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d00640"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d007c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6ae5ce35e8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae5ce35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae5ce3938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae5ce3ac0"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae5ce3c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae5ce3dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae5ce2020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5ce21a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae5ce2330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae5ce2950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5ce24b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae5ce2640"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae5ce27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b6ae5d00ae0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b6ae5d00ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d00e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5cfa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5cfa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5cfa330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5cfa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5cfa640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5cfa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5cfa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b6ae5d1f020" loc="5:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b6ae5d1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d1f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d1f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d1f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d1f808"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d1f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d1fb18"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d1fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d1fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b6ae5d1e190" loc="6:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b6ae5d1e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d1e4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d1e668"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d1e7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d1e978"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d1eb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d1ec88"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d1ee10"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b6ae5d1c4a0" loc="10:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae5d1c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae5d1c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b6ae5d1d338" loc="7:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b6ae5d1d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d1d688"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d1d810"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d1d998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d1db20"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d1dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d1de30"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d1c020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d1c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b6ae5d28978" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b6ae5d28978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d28cc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d28e50"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d27020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d271a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d27330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d274b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d27640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d277c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d27950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d27ad8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d27c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d27de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d26020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d262a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d26430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b6ae5d33568" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b6ae5d33568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d338b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d33a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d33bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d33d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d32020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d32330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d324b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d32640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d327c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d32950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d32ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d32c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d51020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2b6ae5d917d0" loc="145:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2b6ae5d917d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d91b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d91ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d91e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d90020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d901a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d90330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d904b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d90640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d907c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d90950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d90ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d90c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d90de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d8f120"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d8f2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2b6ae5db0558" loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2b6ae5db0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5db08a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5db0a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5db0bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5db0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5daf020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5daf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5daf330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5daf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5daf640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5daf7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5daf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5dafad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5dafc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5dae020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5dae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2b6ae5d8f660" loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2b6ae5d8f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d8f9b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d8fb38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d8fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d8fe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d8e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d8e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d8e330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d8e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d8e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d8e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d8e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d8ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d8ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d8d020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d8d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2b6ae5d4f568" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2b6ae5d4f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d4f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d4fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d4fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d4fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d4e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d4e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d4e330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d4e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d4e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d4e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d4e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d4ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d4ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d4d020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d4d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2b6ae5d5c568" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2b6ae5d5c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d5c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d5ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d5cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d5cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d5b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d5b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d5b330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d5b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d5b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d5b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d5b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d5bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d5bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d5a020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2b6ae5d69568" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2b6ae5d69568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d698b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d69a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d69bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d69d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d68020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d68330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d68640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d687c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d68950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d68ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d68c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d67020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2b6ae5d7b568" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2b6ae5d7b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d7b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d7ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d7bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d7bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d7a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d7a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d7a330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d7a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d7a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d7a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d7a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d7aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d7ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d79020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2b6ae5d89560" loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2b6ae5d89560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d898b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d89a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d89bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d89d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d87020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d87330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d874b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d87640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d877c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d87950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d87ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d87c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d86020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2b6ae5d9a558" loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2b6ae5d9a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d9a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d9aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d9abb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d9ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d99020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d99330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d99640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d997c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d99950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d99ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d99c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d98020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2b6ae5da8560" loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2b6ae5da8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5da88b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5da8a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5da8bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5da8d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5da7020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5da71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5da7330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5da74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5da7640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5da77c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5da7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5da7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5da7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5dc8020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5dc81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b6ae5d22568" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b6ae5d22568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d228b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d22a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d22bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d22d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d41020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d41330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d414b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d41640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d417c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d41950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d41ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d41c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d40020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2b6ae5d86560" loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2b6ae5d86560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d868b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d86a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d86bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d86d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d85020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d85330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d854b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d85640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d857c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d85950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d85ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d85c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5da6020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5da61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b6ae5d3d568" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b6ae5d3d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d3d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d3da40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d3dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d3dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d3c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d3c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d3c330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d3c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d3c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d3c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d3c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d3cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d3cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d3b020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d3b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2b6ae5d49568" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2b6ae5d49568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d498b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d49a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d49bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d49d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d48020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d48330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d484b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d48640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d487c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d48950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d48ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d48c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d47020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2b6ae5d56568" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2b6ae5d56568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d568b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d56a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d56bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d56d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d55020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d55330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d554b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d55640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d557c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d55950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d55ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d55c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d54020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2b6ae5d63568" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2b6ae5d63568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d638b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d63a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d63bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d63d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d84020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d84330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d844b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d84640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d847c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d84950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d84ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d84c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d83020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2b6ae5d75568" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2b6ae5d75568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d758b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d75a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d75bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d75d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d74020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d74330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d744b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d74640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d747c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d74950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d74ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d74c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d95020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b6ae5d2cc88" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b6ae5d2cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d2b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d2b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d2b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d2b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d2b640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d2b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d2b950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d2bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d2bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d2bde8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d2a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d2a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d2a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d2a5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d2a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b6ae5d37568" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b6ae5d37568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d379b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d37b40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d37cc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d37e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d36020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d36330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d364b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d36640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d367c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d36950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d36ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d36c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d35020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2b6ae5d43568" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2b6ae5d43568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d438b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d43a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d43bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d43d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d42020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d42330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d424b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d42640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d427c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d42950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d42ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d42c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d62020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2b6ae5d93970" loc="144:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2b6ae5d93970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d93cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d93e48"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d92020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d921a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d92330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d924b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d92640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d927c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d92950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d92ad8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d92c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d92de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d91020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d912a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d91430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2b6ae5db6558" loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2b6ae5db6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5db68a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5db6a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5db6bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5db6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5db5020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5db51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5db5330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5db54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5db5640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5db57c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5db5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5db5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5db5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5db4020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5db41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2b6ae5daa558" loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2b6ae5daa558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5daa8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5daaa30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5daabb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5daad40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5da9020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5da91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5da9330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5da94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5da9640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5da97c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5da9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5da9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5da9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5da8020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5da81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2b6ae5da0560" loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2b6ae5da0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5da08b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5da0a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5da0bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5da0d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d9f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d9f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d9f330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d9f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d9f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d9f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d9f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d9fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d9fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d9e020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2b6ae5d60568" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2b6ae5d60568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d60ab8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d60c40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d60dc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d5f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d5f1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d5f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d5f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d5f640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d5f7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d5f950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d5fad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d5fc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d5fde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d5e120"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d5e2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2b6ae5d6d568" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2b6ae5d6d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d6d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d6da40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d6dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d6dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d6c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d6c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d6c330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d6c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d6c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d6c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d6c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d6cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d6cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d6b020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d6b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2b6ae5d7f568" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2b6ae5d7f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d7f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d7fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d7fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d7fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d7e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d7e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d7e330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d7e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d7e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d7e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d7e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d7ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d7ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d7d020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d7d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2b6ae5db4558" loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2b6ae5db4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5db48a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5db4a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5db4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5db4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5db3020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5db31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5db3330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5db34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5db3640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5db37c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5db3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5db3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5db3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5db2020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5db21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2b6ae5da6558" loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2b6ae5da6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5da68a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5da6a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5da6bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5da6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5da5020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5da51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5da5330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5da54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5da5640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5da57c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5da5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5da5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5da5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5da4020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5da41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b6ae5d267f0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b6ae5d267f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d26b40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d26cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d26e50"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d25020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d251a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d25330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d254b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d25640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d257c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d25950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d25ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d25c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d25de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d24120"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d242a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b6ae5d51568" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b6ae5d51568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d518b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d51a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d51bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d51d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d50020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d50330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d504b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d50640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d507c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d50950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d50ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d50c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d4f020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d4f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2b6ae5d83568" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2b6ae5d83568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d838b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d83a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d83bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d83d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d82020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d82330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d824b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d82640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d827c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d82950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d82ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d82c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d81020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2b6ae5d4d568" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2b6ae5d4d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d4d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d4da40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d4dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d4dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d4c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d4c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d4c330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d4c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d4c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d4c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d4c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d4cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d4cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d4b020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d4b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2b6ae5d5a568" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2b6ae5d5a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d5a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d5aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d5abc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d5ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d59020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d59330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d594b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d59640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d597c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d59950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d59ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d59c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d58020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2b6ae5d67568" loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2b6ae5d67568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d678b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d67a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d67bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d67d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d66020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d66330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d664b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d66640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d667c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d66950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d66ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d66c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d65020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2b6ae5d79568" loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2b6ae5d79568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d798b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d79a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d79bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d79d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d78020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d78330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d784b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d78640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d787c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d78950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d78ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d78c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d77020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2b6ae5da2560" loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2b6ae5da2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5da28b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5da2a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5da2bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5da2d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5da1020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5da11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5da1330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5da14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5da1640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5da17c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5da1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5da1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5da1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5da0020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5da01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b6ae5d18020" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b6ae5d18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d18370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d184f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d18680"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d18808"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d18990"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d18b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d18ca0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d18e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d17020"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d171a8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d17330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d174b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d17640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d178c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d17a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b6ae5d3b568" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b6ae5d3b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d3b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d3ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d3bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d3bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d3a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d3a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d3a330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d3a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d3a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d3a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d3a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d3aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d3ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d39020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2b6ae5d47568" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2b6ae5d47568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d478b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d47a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d47bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d47d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d46020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d46330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d464b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d46640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d467c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d46950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d46ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d46c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d45020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2b6ae5d54568" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2b6ae5d54568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d548b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d54a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d54bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d54d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d53020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d53330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d534b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d53640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d537c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d53950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d53ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d53c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d52020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2b6ae5d9e560" loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2b6ae5d9e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d9e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d9ea38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d9ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d9ed48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d9d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d9d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d9d330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d9d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d9d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d9d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d9d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d9dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d9dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d9c020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2b6ae5d98558" loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2b6ae5d98558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d988a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d98a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d98bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d98d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d97020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d97330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d97640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d977c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d97950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d97ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d97c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d96020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2b6ae5dae558" loc="166:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2b6ae5dae558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5dae8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5daea30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5daebb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5daed40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5dad020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5dad1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5dad330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5dad4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5dad640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5dad7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5dad950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5dadad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5dadc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5dac020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5dac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2b6ae5d71568" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2b6ae5d71568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d718b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d71a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d71bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d71d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d70020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d70330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d704b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d70640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d707c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d70950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d70ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d70c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d6f020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d6f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2b6ae5d9c560" loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2b6ae5d9c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d9c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d9ca38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d9cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d9cd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d9b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d9b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d9b330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d9b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d9b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d9b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d9b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d9bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d9bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d9a020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b6ae5d2ab00" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b6ae5d2ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d2ae50"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d29020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d291a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d29330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d294b8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d29640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d297c8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d29950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d29ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d29c60"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d29de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d28020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d281a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d28430"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d285b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b6ae5d35568" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b6ae5d35568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d358b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d35a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d35bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d35d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d34020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d34330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d344b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d34640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d347c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d34950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d34ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d34c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d33020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2b6ae5d62568" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2b6ae5d62568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d628b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d62a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d62bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d62d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d61020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d61330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d614b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d61640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d617c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d61950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d61ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d61c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d60020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2b6ae5da4560" loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2b6ae5da4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5da48b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5da4a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5da4bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5da4d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5da3020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5da31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5da3330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5da34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5da3640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5da37c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5da3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5da3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5da3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5da2020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5da21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2b6ae5db2558" loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2b6ae5db2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5db28a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5db2a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5db2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5db2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5db1020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5db11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5db1330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5db14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5db1640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5db17c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5db1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5db1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5db1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5db0020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5db01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2b6ae5d5e668" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2b6ae5d5e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d5e9b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d5eb40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d5ecc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d5ee50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d5d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d5d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d5d330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d5d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d5d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d5d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d5d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d5dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d5dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d5c020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2b6ae5d6b568" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2b6ae5d6b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d6b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d6ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d6bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d6bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d6a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d6a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d6a330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d6a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d6a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d6a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d6a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d6aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d6ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d69020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2b6ae5d7d568" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2b6ae5d7d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d7d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d7da40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d7dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d7dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d7c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d7c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d7c330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d7c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d7c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d7c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d7c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d7cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d7cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d7b020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d7b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b6ae5d24668" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b6ae5d24668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d249b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d24b40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d24cc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d24e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d23020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d23330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d234b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d23640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d237c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d23950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d23ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d23c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d22020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2b6ae5d81568" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2b6ae5d81568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d818b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d81a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d81bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d81d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d80020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d80330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d804b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d80640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d807c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d80950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d80ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d80c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d7f020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d7f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b6ae5d40568" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b6ae5d40568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d408b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d40a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d40bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d40d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d3e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d3e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d3e330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d3e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d3e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d3e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d3e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d3ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d3ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d3d020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d3d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2b6ae5d4b568" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2b6ae5d4b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d4b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d4ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d4bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d4bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d4a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d4a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d4a330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d4a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d4a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d4a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d4a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d4aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d4ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d49020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2b6ae5d58568" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2b6ae5d58568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d588b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d58a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d58bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d58d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d57020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d57330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d574b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d57640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d577c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d57950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d57ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d57c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d56020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2b6ae5d65568" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2b6ae5d65568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d658b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d65a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d65bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d65d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d64020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d64330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d64640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d647c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d64950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d64ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d64c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d63020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2b6ae5d77568" loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2b6ae5d77568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d778b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d77a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d77bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d77d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d76020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d76330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d764b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d76640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d767c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d76950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d76ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d76c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d75020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b6ae5d17e10" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b6ae5d17e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d2d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d2d330"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d2d4b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d2d640"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d2d7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d2d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d2dad8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d2dc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d2dde8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d2c020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d2c1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d2c330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d2c4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d2c740"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d2c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b6ae5d39568" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b6ae5d39568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d398b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d39a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d39bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d39d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d38020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d38330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d384b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d38640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d387c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d38950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d38ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d38c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d37020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2b6ae5d45568" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2b6ae5d45568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d458b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d45a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d45bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d45d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d44020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d44330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d444b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d44640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d447c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d44950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d44ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d44c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d43020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2b6ae5d52568" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2b6ae5d52568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d528b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d52a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d52bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d52d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d72020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d72330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d724b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d72640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d727c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d72950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d72ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d72c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d71020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2b6ae5d8b548" loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2b6ae5d8b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d8b898"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d8ba20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d8bba8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d8bd30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d8a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d8a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d8a330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d8a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d8a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d8a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d8a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d8aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d8ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d89020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2b6ae5d96558" loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2b6ae5d96558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d968a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d96a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d96bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d96d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5db7020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5db71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5db7330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5db74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5db7640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5db77c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5db7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5db7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5db7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5db6020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5db61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2b6ae5d8d560" loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2b6ae5d8d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d8d8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d8da38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d8dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d8dd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d8c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d8c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d8c330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d8c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d8c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d8c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d8c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d8cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d8cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d8b020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d8b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2b6ae5d6f568" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2b6ae5d6f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d6f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d6fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d6fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d6fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d6e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d6e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d6e330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d6e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d6e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d6e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d6e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d6ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d6ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d6d020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2b6ae5dac558" loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2b6ae5dac558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5dac8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5daca30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5dacbb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5dacd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5dab020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5dab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5dab330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5dab4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5dab640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5dab7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5dab950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5dabad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5dabc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5daa020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5daa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2b6ae5dc8568" loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2b6ae5dc8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5dc88b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5dc8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5dc8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5dc8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5dc7020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5dc71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5dc7330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5dc74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5dc7640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5dc77c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5dc7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5dc7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5dc7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5dc6020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5dc61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2b6ae5d955b8" loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2b6ae5d955b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5d95d08"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5d94020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5d941a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5d94330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5d944b8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5d94640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5d947c8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5d94950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5d94ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5d94c60"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5d94de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5d93020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5d931a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5d93430"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5d935b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5dc4e18" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5dc4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5de21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5de2330"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5de24b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5de2640"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5de27c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5de2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5de2ad8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5de2c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5de2de8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5de1020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5de11a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5de1330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5de14b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5de1740"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5de18c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5dde478" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5dde478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5dde7c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5dde950"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5ddead8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5ddec60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5ddede8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5ddd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5ddd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5ddd330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5ddd4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5ddd640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5ddd7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5ddd950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5dddad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5dddd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5ddc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5ddaca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5ddaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5dfd020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5dfd1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5dfd330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5dfd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5dfd640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5dfd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5dfd950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5dfdad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5dfdc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5dfdde8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5dfc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5dfc1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5dfc330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5dfc5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5dfc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5df93d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5df93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5df9728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5df98b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5df9a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5df9bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5df9d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5df8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5df81a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5df8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5df84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5df8640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5df87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5df8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5df8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5df8d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5df7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5df5ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5df5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5df4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5df41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5df4330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5df44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5df4640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5df47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5df4950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5df4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5df4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5df4de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5df3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5df31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5df3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5df35b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5df3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5df03d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5df03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5df0728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5df08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5df0a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5df0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5df0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5def020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5def1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5def330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5def4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5def640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5def7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5def950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5defad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5defd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5dee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5decca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5decca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e0f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e0f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e0f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e0f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e0f640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e0f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e0f950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e0fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e0fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e0fde8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e0e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e0e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e0e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e0e5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e0e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e0b3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e0b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e0b728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e0b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e0ba38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e0bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e0bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e0a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e0a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e0a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e0a640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e0a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e0a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e0aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e0ad60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e06ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e06ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e05020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e051a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e05330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e054b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e05640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e057c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e05950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e05ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e05c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e05de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e04020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e041a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e04330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e045b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e04740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e013d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e013d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e01728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e018b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e01a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e01bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e01d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e001a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e00330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e004b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e00640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e007c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e00950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e00ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e00d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5dff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e21ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e21ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e20020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e201a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e20330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e204b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e20640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e207c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e20950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e20ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e20c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e20de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e1f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e1f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e1f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e1f5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e1f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e1c3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e1c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e1c728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e1c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e1ca38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e1cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e1cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e1b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e1b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e1b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e1b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e1b640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e1b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e1b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e1bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e1bd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e18d08" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e18d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e170a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e17228"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e173b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e17538"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e176c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e17848"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e179d0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e17b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e17ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e17e68"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e16020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e161a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e16330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e165b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e16740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e133d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e133d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e13728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e138b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e13a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e13bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e13d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e12020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e121a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e12330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e124b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e12640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e127c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e12950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e12ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e12d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e33ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e33ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e32020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e321a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e32330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e324b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e32640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e327c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e32950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e32ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e32c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e32de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e31020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e311a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e31330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e315b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e31740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e2e3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e2e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e2e728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e2e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e2ea38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e2ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e2ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e2c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e2c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e2c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e2c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e2c640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e2c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e2c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e2cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e2cd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e29ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e29ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e28020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e281a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e28330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e284b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e28640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e287c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e28950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e28ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e28c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e28de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e27020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e271a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e27330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e275b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e27740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e243d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e243d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e24728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e248b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e24a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e24bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e24d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e23020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e231a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e23330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e234b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e23640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e237c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e23950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e23ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e23d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e44ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e44ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e43020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e431a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e43330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e434b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e43640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e437c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e43950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e43ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e43c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e43de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e42020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e421a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e42330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e425b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e42740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e3f3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e3f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e3f728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e3f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e3fa38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e3fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e3fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e3e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e3e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e3e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e3e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e3e640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e3e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e3e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e3ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e3ed60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e3bca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e3bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e3a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e3a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e3a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e3a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e3a640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e3a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e3a950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e3aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e3ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e3ade8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e39020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e391a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e39330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e395b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e39740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e363d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e363d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e36728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e368b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e36a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e36bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e36d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e35020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e351a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e35330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e354b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e35640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e357c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e35950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e35ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e35d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e56ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e56ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e55020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e551a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e55330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e554b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e55640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e557c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e55950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e55ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e55c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e55de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e54020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e541a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e54330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e545b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e54740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e513d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e513d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e51728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e518b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e51a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e51bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e51d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e4f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e4f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e4f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e4f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e4f640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e4f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e4f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e4fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e4fd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e4cdd8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e4cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e4b170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e4b2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e4b480"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e4b608"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e4b790"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e4b918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e4baa0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e4bc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e4bdb0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e4a020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e4a1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e4a330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e4a4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e4a740"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e4a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e47478" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e47478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e477c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e47950"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e47ad8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e47c60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e47de8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e46020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e461a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e46330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e464b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e46640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e467c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e46950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e46ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e46d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e68ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e68ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e67020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e671a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e67330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e674b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e67640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e677c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e67950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e67ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e67c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e67de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e66020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e661a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e66330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e665b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e66740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e633d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e633d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e63728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e638b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e63a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e63bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e63d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e621a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e62330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e624b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e62640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e627c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e62950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e62ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e62d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e5fca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e5fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e5e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e5e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e5e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e5e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e5e640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e5e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e5e950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e5ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e5ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e5ede8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e5d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e5d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e5d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e5d5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e5d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e5a3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e5a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e5a728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e5a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e5aa38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e5abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e5ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e59020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e591a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e59330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e594b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e59640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e597c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e59950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e59ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e59d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e7cca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e7cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e7b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e7b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e7b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e7b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e7b640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e7b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e7b950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e7bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e7bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e7bde8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e7a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e7a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e7a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e7a5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e7a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e763d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e763d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e76728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e768b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e76a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e76bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e76d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e75020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e751a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e75330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e754b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e75640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e757c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e75950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e75ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e75d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e72ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e72ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e71020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e711a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e71330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e714b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e71640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e717c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e71950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e71ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e71c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e71de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e70020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e701a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e70330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e705b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e70740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e6d3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e6d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e6d728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e6d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e6da38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e6dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e6dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e6c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e6c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e6c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e6c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e6c640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e6c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e6c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e6cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e6cd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e8fca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e8fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e8e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e8e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e8e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e8e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e8e640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e8e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e8e950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e8ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e8ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e8ede8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e8d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e8d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e8d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e8d5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e8d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e8a3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e8a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e8a728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e8a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e8aa38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e8abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e8ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e89020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e891a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e89330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e894b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e89640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e897c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e89950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e89ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e89d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e86ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e86ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e85020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e851a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e85330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e854b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e85640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e857c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e85950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e85ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e85c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e85de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e84020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e841a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e84330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e845b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e84740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e813d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e813d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e81728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e818b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e81a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e81bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e81d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e80020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e801a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e80330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e804b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e80640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e807c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e80950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e80ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e80d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5ea3ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5ea3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5ea1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5ea11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5ea1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5ea14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5ea1640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5ea17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5ea1950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5ea1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5ea1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5ea1de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5ea0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5ea01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5ea0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5ea05b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5ea0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e9d3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e9d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e9d728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e9d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e9da38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e9dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e9dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e9c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e9c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e9c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e9c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e9c640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e9c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e9c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e9cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e9cd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e99ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e99ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e98020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e981a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e98330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e984b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e98640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e987c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e98950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e98ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e98c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e98de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e97020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e971a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e97330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e975b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e97740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5e943d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5e943d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5e94728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5e948b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5e94a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5e94bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5e94d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5e93020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5e931a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5e93330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5e934b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5e93640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5e937c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5e93950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5e93ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5e93d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5e92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5eb6ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5eb6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5eb5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5eb51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5eb5330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5eb54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5eb5640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5eb57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5eb5950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5eb5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5eb5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5eb5de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5eb4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5eb41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5eb4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5eb45b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5eb4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5eb13d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5eb13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5eb1728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5eb18b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5eb1a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5eb1bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5eb1d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5eb0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5eb01a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5eb0330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5eb04b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5eb0640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5eb07c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5eb0950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5eb0ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5eb0d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5eaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5eadca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5eadca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5eac020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5eac1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5eac330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5eac4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5eac640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5eac7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5eac950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5eacad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5eacc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5eacde8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5eab020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5eab1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5eab330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5eab5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5eab740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5ea83d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5ea83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5ea8728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5ea88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5ea8a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5ea8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5ea8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5ea7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5ea71a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5ea7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5ea74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5ea7640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5ea77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5ea7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5ea7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5ea7d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5ea6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5ea4ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5ea4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5ec8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5ec81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5ec8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5ec84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5ec8640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5ec87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5ec8950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5ec8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5ec8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5ec8de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5ec7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5ec71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5ec7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5ec75b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5ec7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6ae5ec43d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6ae5ec43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5ec4728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5ec48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5ec4a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5ec4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5ec4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5ec3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5ec31a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5ec3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5ec34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5ec3640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5ec37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5ec3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5ec3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5ec3d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5ec2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae5f28da0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae5f28da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5f3f170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5f3f2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5f3f480"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5f3f608"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5f3f790"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5f3f918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5f3faa0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5f3fc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5f3fdb0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5f3e020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5f3e1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5f3e330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5f3e4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5f3e740"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5f3e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae5f29c30" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae5f29c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5f28020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5f281a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5f28330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5f284b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5f28640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5f287c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5f28950"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5f28ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae5f3b5f8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae5f3b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5f3b948"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5f3bad0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5f3bc58"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5f3bde0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5f3a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5f3a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5f3a330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5f3a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5f3a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5f3a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5f3a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5f3aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5f3ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5f39020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5f391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae5f3c448" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae5f3c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5f3c798"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5f3c920"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5f3caa8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5f3cc30"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5f3cdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5f3b020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5f3b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5f3b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae5f37e20" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae5f37e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5f361a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5f36330"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae5f364b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5f36640"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5f367c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae5f36950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5f36ad8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5f36c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae5f36de8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae5f35020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5f351a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae5f35330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae5f354b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae5f35740"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5f358c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae5f38cf0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae5f38cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae5f370a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae5f37228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae5f373b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae5f37538"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5f376c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae5f37848"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5f379d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae5f37b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b6ae5f507e0" loc="39:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b6ae5f507e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6ae5f50b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b6ae5f4b020" loc="40:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b6ae5f4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae5f4b370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae5f4b4f8"/>
        <function-ref name="start" scoped="" ref="0x2b6ae5f4b680"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae5f4b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae5f60b88" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae5f60b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae5f5e020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae5f5e1a8"/>
        <function-ref name="start" scoped="" ref="0x2b6ae5f5e330"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae5f5e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6ae5fbb9d0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae5fbb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae5fbbd20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae5f5d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae5f5d1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae5f5d330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae5f5d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae5fae9f8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae5fae9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae5faed48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae5f5c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae5f5c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae5f5c330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae5f5c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae5fb85e0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae5fb85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae5fb8930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae5fc2a08" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae5fc2a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae5fc2d58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae5faf020"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae5faf1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae5faf330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae5faf4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae5faf640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae5faf7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae5fafde8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae5faf950"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae5fafad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae5fafc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6ae5fc20d0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae5fc20d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae5fc2420"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae5fc25a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae5fc2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae5fc8190" loc="50:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae5fc8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae5fc84e0"/>
        <function-ref name="source" scoped="" ref="0x2b6ae5fc8668"/>
        <function-ref name="address" scoped="" ref="0x2b6ae5fc87f0"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae5fc8978"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae5fc8b00"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae5fc8c88"/>
        <function-ref name="type" scoped="" ref="0x2b6ae5fc8e10"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae5fbc020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae5fbc1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae5fbc330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae5fbc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6ae603cbb0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b6ae603cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae603b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae603b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae603b330"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae603b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae603b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6ae603b8c8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b6ae603b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae603bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6ae5fbfb60" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae5fbfb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae603f020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae603f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae603f330"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae603f4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae603f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae603d578" loc="50:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae603d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae603d8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae603da50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae603dbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae603dd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae603c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae603f9a8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae603f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae603fd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6ae603c268" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae603c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae603c5b8"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae603c740"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae603c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae603e020" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae603e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae603e370"/>
        <function-ref name="source" scoped="" ref="0x2b6ae603e4f8"/>
        <function-ref name="address" scoped="" ref="0x2b6ae603e680"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae603e808"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae603e990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae603eb18"/>
        <function-ref name="type" scoped="" ref="0x2b6ae603eca0"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae603ee28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae603d020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae603d1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae603d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae60362e8" loc="50:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae60362e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae6036638"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae60367c0"/>
        <function-ref name="start" scoped="" ref="0x2b6ae6036948"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6036ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae6035ce8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae6035ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b6ae5f40a80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae60330a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6033228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae60333b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae6033538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae60336c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6039ba8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6039ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae6036020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae6035270" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae6035270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b6ae5f40a80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae60355c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae60315a8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae60315a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae60318f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae6031a80"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6031c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae6031d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae602d020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae602d1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae602d330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae602d950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae602d4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae602d640"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae602d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b6ae602eba8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b6ae602eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b6ae5f40a80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b6ae6031020"/>
        <function-ref name="offset" scoped="" ref="0x2b6ae60311a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b6ae6031330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae6052d50" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae6052d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae60510d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae6051260"/>
        <function-ref name="start" scoped="" ref="0x2b6ae60513e8"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6051570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b6ae60a5dd0" loc="332:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x2b6ae60a5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae60a4170"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae60a42f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b6ae606bb00" loc="74:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x2b6ae606bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae606be50"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6040020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b6ae607e8e0" loc="191:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x2b6ae607e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae607ec30"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae607edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6052738" loc="65:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6052738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae6052a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b6ae6068608" loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x2b6ae6068608"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b6ae6068958"/>
        <function-ref name="flush" scoped="" ref="0x2b6ae6068ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b6ae60a7590" loc="322:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x2b6ae60a7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae60a78e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae60a7a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b6ae6042b38" loc="72:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b6ae6042b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b6ae604a020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b6ae604a1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b6ae604a330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b6ae604a4b8"/>
        <function-ref name="putData" scoped="" ref="0x2b6ae604a640"/>
        <function-ref name="putDone" scoped="" ref="0x2b6ae604a7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b6ae604a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae604abc8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae604abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae6047020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae60471a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6047330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae60474b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae6047640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae60477c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae6047950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae6041020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6047ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae6047c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae6047de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b6ae60a0020" loc="341:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b6ae60a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae60a0370"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae60a04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b6ae604c898" loc="67:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b6ae604c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b6ae604cbe8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b6ae604cd70"/>
        <function-ref name="startSend" scoped="" ref="0x2b6ae6050020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b6ae60501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b6ae6048b48" loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b6ae6048b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b6ae604f020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b6ae604f1a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b6ae604f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b6ae6159908" loc="275:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x2b6ae6159908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae6159c58"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae6159de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae615e6f8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae615e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b6ae5f40a80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae615ea68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae615ebf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae615ed78"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae615d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae615d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b6ae6158100" loc="158:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x2b6ae6158100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae6158450"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae61585d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae615e020" loc="50:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae615e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b6ae5f40a80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae615e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b6ae615d5b0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x2b6ae615d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b6ae5f40a80"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b6ae615d920"/>
        <function-ref name="offset" scoped="" ref="0x2b6ae615daa8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b6ae615dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae615a268" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae615a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae615a5b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae615a740"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae615a8c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae615aa50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae615abd8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae615ad60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae6159020"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae6159640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6159330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae61591a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae61594b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b6ae615b750" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x2b6ae615b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b6ae615baa0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b6ae615bc28"/>
        <function-ref name="startSend" scoped="" ref="0x2b6ae615bdb0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b6ae615a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b6ae615de78" loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b6ae615de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b6ae615b1f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b6ae615b380"/>
        <function-ref name="endPacket" scoped="" ref="0x2b6ae615b508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b6ae617bc98" loc="50:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b6ae617bc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6184020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b6ae61841a8"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae6184330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b6ae61844b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b6ae6184640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b6ae61847c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6184950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b6ae6186328" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b6ae6186328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b6ae6186678"/>
        <function-ref name="resetSend" scoped="" ref="0x2b6ae6186800"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b6ae6186988"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b6ae6186b10"/>
        <function-ref name="putData" scoped="" ref="0x2b6ae6186c98"/>
        <function-ref name="putDone" scoped="" ref="0x2b6ae6186e20"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b6ae6185020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae6184bc8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae6184bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae6183020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae61831a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6183330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae61834b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae6183640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae61837c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae6183950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae6179020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6183ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae6183c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae6183de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b6ae618ccc8" loc="6:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b6ae618ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae61900a0"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae6190228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b6ae61929e8" loc="5:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b6ae61929e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6192d38"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b6ae6191020"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae61911a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b6ae6191330"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b6ae61914b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b6ae6191640"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae61917c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6ae6192220" loc="4:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b6ae6192220"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6192570"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae61926f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae6430120" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae6430120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae6430470"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae64305f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b6ae642f8c8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b6ae642f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae642fc18"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae642fda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b6ae642e060" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae642e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b6ae642e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b6ae6430880" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b6ae6430880"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6430bd0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b6ae6430d58"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae642f020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b6ae642f1a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b6ae642f330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b6ae642f4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae642f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae64314e0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae64314e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6431830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae64319b8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6431b40"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6431cc8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6431e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b6ae61f6b90" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae61f6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae61f8020"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae61f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b6ae61f7e10" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b6ae61f7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae61f41a8"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae61f4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b6ae61f3e78" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae61f3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b6ae61f21f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b6ae61f8988" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b6ae61f8988"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae61f8cd8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b6ae61f8e60"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae61f7020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b6ae61f71a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b6ae61f7330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b6ae61f74b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae61f7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b6ae61f4bc8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b6ae61f4bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae61f3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae61f31a8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae61f3330"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae61f34b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae61f3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae61fa270" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae61fa270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae61fa5c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae61fa748"/>
        <function-ref name="request" scoped="" ref="0x2b6ae61fa8d0"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae61faa58"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae61fabe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b6ae61f12b0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae61f12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae61f1600"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae61f1788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b6ae6273060" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6273060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae62733d0"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae6273558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b6ae62729e8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x2b6ae62729e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6272d58"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae62a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x2b6ae62a6180" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae62a6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b6ae62a64f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b6ae62a67b8" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b6ae62a67b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae62a6b08"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae62a6c90"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae62a6e18"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae62a5020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae62a51a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae62a5330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae62a54b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae62a5640"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae62a57c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae62a5950"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae62a5ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae62a5c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae62a5de8"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae62a4120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae62a42a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae62a4430"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae62a45b8"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae62a4740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae62a48c8"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae62a4a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae62a4bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae62a4d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae62a3020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae62a31a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae62a3330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae62a36b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae62a3840"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae62a39c8"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae62a3b50"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae62a3cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae62a3e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae62a2020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae62a21a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae62a2330"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae62a24b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae62a2640"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae62a27c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae62a2950"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae62a2ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae62a2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b6ae6273900" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x2b6ae6273900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6273c70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b6ae6273df8"/>
        <function-ref name="receive" scoped="" ref="0x2b6ae6272020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b6ae62721a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b6ae6272330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b6ae62724b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6272640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6ae62a1a58" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae62a1a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae62a0828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae629f190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae62a0cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae629f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b6ae62a7408" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b6ae62a7408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae62a7778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae62a7900"/>
        <function-ref name="request" scoped="" ref="0x2b6ae62a7a88"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae62a7c10"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae62a7d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae62752e8" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae62752e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6275658"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae62757e0"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6275968"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6275af0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6275c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b6ae62a10c8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae62a10c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae62a1438"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae62a15c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae629fa30" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae629fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae629fd80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae629d020"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae629d1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae629d330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae629d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae629d640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae629d7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae629dde8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae629dad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae629d950"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae629dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b6ae628f528" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae628f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae628f878"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae628fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b6ae62924f0" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae62924f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6292840"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae62929c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b6ae6292ce0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae6292ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae62950a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae6295228"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae62953b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae6295538"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae62956c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae6295848"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae62959d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae6295b58"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae6295ce0"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae6295e68"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae6294020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae62941a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae6294330"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae62945b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae6294740"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae62948c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae6294a50"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae6294bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae6294d60"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae6291020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae62911a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae6291330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae62914b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae6291640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae62917c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae6291b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae6291cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae6291e60"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae6290020"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae62901a8"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae6290330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae62904b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae6290640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae62907c8"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae6290950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae6290ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae6290c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae6290de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae628f020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae628f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b6ae62b9e00" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b6ae62b9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae62b81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae62b8330"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae62b84b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae62b8640"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae62b87c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae62b8950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae62b8ad8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae62b8c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae62b8de8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae62b7020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae62b71a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae62b7330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae62b74b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae62b7740"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae62b78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b6ae62bd8e0" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b6ae62bd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae62bdc30"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae62bddb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b6ae62b7c78" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b6ae62b7c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae62b6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae62b61a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae62b6330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae62b64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae62b6640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae62b67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae62b6950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae62b6ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae62b6c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae62b6de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae62b5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae62b51a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae62b5330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae62b55b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae62b5740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b6ae62b5af0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b6ae62b5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae62b5e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae62b4020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae62b41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae62b4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae62b44b8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae62b4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae62b47c8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae62b4950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae62b4ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae62b4c60"/>
        <function-ref name="set" scoped="" ref="0x2b6ae62b4de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae62b3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae62b31a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae62b3430"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae62b35b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b6ae62c1060" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b6ae62c1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae62c13b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae62c1538"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae62c16c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae62c1848"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae62c19d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae62c1b58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae62c1ce0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae62c1e68"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae62c0020"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae62c01a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae62c0330"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae62c04b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae62c0640"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae62c08c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae62c0a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae62c0bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae62c0d60"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae62bf020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae62bf1a8"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae62bf330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae62bf4b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae62bf640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae62bf7c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae62bf950"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae62bfad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae62bfe60"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae62be020"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae62be1a8"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae62be330"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae62be4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae62be640"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae62be7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae62be950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae62bead8"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae62bec60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae62bede8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae62bd020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae62bd1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae62bd330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae62bd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b6ae628e7d8" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae628e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae628eb28"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae628ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b6ae62ba020" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b6ae62ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae62ba370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae62ba4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae62ba680"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae62ba808"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae62ba990"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae62bab18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae62baca0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae62bae28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae62b9020"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae62b91a8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae62b9330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae62b94b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae62b9640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae62b98c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae62b9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b6ae62bc1e8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b6ae62bc1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae62bc538"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae62bc6c0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae62bc848"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae62bc9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae62bcb58"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae62bcce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae62bce68"/>
        <function-ref name="get" scoped="" ref="0x2b6ae62bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae62bb1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae62bb330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae62bb4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae62bb640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae62bb7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae62bba50"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae62bbbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6ae6317020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae6317020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6317d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae63166b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6316230"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6316b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2b6ae634fdf0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b6ae634fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae634cbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae634a548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae634a0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae634a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b6ae63392a0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae63392a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae63395f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae6339778"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae6339900"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6339a88"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae6339c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6339d98"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae6338020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae63381a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6338330"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae63384b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae6338640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6ae6347330" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae6347330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae633b0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae633b9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae633b548"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae633be58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae7766430" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae7766430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae7766780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae7766908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6ae775f430" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae775f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae775f780"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae775f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b6ae7760bd8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae7760bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae775f020"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae775f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae77676e8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae77676e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae7767a38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae7767bc0"/>
        <function-ref name="request" scoped="" ref="0x2b6ae7767d48"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae7766020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae77661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b6ae7765430" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae7765430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae7765780"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae7765908"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae7765a90"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae7765c18"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae7765da0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae7763020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae77631a8"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae7763330"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae77634b8"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae7763640"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae77637c8"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae7763950"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae7763ad8"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae7763d60"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae7762020"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae77621a8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae7762330"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae77624b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae7762640"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae77627c8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae7762950"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae7762ad8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae7762c60"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae7762de8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae7761020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae77613a8"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae7761530"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae77616b8"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae7761840"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae77619c8"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae7761b50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae7761cd8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae7761e60"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae7760020"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae77601a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae7760330"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae77604b8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae7760640"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae77607c8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae7760950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6ae7766b90" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae7766b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae7765020"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae77651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae63551c8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae63551c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae6355518"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae63556a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6ae63546c0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae63546c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae6354a10"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae6354b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b6ae63581c8" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b6ae63581c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6358518"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae63586a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6358e70" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6358e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae63561e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6356370"/>
        <function-ref name="request" scoped="" ref="0x2b6ae63564f8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6356680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6356808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6ae6355998" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6355998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae6355ce8"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae6355e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6ae6378a48" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6378a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae6378d98"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae6377020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b6ae6352b20" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6352b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6351020"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae63511a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b6ae6378470" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b6ae6378470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae63787c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b6ae6351590" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b6ae6351590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6351900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b6ae6351bc8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b6ae6351bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6378020"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae63781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae63ecaf8" loc="92:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae63ecaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae63ece68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae63eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6ae63e96d8" loc="96:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae63e96d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae63e9a48"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae63e9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6ae63eb268" loc="93:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae63eb268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae63eb5b8"/>
        <function-ref name="requested" scoped="" ref="0x2b6ae63eb740"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae63eb8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae63eba50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae63ebbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae63edd80" loc="91:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae63edd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae63ec170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae63ec2f8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae63ec480"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae63ec608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae63ec790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6ae63ebe20" loc="94:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae63ebe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae63e91a8"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae63e9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae7827080" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae7827080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae78273d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b6ae7827658" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b6ae7827658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6ae78279a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6ae7827b30"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6ae7827cb8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6ae7827e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae7824388" loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae7824388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae78246f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae7824880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6ae7821020" loc="60:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae7821020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae7821390"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae7821518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6ae78217a0" loc="61:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b6ae78217a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6ae7821af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6ae7821c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6ae7821e00"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6ae7820020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6ae7824ac8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae7824ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae7824e18"/>
        <function-ref name="requested" scoped="" ref="0x2b6ae7822020"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae78221a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae7822330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae78224b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae7820268" loc="62:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae7820268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae78205b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae7820740"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae78208c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae7820a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae7820bd8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae7820d60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae781f020"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae781f640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae781f330"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae781f1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae781f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae7825668" loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae7825668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae78259d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae7825b60"/>
        <function-ref name="request" scoped="" ref="0x2b6ae7825ce8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae7825e70"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae7824020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6ae7822700" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae7822700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae7822a50"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae7822bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6ae781f908" loc="75:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b6ae781f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae781fc58"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae781fde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6ae63e5b98" loc="72:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6ae63e5b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6ae640c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6ae640c268" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae640c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae640c5b8"/>
        <function-ref name="requested" scoped="" ref="0x2b6ae640c740"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae640c8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae640ca50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae640cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b6ae63e5478" loc="70:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae63e5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae63e57c8"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae63e5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6ae640ce20" loc="74:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae640ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae640b1a8"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae640b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b6ae77f1d20" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b6ae77f1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b6ae787b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b6ae787b2e8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae787b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae787b638"/>
        <function-ref name="requested" scoped="" ref="0x2b6ae787b7c0"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae787b948"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae787bad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae787bc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b6ae77f1600" loc="60:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6ae77f1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae77f1950"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae77f1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6ae787a020" loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae787a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae787a370"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae787a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x2b6ae6429640" loc="3:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x2b6ae6429640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b6ae6429990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6ae6429c70" loc="4:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6429c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6428020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae64281a8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6428330"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae64284b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6428640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6ae642cd98" loc="2:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b6ae642cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6429170"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae64292f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b6ae6452020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x2b6ae6452020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b6ae6452370"/>
        <function-ref name="offset" scoped="" ref="0x2b6ae64524f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b6ae6452680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6ae64b61d0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae64b61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae64b6520"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae64b66a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae64b6830"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae64b69b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae64b6b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae64b6d88" loc="50:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae64b6d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae64b5170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae64b52f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae64b5480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae64b5608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae64b5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae64b59d8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae64b59d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae64b5d28"/>
        <function-ref name="source" scoped="" ref="0x2b6ae64f2020"/>
        <function-ref name="address" scoped="" ref="0x2b6ae64f21a8"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae64f2330"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae64f24b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae64f2640"/>
        <function-ref name="type" scoped="" ref="0x2b6ae64f27c8"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae64f2950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae64f2ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae64f2c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae64f2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b6ae64f10a0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b6ae64f10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae64f13f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae64f1578"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae64f1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6ae786d5c8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae786d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae786d918"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae786daa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae786dc28"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae786ddb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae786c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b6ae786c2c8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae786c2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae786c618"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae786c7a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae786c928"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae786cab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae786cc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6ae786ce80" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae786ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae786b1f8"/>
        <function-ref name="source" scoped="" ref="0x2b6ae786b380"/>
        <function-ref name="address" scoped="" ref="0x2b6ae786b508"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae786b690"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae786b818"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae786b9a0"/>
        <function-ref name="type" scoped="" ref="0x2b6ae786bb28"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae786bcb0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae786be38"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae786a020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae786a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae6491a68" loc="44:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae6491a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6491db8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae648e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae648e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae648e330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae648e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b6ae64c2bd0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae64c2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae64c1020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae64c11a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae64c1330"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae64c14b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae64c1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae64c3e40" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae64c3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae64c21e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae64c2370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae64c24f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae64c2680"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae64c2808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b6ae64bf020" loc="50:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae64bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae64bf370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae64bf4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae64bf680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae64bf808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae64bf990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b6ae64bfc58" loc="169:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2b6ae64bfc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae64be020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae64be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b6ae64be470" loc="126:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2b6ae64be470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae64be7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae64be948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6ae64c1888" loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae64c1888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae64c1bd8"/>
        <function-ref name="source" scoped="" ref="0x2b6ae64c1d60"/>
        <function-ref name="address" scoped="" ref="0x2b6ae64c0020"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae64c01a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae64c0330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae64c04b8"/>
        <function-ref name="type" scoped="" ref="0x2b6ae64c0640"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae64c07c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae64c0950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae64c0ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae64c0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b6ae64efd50" loc="43:/home/wwhuang/git/tinyos-lab11/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b6ae64efd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b6ae650e610"/>
        <function-ref name="enqueue" scoped="" ref="0x2b6ae650c300"/>
        <function-ref name="element" scoped="" ref="0x2b6ae650c930"/>
        <function-ref name="maxSize" scoped="" ref="0x2b6ae650e1c0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6ae650ec70"/>
        <function-ref name="empty" scoped="" ref="0x2b6ae64ee8f0"/>
        <function-ref name="size" scoped="" ref="0x2b6ae64eed40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6ae65070f8" loc="93:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b6ae65070f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b6ae6504960"/>
        <function-ref name="enqueue" scoped="" ref="0x2b6ae6503680"/>
        <function-ref name="element" scoped="" ref="0x2b6ae6503cb0"/>
        <function-ref name="maxSize" scoped="" ref="0x2b6ae6504510"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6ae6503020"/>
        <function-ref name="empty" scoped="" ref="0x2b6ae6507c40"/>
        <function-ref name="size" scoped="" ref="0x2b6ae65040c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b6ae6502370" loc="94:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae6502370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae65026c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6502848"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae65029d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae6502b58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6502ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b6ae6501020" loc="95:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae6501020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6501370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae65014f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6501680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae6501808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae6501990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b6ae64fb100" loc="114:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x2b6ae64fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae64fb450"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae64fb5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6508298" loc="89:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6508298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae65085e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae6501c08" loc="96:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae6501c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae6500020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae65001a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6500330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae65004b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae6500640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae65007c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae6500950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae64ff020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6500ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae6500c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae6500de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b6ae6505880" loc="90:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b6ae6505880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b6ae6505bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b6ae6525b20" loc="43:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b6ae6525b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b6ae6525e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6522d78" loc="94:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6522d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae651f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b6ae651f3c0" loc="95:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x2b6ae651f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b6ae651f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b6ae6516298" loc="13:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b6ae6516298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6ae65165e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RfControl" ref="0x2b6ae65181e0" loc="11:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RfControl" scoped="" ref="0x2b6ae65181e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae6518530"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae65186b8"/>
        <function-ref name="start" scoped="" ref="0x2b6ae6518840"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae65189c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OpoReceive" ref="0x2b6ae651a020" loc="6:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OpoReceive" scoped="" ref="0x2b6ae651a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae651a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlinkReceive" ref="0x2b6ae651a6c0" loc="7:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlinkReceive" scoped="" ref="0x2b6ae651a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae651aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VisualReceive" ref="0x2b6ae651ad68" loc="8:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VisualReceive" scoped="" ref="0x2b6ae651ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae65190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxReceive" ref="0x2b6ae6519420" loc="9:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RxReceive" scoped="" ref="0x2b6ae6519420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae6519770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae6516860" loc="14:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae6516860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae6516bb0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae6516d38"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6515020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae65151a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae6515330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae65154b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae6515640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae6515c60"/>
        <function-ref name="set" scoped="" ref="0x2b6ae65157c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae6515950"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae6515ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6ae6518c68" loc="12:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6518c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae6517020"/>
        <function-ref name="source" scoped="" ref="0x2b6ae65171a8"/>
        <function-ref name="address" scoped="" ref="0x2b6ae6517330"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae65174b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae6517640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae65177c8"/>
        <function-ref name="type" scoped="" ref="0x2b6ae6517950"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae6517ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae6517c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae6517de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae6516020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCReceive" ref="0x2b6ae6519aa8" loc="10:OpoBaseP.nc">
      <component-ref qname="OpoBaseP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCReceive" scoped="" ref="0x2b6ae6519aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae6519df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae6558140" loc="61:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae6558140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae6558490"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae6558618"/>
        <function-ref name="start" scoped="" ref="0x2b6ae65587a0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6558928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6ae65571c8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae65571c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6557518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65576a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae6557828"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae65579b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6557b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6ae6556e48" loc="65:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b6ae6556e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae65541c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae6554448" loc="67:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae6554448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6554798"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae6554920"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6554aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae6554c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae6554db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b6ae658b4a8" loc="70:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae658b4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6ae6592900"/>
        <function-ref name="clear" scoped="" ref="0x2b6ae6591020"/>
        <function-ref name="isValid" scoped="" ref="0x2b6ae6592220"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6591700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6ae657fb98" loc="72:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae657fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6ae6583020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6ae65831a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6ae6583330"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6ae65834b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae6556300" loc="64:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae6556300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae6556650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6ae65947e0" loc="69:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65947e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae6594b30"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae6594cb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae6594e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae6595080" loc="68:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae6595080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae65953d0"/>
        <function-ref name="source" scoped="" ref="0x2b6ae6595558"/>
        <function-ref name="address" scoped="" ref="0x2b6ae65956e0"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae6595868"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae65959f0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae6595b78"/>
        <function-ref name="type" scoped="" ref="0x2b6ae6595d00"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae6594020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae65941a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae6594330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae65944b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b6ae6588378" loc="71:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6ae6588378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6ae65877d8"/>
        <function-ref name="clear" scoped="" ref="0x2b6ae6586020"/>
        <function-ref name="isValid" scoped="" ref="0x2b6ae65870f8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6586700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae65b3818" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65b3818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae65b3b68"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae65b3cf0"/>
        <function-ref name="start" scoped="" ref="0x2b6ae65b3e78"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae65b2030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6ae659ab48" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae659ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6ae65a3020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6ae65a31a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6ae65a3330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6ae65a34b8"/>
        <function-ref name="setCca" scoped="" ref="0x2b6ae65a3640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6ae65a37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b6ae65d0658" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b6ae65d0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b6ae65d0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae65ae0c0" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae65ae0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae65ae410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae65ae598"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65ae720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae65ae8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae65aea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6ae65b27a8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae65b27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae65b2af8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65b2c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae65b2e08"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae65b1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae65b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6ae65b0498" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b6ae65b0498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae65b07e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b6ae65a5e18" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae65a5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae65ad1a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae65ad330"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae65ad4b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae65ad640"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae65ad7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae65ad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6ae65a3ac0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae65a3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6ae65a3e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6ae65a1020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6ae65a11a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6ae65a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae65b1928" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae65b1928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae65b1c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6ae65adc78" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65adc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae65ac020"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae65ac1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae65ac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b6ae65d3a98" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b6ae65d3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b6ae65d3de8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b6ae6599020"/>
        <function-ref name="getRetries" scoped="" ref="0x2b6ae65991a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b6ae6599330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b6ae65994b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae65b0a88" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae65b0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae65b0dd8"/>
        <function-ref name="source" scoped="" ref="0x2b6ae65af020"/>
        <function-ref name="address" scoped="" ref="0x2b6ae65af1a8"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae65af330"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae65af4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae65af640"/>
        <function-ref name="type" scoped="" ref="0x2b6ae65af7c8"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae65af950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae65afad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae65afc60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae65afde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b6ae65a2ca8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae65a2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b6ae65a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae65cd3a0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65cd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae65cd6f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae65cd878"/>
        <function-ref name="start" scoped="" ref="0x2b6ae65cda00"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae65cdb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b6ae65c7ca8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae65c7ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b6ae65c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b6ae65c5db0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b6ae65c5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b6ae65c4170"/>
        <function-ref name="setRetries" scoped="" ref="0x2b6ae65c42f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b6ae65c4480"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b6ae65c4608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b6ae65c4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b6ae65c8438" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae65c8438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae65c8788"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae65c8910"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae65c8a98"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae65c8c20"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae65c8da8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae65c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b6ae65c90c8" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b6ae65c90c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae65c9418"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65c95a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae65c9728"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae65c98b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae65c9a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6ae65c5318" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae65c5318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6ae65c5668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6ae65c57f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6ae65c5978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6ae65c5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b6ae65cbd10" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b6ae65cbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae65ca0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6ae65c7348" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae65c7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae65c7698"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae65c7820"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae65c79a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae65cc388" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae65cc388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae65cc6d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae65cc860"/>
        <function-ref name="request" scoped="" ref="0x2b6ae65cc9e8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae65ccb70"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae65cccf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b6ae65cb060" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b6ae65cb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae65cb3b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65cb538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae65cb6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae65cb848"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae65cb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b6ae65ca3d0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b6ae65ca3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae65ca720"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae65ca8a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65caa30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae65cabb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae65cad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b6ae65c9d90" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b6ae65c9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae65c8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae65c34b8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65c34b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae65c3808"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae65c3990"/>
        <function-ref name="start" scoped="" ref="0x2b6ae65c3b18"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae65c3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6ae65bf328" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae65bf328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6ae65bf678"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6ae65bf800"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6ae65bf988"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6ae65bfb10"/>
        <function-ref name="setCca" scoped="" ref="0x2b6ae65bfc98"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6ae65bfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae65c0020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae65c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae65c0370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65c04f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae65c0680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae65c0808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae65c0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae65c0c60" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae65c0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae65bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae65bed80" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae65bed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae65bb170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae65bb2f8"/>
        <function-ref name="start" scoped="" ref="0x2b6ae65bb480"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae65bb608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6ae65ba638" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae65ba638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6ae65ba988"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6ae65bab10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6ae65bac98"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6ae65bae20"/>
        <function-ref name="setCca" scoped="" ref="0x2b6ae65b9020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6ae65b91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b6ae65f3d40" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b6ae65f3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6ae65f20d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6ae65f2260"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6ae65f23e8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6ae65f2570"/>
        <function-ref name="setCca" scoped="" ref="0x2b6ae65f26f8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6ae65f2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6ae65eade0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae65eade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae65e8170"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae65e82f8"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae65e8480"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae65e8608"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae65e8790"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae65e8918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b6ae65f3020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6ae65f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae65f3370"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae65f34f8"/>
        <function-ref name="modify" scoped="" ref="0x2b6ae65f3680"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae65f3808"/>
        <function-ref name="resend" scoped="" ref="0x2b6ae65f3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae65bb8c0" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae65bb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae65bbc10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65bbd98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae65ba020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae65ba1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae65ba330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b6ae65eb020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b6ae65eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6ae65eb370"/>
        <function-ref name="rand32" scoped="" ref="0x2b6ae65eb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b6ae65b7850" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b6ae65b7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae65b7ba0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae65b7d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6ae65e7020" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae65e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae65e7370"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae65e74f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae65e7680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b6ae65f4558" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b6ae65f4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b6ae65f48a8"/>
        <function-ref name="rfOff" scoped="" ref="0x2b6ae65f4a30"/>
        <function-ref name="rxOn" scoped="" ref="0x2b6ae65f4bb8"/>
        <function-ref name="startVReg" scoped="" ref="0x2b6ae65f4d40"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b6ae65b7020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b6ae65b71a8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b6ae65b7330"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b6ae65b74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae65eb7b0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae65eb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae65ebb00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae65ebc88"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae65ebe10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae65ea020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae65ea1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae65ea330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae65ea4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae65eaad8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae65ea640"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae65ea7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae65ea950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6ae65b9488" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae65b9488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae65b97d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae65b9960"/>
        <function-ref name="request" scoped="" ref="0x2b6ae65b9ae8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae65b9c70"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae65b9df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b6ae65db540" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2b6ae65db540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae65db990"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae65dbb18"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae65dbca0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae65dbe28"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae65e6020"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae65e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b6ae661bb80" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2b6ae661bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae661a020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae661a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b6ae65d8cf8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2b6ae65d8cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae661b0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae661b228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b6ae65dae68" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2b6ae65dae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae65d81e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae65d8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b6ae664faf8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae664faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b6ae664fe48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b6ae665b020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b6ae665b1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b6ae665b330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b6ae665b4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b6ae665b640"/>
        <function-ref name="setChannel" scoped="" ref="0x2b6ae665b7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b6ae665b950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b6ae665bad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b6ae665bc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b6ae665bde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b6ae665a020"/>
        <function-ref name="sync" scoped="" ref="0x2b6ae665a1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6ae665a430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b6ae665a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b6ae6649d28" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b6ae6649d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae664c8b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae664cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b6ae665a8b0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b6ae665a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b6ae665ac00"/>
        <function-ref name="rfOff" scoped="" ref="0x2b6ae665ad88"/>
        <function-ref name="rxOn" scoped="" ref="0x2b6ae664d020"/>
        <function-ref name="startVReg" scoped="" ref="0x2b6ae664d1a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b6ae664d330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b6ae664d4b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b6ae664d640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b6ae664d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae665fe10" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae665fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae665c1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae665c330"/>
        <function-ref name="request" scoped="" ref="0x2b6ae665c4b8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae665c640"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae665c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b6ae66444b0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae66444b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b6ae6644800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b6ae6644988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b6ae6644b10"/>
        <function-ref name="syncDone" scoped="" ref="0x2b6ae6644c98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b6ae6644e20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b6ae6643020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b6ae66431a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b6ae6643330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b6ae66434b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b6ae6643640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b6ae66437c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b6ae6643950"/>
        <function-ref name="sync" scoped="" ref="0x2b6ae6643ad8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6ae6643d60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b6ae6642020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b6ae6664c48" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6664c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6663020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae66631a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b6ae6682998" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b6ae6682998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b6ae6682ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b6ae663e210" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2b6ae663e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae667a918"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6681980"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae667a310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae6681e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae667ada0"/>
        <function-ref name="start" scoped="" ref="0x2b6ae6681020"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae66814f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b6ae6666ab8" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6666ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6666e08"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6664020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b6ae6678500" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b6ae6678500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6678850"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae66789d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6678b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6678ce8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6678e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6677020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae66771a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6677330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b6ae6641658" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2b6ae6641658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae66401e8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6640638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b6ae66983f0" loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2b6ae66983f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae6698740"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae66988c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b6ae6663530" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b6ae6663530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6663880"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6663a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b6ae6663da0" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6663da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6662170"/>
        <function-ref name="write" scoped="" ref="0x2b6ae66622f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b6ae6667990" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6667990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6667ce0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6667e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b6ae666c1b0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6ae666c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b6ae666c500"/>
        <function-ref name="changed" scoped="" ref="0x2b6ae666c688"/>
        <function-ref name="amGroup" scoped="" ref="0x2b6ae666c810"/>
        <function-ref name="setAddress" scoped="" ref="0x2b6ae666c998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b6ae66792c0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b6ae66792c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6679610"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6679798"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6679920"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6679aa8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6679c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6679db8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6678020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae66781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b6ae66613c0" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae66613c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6661910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b6ae6677688" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b6ae6677688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae66779d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6677b60"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6677ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6677e70"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6676020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae66761a8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6676330"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae66764b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6646080" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6646080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae66463d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b6ae66643d0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae66643d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6664720"/>
        <function-ref name="write" scoped="" ref="0x2b6ae66648a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b6ae6661ca0" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6661ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae66a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b6ae66a43b0" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b6ae66a43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae66a4700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae66a4888"/>
        <function-ref name="request" scoped="" ref="0x2b6ae66a4a10"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae66a4b98"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae66a4d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b6ae66a3e50" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2b6ae66a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae66a21e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae66a2370"/>
        <function-ref name="request" scoped="" ref="0x2b6ae66a24f8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae66a2680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae66a2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b6ae6642318" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2b6ae6642318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b6ae6642668"/>
        <function-ref name="rfOff" scoped="" ref="0x2b6ae66427f0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b6ae6642978"/>
        <function-ref name="startVReg" scoped="" ref="0x2b6ae6642b00"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b6ae6642c88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b6ae6642e10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b6ae6641020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b6ae66411a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b6ae6666230" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6666230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6666580"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6666708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b6ae6667120" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6667120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6667470"/>
        <function-ref name="write" scoped="" ref="0x2b6ae66675f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b6ae66a5518" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b6ae66a5518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae66a5868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae66a2ac0" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae66a2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae66a2e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae66a1020"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae66a11a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae66a1330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae66a14b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae66a1640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae66a17c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae66a1de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae66a1950"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae66a1ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae66a1c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b6ae6699598" loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2b6ae6699598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae66998e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae6699a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae66466b0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae66466b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6646a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6646b88"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6646d10"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6644020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae66441a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b6ae6674a60" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b6ae6674a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6674db0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6668020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b6ae6674128" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6674128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6674578"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6674700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b6ae6671cd0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b6ae6671cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae66750a0"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6675228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6ae66753b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6ae6675538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b6ae66a3140" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2b6ae66a3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae66a3490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae66a3618"/>
        <function-ref name="request" scoped="" ref="0x2b6ae66a37a0"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae66a3928"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae66a3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b6ae66a5bf0" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae66a5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6661020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae66f73e0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae66f73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae66f7730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b6ae66f7d58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6ae66f7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae66f3410"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae66f54a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae66f5db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae66f5930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae66f3898"/>
        <function-ref name="start" scoped="" ref="0x2b6ae66f6af8"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae66f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae66f07d8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae66f07d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae66f0b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b6ae67da060" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6ae67da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae67d7690"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae67d8738"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae67d7088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae67d8bc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae67d7b18"/>
        <function-ref name="start" scoped="" ref="0x2b6ae67dadb0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae67d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6ae788fd48" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae788fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae788b410"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae788d4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae788ddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae788d930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae788b898"/>
        <function-ref name="start" scoped="" ref="0x2b6ae788eac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae788d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae788f560" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae788f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae788f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6ae78878a8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae78878a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7884020"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7885020"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae7885930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae78854a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae78844a8"/>
        <function-ref name="start" scoped="" ref="0x2b6ae7886660"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7886b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae78870c0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae78870c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae7887410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b6ae78fd020" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae78fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae78fd370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae78fd4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae78fd680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae78fd808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae78fd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b6ae79007d8" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae79007d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae7900b28"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae7900cb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae7900e38"/>
        <function-ref name="get" scoped="" ref="0x2b6ae78ff020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae78ff1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae78ff330"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae78ff4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae78ff640"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae78ff7c8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae78ff950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae78ffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b6ae78ffd60" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae78ffd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae78fe0d8"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae78fe260"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae78fe3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae78fe570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae78fe6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae78fe880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae78fea08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae78feb90"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae78fed18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b6ae67151c8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae67151c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae6715518"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae67156a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae6715828"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae67159b0"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6715b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b6ae671dba8" loc="50:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae671dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6719020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae67191a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae6719330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67194b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae6719640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae67197c8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae6719950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6719ad8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6719c60"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae6719de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae6718020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b6ae6718850" loc="51:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae6718850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae6718ba0"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae6718d28"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae6717020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae67171a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae6717330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae67174b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae6717640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae67177c8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae6717950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b6ae78f48c8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae78f48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae78f4c18"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae78f4da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae78f3020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae78f31a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae78f3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b6ae78f6020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae78f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae78f6370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae78f64f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae78f6680"/>
        <function-ref name="get" scoped="" ref="0x2b6ae78f6808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae78f6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae78f6b18"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae78f6ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae78f6e28"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae78f5020"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae78f51a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae78f5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6ae78fa020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae78fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae78f7690"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae78f96f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae78f7088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae78f9b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae78f7b18"/>
        <function-ref name="start" scoped="" ref="0x2b6ae78fad70"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae78f9270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae78fb7a8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae78fb7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae78fbaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b6ae78f55b8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae78f55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae78f5908"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae78f5a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae78f5c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae78f5da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae78f4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae78f41a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae78f4330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae78f44b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae78f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6ae6760738" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae6760738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae675d578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae675c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae675da00"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae675c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b6ae6787b10" loc="63:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b6ae6787b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae67868f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6784230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6786d80"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae67846b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6ae67a3878" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae67a3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6788660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6787020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6788ae8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae67874a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6ae7882830" loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae7882830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae787e020"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae787f020"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae787f930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae787f4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae787e4a8"/>
        <function-ref name="start" scoped="" ref="0x2b6ae78805e0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7880ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b6ae787cce8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b6ae787cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7906410"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae79074a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae7907db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7907930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae7906898"/>
        <function-ref name="start" scoped="" ref="0x2b6ae7908ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7907020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6ae787ead0" loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae787ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae787d860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae787c1f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae787dce8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae787c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b6ae67d1020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b6ae67d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67d1370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67d14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67d1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67d1808"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67d1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67d1b18"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67d1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67d1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b6ae67d01b8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b6ae67d01b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67d0508"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67d0690"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67d0818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67d09a0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67d0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67d0cb0"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67d0e38"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b6ae67cf378" loc="46:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2b6ae67cf378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67cf6c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67cf850"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67cf9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67cfb60"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67cfce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67cfe70"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67ce020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b6ae67d3e20" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b6ae67d3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67d21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67d2330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67d24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67d2640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67d27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67d2950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67d2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67d2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b6ae67cd688" loc="48:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2b6ae67cd688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67cd9d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67cdb60"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67cdce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67cde70"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67cc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67cc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67cc330"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67cc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b6ae66f8c28" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b6ae66f8c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67d3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67d31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67d3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67d34b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67d3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67d37c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67d3950"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67d3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b6ae67ce4f0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b6ae67ce4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67ce840"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67ce9c8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67ceb50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67cecd8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67cee60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67cd020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67cd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67cd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae67c9908" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae67c9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67c9c58"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67c9de0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6813020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae68131a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6813330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae68134b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6813640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae68137c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6813950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6813ad8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6813c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6813de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6812020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae68122a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6812430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae67cb7d0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae67cb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67cbb20"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67cbca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67cbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67c9020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67c91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67c9330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67c94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67c9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae680f120" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae680f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae680f470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae680f5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae680f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae680f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae680fa90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae680fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae680fda0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae680e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae680e1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae680e330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae680e4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae680e640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae680e7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae680ea50"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae680ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae6810020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6810020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6810370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae68104f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6810680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6810808"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6810990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6810b18"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6810ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6810e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae680b908" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae680b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae680bc58"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae680bde0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae680a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae680a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae680a330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae680a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae680a640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae680a7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae680a950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae680aad8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae680ac60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae680ade8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6809020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae68092a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6809430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae680c720" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae680c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae680ca70"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae680cbf8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae680cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae680b020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae680b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae680b330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae680b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae680b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae6806120" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae6806120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6806470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae68065f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6806780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6806908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6806a90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6806c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6806da0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6805020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae68051a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6805330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae68054b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6805640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae68057c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6805a50"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6805bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae6807020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6807020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6807370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae68074f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6807680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6807808"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6807990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6807b18"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6807ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6807e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae6802908" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae6802908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6802c58"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6802de0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6800020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae68001a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6800330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae68004b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6800640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae68007c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6800950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6800ad8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6800c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6800de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae67ff020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae67ff2a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67ff430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae6803720" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6803720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6803a70"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6803bf8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6803d80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6802020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae68021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6802330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae68024b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6802640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae67fc120" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae67fc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67fc470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67fc5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae67fc780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67fc908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67fca90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae67fcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67fcda0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67fb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae67fb1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae67fb330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67fb4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae67fb640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae67fb7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae67fba50"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67fbbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae67fd020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae67fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67fd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67fd808"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67fdb18"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67fdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67fde28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae67f8908" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae67f8908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67f8c58"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67f8de0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae67f7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67f71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67f7330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae67f74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67f7640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67f77c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae67f7950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae67f7ad8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67f7c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae67f7de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae67f6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae67f62a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67f6430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae67f9720" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae67f9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae67f9a70"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae67f9bf8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae67f9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae67f8020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae67f81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae67f8330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae67f84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae67f8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b6ae68330c8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b6ae68330c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b6ae6833418"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae68335a0"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae6833728"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b6ae68338b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b6ae6833c80" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2b6ae6833c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6832020"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae68321a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6ae6832330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6ae68324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b6ae6832898" loc="44:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6ae6832898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6832be8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6832d70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6ae682e020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6ae682e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2b6ae681ad60" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2b6ae681ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae68190d8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6ae6819260"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae68193e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6819570"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae68196f8"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6ae6819880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6ae682b020" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6ae682b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b6ae682b370"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae682b4f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae682b680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b6ae682b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b6ae682ba90" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae682ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae682bde0"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae681a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae681a1a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae681a330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae681a4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae681a640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae681a7c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae681a950"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae681aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2b6ae6819b48" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6819b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6818020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae68181a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6818330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae68184b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6818640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae68187c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6818950"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6818ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6818c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6818de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6817020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae68171a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6817330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae68175b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6817740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b6ae68566f0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b6ae68566f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6856a40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6856bc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6856d50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6855020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae68551a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6855330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b6ae684b6f0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b6ae684b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae684ba40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae684bbc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae684bd50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae684a020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae684a1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae684a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b6ae68526f0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b6ae68526f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6852a40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6852bc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6852d50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6851020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae68511a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6851330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b6ae68506f0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b6ae68506f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6850a40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6850bc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6850d50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae684f020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae684f1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae684f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b6ae685c6f0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b6ae685c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae685ca40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae685cbc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae685cd50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6857020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae68571a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6857330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b6ae684d6f0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b6ae684d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae684db40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae684dcc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae684de50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae684c020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae684c1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae684c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b6ae68556f0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b6ae68556f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6855a40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6855bc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6855d50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6854020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae68541a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6854330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b6ae684a6f0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b6ae684a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae684aa40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae684abc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae684ad50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6849020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae68491a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6849330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b6ae68587b8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b6ae68587b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6858b08"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6858c90"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6858e18"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae685d020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae685d1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae685d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b6ae684f6f0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b6ae684f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae684fa40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae684fbc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae684fd50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae684e020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae684e1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae684e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b6ae68576f0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b6ae68576f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6857a40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6857bc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6857d50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6856020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae68561a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6856330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b6ae684c6f0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b6ae684c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae684ca40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae684cbc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae684cd50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae684b020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae684b1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae684b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b6ae68546f0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b6ae68546f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6854a40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6854bc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6854d50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6852020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae68521a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6852330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b6ae68516f0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b6ae68516f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6851a40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6851bc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6851d50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6850020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae68501a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6850330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b6ae685d6f0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b6ae685d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae685da40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae685dbc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae685dd50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae685c020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae685c1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae685c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b6ae684e6f0" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b6ae684e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae684ea40"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae684ebc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae684ed50"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae684d020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae684d1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae684d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b6ae68423e0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b6ae68423e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6842730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68428b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6842a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6842bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6842d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6841020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b6ae68843e0" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b6ae68843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6884730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68848b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6884a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6884bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6884d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6883020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b6ae683f3e0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b6ae683f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae683f730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae683f8b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae683fa40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae683fbc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae683fd50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae683e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b6ae683d3e0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b6ae683d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae683d730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae683d8b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae683da40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae683dbc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae683dd50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae683c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b6ae68443e0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b6ae68443e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6844730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68448b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6844a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6844bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6844d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6843020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b6ae68873e0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b6ae68873e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6887830"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68879b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6887b40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6887cc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6887e50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6885020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b6ae68413e0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b6ae68413e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6841730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68418b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6841a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6841bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6841d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6840020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b6ae68833e0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b6ae68833e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6883730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68838b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6883a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6883bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6883d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6882020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b6ae6846470" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b6ae6846470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae68467c0"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6846948"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6846ad0"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6846c58"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6846de0"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6845020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b6ae683c3e0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b6ae683c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae683c730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae683c8b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae683ca40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae683cbc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae683cd50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6888020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b6ae68433e0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b6ae68433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6843730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68438b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6843a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6843bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6843d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6842020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b6ae68853e0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b6ae68853e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6885730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68858b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6885a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6885bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6885d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6884020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b6ae68403e0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b6ae68403e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6840730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68408b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6840a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6840bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6840d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae683f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b6ae683e3e0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b6ae683e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae683e730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae683e8b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae683ea40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae683ebc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae683ed50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae683d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b6ae68453e0" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b6ae68453e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6845730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68458b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6845a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6845bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6845d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6844020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b6ae68883e0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b6ae68883e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6888730"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae68888b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6888a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6888bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6888d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6887020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b6ae6943780" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b6ae6943780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6943ad0"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6943c58"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6943de0"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6936020"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae69361a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae6936330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b6ae6944b58" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b6ae6944b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6943020"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae69431a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6ae6943330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6ae69434b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2b6ae69345f8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2b6ae69345f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6934948"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6934ad0"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6934c58"/>
        <function-ref name="edge" scoped="" ref="0x2b6ae6934de0"/>
        <function-ref name="enable" scoped="" ref="0x2b6ae6932020"/>
        <function-ref name="getValue" scoped="" ref="0x2b6ae69321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b6ae6935a78" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2b6ae6935a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6935dc8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6934020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6ae69341a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6ae6934330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6ae6c74470" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6c74470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c749c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c74b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b6ae6c7f9b8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b6ae6c7f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6ae6c78470" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6c78470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c787c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c78948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b6ae6c73d98" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6c73d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c72170"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c722f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b6ae6c6b470" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b6ae6c6b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6b7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b6ae6c725c0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b6ae6c725c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c72910"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c72a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b6ae6c5f7c0" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6c5f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c5fb10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c5fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b6ae6c617c0" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b6ae6c617c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c61b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c61c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6ae6c7ec50" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6c7ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b6ae6c67c10" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b6ae6c67c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c66020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6ae6c637c0" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6c637c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c63b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c63c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6ae6c76470" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b6ae6c76470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c767c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c76948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6ae6c75470" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6c75470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c757c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c75948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b6ae6c6dc10" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae6c6dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6c020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b6ae6c6e470" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b6ae6c6e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6e7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6ae6c72d60" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6c72d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c710d8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c71260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6ae6c80430" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6c80430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6ae6c80780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6ae6c80908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6ae6c80a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6ae6c7b638" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6c7b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6ae6c7bc50" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b6ae6c7bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b6ae6c65060" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae6c65060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c653b0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c65538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b6ae6c7a3a0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae6c7a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b6ae6c61020" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6c61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c61370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c614f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6ae6c7c900" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6c7c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b6ae6c67470" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b6ae6c67470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c677c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c67948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b6ae6c76c10" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae6c76c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c75020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6ae6c78c10" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6c78c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c76020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6ae6c7f3a0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6c7f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b6ae6c68470" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae6c68470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c687c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c68948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b6ae6c6bc10" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b6ae6c6bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c69020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b6ae6c68c10" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae6c68c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c67020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b6ae6c5f020" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6c5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c5f370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c5f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b6ae6c60020" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b6ae6c60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c60370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c604f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b6ae6c6ec10" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b6ae6c6ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6d020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b6ae6c69470" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b6ae6c69470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c697c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c69948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6ae6c63020" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae6c63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c63370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c634f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b6ae6c71cc8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae6c71cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6f0a0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6ae6c5e020" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6c5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6c5e370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6c5e4f8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c5e680"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6c5e808"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6c5e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6ae6c80d58" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b6ae6c80d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b6ae6c79c50" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b6ae6c79c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c78020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b6ae6c75c10" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae6c75c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c74020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b6ae6c6c470" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae6c6c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6c7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6ae6c71528" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6c71528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c71878"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c71a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b6ae6c6cc10" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae6c6cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6b020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6ae6c74e10" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6c74e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c731a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c73330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6ae6c7e020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b6ae6c7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b6ae6c735f8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6c735f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c73948"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c73ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6c817d0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6c817d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6c81b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6c81ca8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6c81e30"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6c80020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6c801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b6ae6c7a9b8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6c7a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b6ae6c79638" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b6ae6c79638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c79988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6ae6c647c0" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b6ae6c647c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c64b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c64c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6ae6c64020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6c64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c64370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c644f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6ae6c7b020" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6c7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b6ae6c65800" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae6c65800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c65b50"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c65cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b6ae6c607c0" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b6ae6c607c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c60b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c60c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b6ae6c6d470" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae6c6d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6d7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b6ae6c69c10" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b6ae6c69c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c68020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6ae6c7e638" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b6ae6c7e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6ae6c7c2e8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6c7c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c7c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b6ae6c6f4f0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae6c6f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6f840"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b6ae6c79020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b6ae6c79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6c79370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b6ae6c6fc90" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b6ae6c6fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c6e020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b6ae6c66470" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b6ae6c66470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c66bc0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c66d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6ae6c5ec58" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6c5ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6cbd020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6cbd1a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cbd330"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6cbd4b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6cbd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b6ae6996c00" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b6ae6996c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6995020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae69951a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6995330"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae69954b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6995640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6ae6997cb0" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6997cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6ae69960a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6ae6996228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6ae69963b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b6ae6994020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b6ae6994020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6994370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae69944f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b6ae6994d60" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b6ae6994d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae69920d8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6992260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6997020" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6997020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6997370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae69974f8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6997680"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6997808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6997990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b6ae6992ad8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b6ae6992ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6992e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b6ae6985020" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6985020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6985370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae69854f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b6ae698de50" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2b6ae698de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae698c1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae698c370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae698c4f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae698c680"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae698c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6ae6991df8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6991df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6ae698e170"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6ae698e2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6ae698e480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b6ae6987d18" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b6ae6987d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6ae69860a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b6ae6985838" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2b6ae6985838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae6985b88"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae6985d10"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae6984020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae69841a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae6984330"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae69844b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b6ae69881e8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b6ae69881e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6988538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae69886c0"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6988848"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae69889d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6988b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b6ae698a040" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2b6ae698a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae698a390"/>
        <function-ref name="write" scoped="" ref="0x2b6ae698a518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b6ae698ad40" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2b6ae698ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae69890d8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6989260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae6984730" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae6984730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae6984a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae6984c08"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6984d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae697e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae697e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae697e330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae697e4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae697ead8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae697e640"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae697e7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae697e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae698ec10" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae698ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae698d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae698d1a8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae698d330"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae698d4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae698d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b6ae69795d0" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2b6ae69795d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae6979920"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae6979aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b6ae6989a98" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2b6ae6989a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6989de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6ae6a18100" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b6ae6a18100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae6a18450"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae6a185d8"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae6a18760"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae6a188e8"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae6a18a70"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae6a18bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6ae6a15858" loc="66:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b6ae6a15858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae6a15ba8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae6a15d30"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae6a12020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae6a121a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae6a12330"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae6a124b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6a0e5d8" loc="66:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6a0e5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae6a0e928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6ae6a0d1c8" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b6ae6a0d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae6a0d518"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae6a0d6a0"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae6a0d828"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae6a0d9b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae6a0db38"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae6a0dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b6ae6c48020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6c48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6c48370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6c484f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b6ae69f6948" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b6ae69f6948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6ae69f6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae69f7cf0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae69f7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae69f60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae69f6228"/>
        <function-ref name="request" scoped="" ref="0x2b6ae69f63b0"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae69f6538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae69f66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae79dac18" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae79dac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae79d9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae79d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b6ae79d85b8" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae79d85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae79d8908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae79d8a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b6ae79d8d18" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b6ae79d8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b6ae79d70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b6ae79d9430" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b6ae79d9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6ae79d9780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae79da020" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae79da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae79da370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae79da4f8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae79da680"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae79da808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae79da990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b6ae79d9a08" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b6ae79d9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b6ae79d9d58"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b6ae79d8020"/>
        <function-ref name="splitRead" scoped="" ref="0x2b6ae79d81a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae79d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b6ae6a376c0" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6a376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae6a37a10"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae6a37b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b6ae6a354d0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6a354d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6a35820"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6a359a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b6ae6a32498" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b6ae6a32498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b6ae6a327e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b6ae6a37e68" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b6ae6a37e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6ae6a361e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b6ae6a33270" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b6ae6a33270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6a335c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6a33748"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6a338d0"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6a33a58"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6a33be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6a384e8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6a384e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6a38838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6a389c0"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6a38b48"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6a38cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6a38e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b6ae6a364e0" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b6ae6a364e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b6ae6a36830"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b6ae6a369b8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b6ae6a36b40"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6a36cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b6ae6a32c40" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae6a32c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6a31020"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae6a311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b6ae6a86860" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6a86860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae6a86bd0"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae6a86d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b6ae6a841e0" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2b6ae6a841e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6a84550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6a846d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2b6ae6a83860" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2b6ae6a83860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b6ae6a83bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b6ae6a85020" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2b6ae6a85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6ae6a85370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2b6ae6a82020" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b6ae6a82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae6a82370"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae6a824f8"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae6a82680"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae6a82808"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae6a82990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae6a82b18"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae6a82ca0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae6a82e28"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae6a81020"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae6a811a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae6a81330"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae6a814b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae6a81640"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae6a818c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae6a81a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae6a81bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae6a81d60"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae6a80020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae6a801a8"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae6a80330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae6a804b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae6a80640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae6a807c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae6a80950"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae6a80ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae6a80e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae6a7f020"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae6a7f1a8"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae6a7f330"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae6a7f4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae6a7f640"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae6a7f7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae6a7f950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae6a7fad8"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae6a7fc60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae6a7fde8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae6a7e020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae6a7e1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae6a7e330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae6a7e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae6a7c020" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae6a7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae6a7c370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae6a7c4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6a7c680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae6a7c808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae6a7c990"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6a7cb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae6a7cca0"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae6a7b330"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6a7b020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae6a7ce28"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae6a7b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2b6ae6a84ac0" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2b6ae6a84ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6a84e30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6a83020"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6a831a8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6a83330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6a834b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6a87ae8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6a87ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6a87e58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6a86020"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6a861a8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6a86330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6a864b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b6ae6a855f8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2b6ae6a855f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b6ae6a85948"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b6ae6a85ad0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b6ae6a85c58"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6a85de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2b6ae6a7e780" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2b6ae6a7e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6a7ead0"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae6a7ec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2b6ae6a7b5f8" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2b6ae6a7b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae6a7b948"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae6a7bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b6ae6ac5d68" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b6ae6ac5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6ac40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b6ae6ac5528" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae6ac5528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6ac5878"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae6ac5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b6ae6a76bd8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae6a76bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae6a73020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae6a731a8"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae6a73330"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae6a734b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae6a73640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae6a737c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae6a73950"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae6a73ad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae6a73c60"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae6a73de8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae6a72020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae6a721a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae6a72330"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae6a725b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae6a72740"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae6a728c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae6a72a50"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae6a72bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae6a72d60"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae6a71020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae6a711a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae6a71330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae6a714b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae6a71640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae6a717c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae6a71b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae6a71cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae6a71e60"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae6a70020"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae6a701a8"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae6a70330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae6a704b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae6a70640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae6a707c8"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae6a70950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae6a70ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae6a70c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae6a70de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae6ac5020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae6ac51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b6ae6ae2558" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b6ae6ae2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6ae28a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6ae2a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6ae2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6ae2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6ae1020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6ae11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6ae1330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6ae14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6ae1640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6ae17c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6ae1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6ae1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6ae1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6ae0020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6ae01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b6ae6abdbf0" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6abdbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6abc020"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae6abc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2b6ae6ae0558" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2b6ae6ae0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6ae08a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6ae0a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6ae0bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6ae0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6adf020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6adf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6adf330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6adf4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6adf640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6adf7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6adf950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6adfad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6adfc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6ade020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6ade1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2b6ae6ade558" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2b6ae6ade558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6ade8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6adea30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6adebb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6aded40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6add020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6add1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6add330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6add4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6add640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6add7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6add950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6addad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6addc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6adc020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6adc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2b6ae6ac1350" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2b6ae6ac1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae6ac16a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae6ac1828"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae6ac19b0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae6ac1b38"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae6ac1cc0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae6ac1e48"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae6ac0020"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae6ac01a8"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae6ac0330"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae6ac04b8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae6ac0640"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae6ac07c8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae6ac0950"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae6ac0bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae6ac0d60"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae6abf020"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae6abf1a8"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae6abf330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae6abf4b8"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae6abf640"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae6abf7c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae6abf950"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae6abfad8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae6abfc60"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae6abfde8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae6abe220"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae6abe3a8"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae6abe530"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae6abe6b8"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae6abe840"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae6abe9c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae6abeb50"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae6abecd8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae6abee60"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae6abd020"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae6abd1a8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae6abd330"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae6abd4b8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae6abd640"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae6abd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2b6ae6aeba48" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b6ae6aeba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b6ae6aebd98"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b6ae6abb020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b6ae6abb1a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b6ae6abb330"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b6ae6abb4b8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b6ae6abb640"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b6ae6abb7c8"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b6ae6abb950"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae6abbad8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b6ae6abbc60"/>
        <function-ref name="getData" scoped="" ref="0x2b6ae6abbde8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b6ae6aba020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b6ae6aba1a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b6ae6aba430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b6ae6aba5b8"/>
        <function-ref name="getIV" scoped="" ref="0x2b6ae6aba740"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b6ae6aba8c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b6ae6abaa50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b6ae6ababd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b6ae6abad60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b6ae6aea020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b6ae6aea1a8"/>
        <function-ref name="isI2C" scoped="" ref="0x2b6ae6aea330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b6ae6aea4b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b6ae6aea640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b6ae6aea9c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b6ae6aeab50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b6ae6aeacd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b6ae6aeae60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b6ae6ae9020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b6ae6ae91a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b6ae6ae9330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b6ae6ae94b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b6ae6ae9640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b6ae6ae97c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b6ae6ae9950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b6ae6ae9ad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b6ae6ae9c60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b6ae6ae9de8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b6ae6ae8020"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b6ae6ae81a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b6ae6ae8330"/>
        <function-ref name="setData" scoped="" ref="0x2b6ae6ae84b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b6ae6ae8640"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b6ae6ae87c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b6ae6ae8950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b6ae6ae8ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b6ae6ae8c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b6ae6ae8de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b6ae6ae7420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b6ae6ae75a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b6ae6ae7730"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b6ae6ae78b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b6ae6ae7a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b6ae6ae7bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b6ae6ae7d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b6ae6ae6020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b6ae6ae61a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b6ae6ae6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2b6ae6ae4658" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2b6ae6ae4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6ae49a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6ae4b30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6ae4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6ae4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6ae3020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6ae31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6ae3330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6ae34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6ae3640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6ae37c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6ae3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6ae3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6ae3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6ae2020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6ae21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b6ae6abc5d8" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b6ae6abc5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6abc928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b6ae6ae66e0" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b6ae6ae66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6ae6a30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6ae6bb8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6ae6d40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6ae5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6ae51a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6ae5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6ae54b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6ae5640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6ae57c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6ae5950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6ae5ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6ae5c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6ae5de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6ae4120"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6ae42a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae79d0060" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae79d0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae79d03b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae79d0538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2b6ae79c9020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2b6ae79c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae79c9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6ae79c20c0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae79c20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae79c2410"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae79c2598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b6ae79c95f8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b6ae79c95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b6ae79c9948"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b6ae79c9ad0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b6ae79c9c58"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b6ae79c9de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b6ae79c8020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b6ae79c81a8"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b6ae79c8330"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b6ae79c84b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae79c8640"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b6ae79c87c8"/>
        <function-ref name="getData" scoped="" ref="0x2b6ae79c8950"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b6ae79c8ad8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b6ae79c8c60"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b6ae79c7020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b6ae79c71a8"/>
        <function-ref name="getIV" scoped="" ref="0x2b6ae79c7330"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b6ae79c74b8"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b6ae79c7640"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b6ae79c77c8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b6ae79c7950"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b6ae79c7ad8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b6ae79c7c60"/>
        <function-ref name="isI2C" scoped="" ref="0x2b6ae79c7de8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b6ae79c6020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b6ae79c61a8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b6ae79c6530"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b6ae79c66b8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b6ae79c6840"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b6ae79c69c8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b6ae79c6b50"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b6ae79c6cd8"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b6ae79c6e60"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b6ae79c5020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b6ae79c51a8"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b6ae79c5330"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b6ae79c54b8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b6ae79c5640"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b6ae79c57c8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b6ae79c5950"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b6ae79c5ad8"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b6ae79c5c60"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b6ae79c5de8"/>
        <function-ref name="setData" scoped="" ref="0x2b6ae79c4020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b6ae79c41a8"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b6ae79c4330"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b6ae79c44b8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b6ae79c4640"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b6ae79c47c8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b6ae79c4950"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b6ae79c3020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b6ae79c31a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b6ae79c3330"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b6ae79c34b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b6ae79c3640"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b6ae79c37c8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b6ae79c3950"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b6ae79c3ad8"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b6ae79c3c60"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b6ae79c3de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2b6ae79ca740" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2b6ae79ca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae79caa90"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae79cac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae79d1418" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae79d1418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae79d1768"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae79d18f0"/>
        <function-ref name="request" scoped="" ref="0x2b6ae79d1a78"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae79d1c00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae79d1d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2b6ae79ce020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2b6ae79ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae79ce370"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae79ce4f8"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae79ce680"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae79ce808"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae79ce990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae79ceb18"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae79ceca0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae79cee28"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae79cd020"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae79cd1a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae79cd330"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae79cd4b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae79cd640"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae79cd8c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae79cda50"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae79cdbd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae79cdd60"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae79cc020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae79cc1a8"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae79cc330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae79cc4b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae79cc640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae79cc7c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae79cc950"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae79ccad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae79cce60"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae79cb020"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae79cb1a8"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae79cb330"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae79cb4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae79cb640"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae79cb7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae79cb950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae79cbad8"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae79cbc60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae79cbde8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae79ca020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae79ca1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae79ca330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae79ca4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6ae79d07c0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae79d07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae79d0b10"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae79d0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae6b4b020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae6b4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae6b4b370"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae6b4b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6ae6b4a570" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6b4a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae6b4a8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae6b4aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b6ae6b4f2b0" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6b4f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6b4f600"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae6b4f788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6b4ece8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6b4ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6b4d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6b4d228"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6b4d3b0"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6b4d538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6b4d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b6ae6b4e1c8" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b6ae6b4e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6b4e518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6ae6b4b7f0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6b4b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae6b4bb40"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae6b4bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6ae6ba2a48" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6ba2a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae6ba2d98"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae6ba1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2b6ae6b49b70" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2b6ae6b49b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6ba3020"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae6ba31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2b6ae6ba2470" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2b6ae6ba2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6ba27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2b6ae6ba3590" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2b6ae6ba3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6ba3900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2b6ae6ba3bc8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2b6ae6ba3bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2b6ae6ba2020"/>
        <function-ref name="txDone" scoped="" ref="0x2b6ae6ba21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae6b9d388" loc="92:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae6b9d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae6b9d6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae6b9d880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6ae6b9b020" loc="96:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae6b9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae6b9b390"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae6b9b518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6ae6b9dac8" loc="93:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae6b9dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6b9de18"/>
        <function-ref name="requested" scoped="" ref="0x2b6ae6b9c020"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6b9c1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6b9c330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae6b9c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6b9e558" loc="91:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6b9e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6b9e8c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6b9ea50"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6b9ebd8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6b9ed60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6b9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6ae6b9c700" loc="94:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae6b9c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae6b9ca50"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae6b9cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae79fbb18" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae79fbb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae79fbe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b6ae79fa120" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b6ae79fa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6ae79fa470"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6ae79fa5f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6ae79fa780"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6ae79fa908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6ae79f7e38" loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6ae79f7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6ae79f61e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae79f6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6ae79f5b08" loc="60:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6ae79f5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6ae79f5e78"/>
        <function-ref name="configure" scoped="" ref="0x2b6ae79f4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6ae79f42b8" loc="61:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b6ae79f42b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6ae79f4608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6ae79f4790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6ae79f4918"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6ae79f4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b6ae79f65b8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b6ae79f65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae79f6908"/>
        <function-ref name="requested" scoped="" ref="0x2b6ae79f6a90"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae79f6c18"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae79f6da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6ae79f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae79f4ce8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae79f4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae79f30a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae79f3228"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae79f33b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae79f3538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae79f36c0"/>
        <function-ref name="get" scoped="" ref="0x2b6ae79f3848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae79f39d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae79f2020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae79f3ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae79f3b58"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae79f3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae79f7140" loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae79f7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae79f74b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae79f7638"/>
        <function-ref name="request" scoped="" ref="0x2b6ae79f77c0"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae79f7948"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae79f7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6ae79f5268" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6ae79f5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6ae79f55b8"/>
        <function-ref name="userId" scoped="" ref="0x2b6ae79f5740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6ae79f22e8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2b6ae79f22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae79f2638"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae79f27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2b6ae6b95b38" loc="4:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2b6ae6b95b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b6ae6b92020"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b6ae6b921a8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b6ae6b92330"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b6ae6b924b8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b6ae6b92640"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b6ae6b927c8"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b6ae6b92950"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b6ae6b92ad8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae6b92c60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b6ae6b92de8"/>
        <function-ref name="getData" scoped="" ref="0x2b6ae6b91020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b6ae6b911a8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b6ae6b91330"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b6ae6b915b8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b6ae6b91740"/>
        <function-ref name="getIV" scoped="" ref="0x2b6ae6b918c8"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b6ae6b91a50"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b6ae6b91bd8"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b6ae6b91d60"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b6ae6b90020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b6ae6b901a8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b6ae6b90330"/>
        <function-ref name="isI2C" scoped="" ref="0x2b6ae6b904b8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b6ae6b90640"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b6ae6b907c8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b6ae6b90b50"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b6ae6b90cd8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b6ae6b90e60"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b6ae6b8f020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b6ae6b8f1a8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b6ae6b8f330"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b6ae6b8f4b8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b6ae6b8f640"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b6ae6b8f7c8"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b6ae6b8f950"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b6ae6b8fad8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b6ae6b8fc60"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b6ae6b8fde8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b6ae6b8e020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b6ae6b8e1a8"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b6ae6b8e330"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b6ae6b8e4b8"/>
        <function-ref name="setData" scoped="" ref="0x2b6ae6b8e640"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b6ae6b8e7c8"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b6ae6b8e950"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b6ae6b8ead8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b6ae6b8ec60"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b6ae6b8ede8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b6ae6b8d020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b6ae6b8d5a8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b6ae6b8d730"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b6ae6b8d8b8"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b6ae6b8da40"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b6ae6b8dbc8"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b6ae6b8dd50"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b6ae6b8c020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b6ae6b8c1a8"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b6ae6b8c330"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b6ae6b8c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2b6ae6b81060" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2b6ae6b81060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b6ae6b813b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2b6ae6b81538"/>
        <function-ref name="setUctl" scoped="" ref="0x2b6ae6b816c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2b6ae6b81848"/>
        <function-ref name="setUrctl" scoped="" ref="0x2b6ae6b819d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b6ae6b81b58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2b6ae6b81ce0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2b6ae6b81e68"/>
        <function-ref name="getUrctl" scoped="" ref="0x2b6ae6b80020"/>
        <function-ref name="resetUsart" scoped="" ref="0x2b6ae6b801a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2b6ae6b80330"/>
        <function-ref name="disableIntr" scoped="" ref="0x2b6ae6b804b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2b6ae6b80640"/>
        <function-ref name="getUbr" scoped="" ref="0x2b6ae6b808c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b6ae6b80a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x2b6ae6b80bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2b6ae6b80d60"/>
        <function-ref name="isUart" scoped="" ref="0x2b6ae6b7f020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b6ae6b7f1a8"/>
        <function-ref name="isSpi" scoped="" ref="0x2b6ae6b7f330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2b6ae6b7f4b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b6ae6b7f640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2b6ae6b7f7c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2b6ae6b7f950"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae6b7fad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2b6ae6b7fe60"/>
        <function-ref name="clrIntr" scoped="" ref="0x2b6ae6b7e020"/>
        <function-ref name="setUbr" scoped="" ref="0x2b6ae6b7e1a8"/>
        <function-ref name="tx" scoped="" ref="0x2b6ae6b7e330"/>
        <function-ref name="getUctl" scoped="" ref="0x2b6ae6b7e4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x2b6ae6b7e640"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6ae6b7e7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2b6ae6b7e950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2b6ae6b7ead8"/>
        <function-ref name="rx" scoped="" ref="0x2b6ae6b7ec60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2b6ae6b7ede8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2b6ae6b7d020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2b6ae6b7d1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2b6ae6b7d330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2b6ae6b7d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2b6ae6b7b7e0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2b6ae6b7b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6b7bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6b7bcb8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6b7be40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6b7a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6b7a1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6b7a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6b7a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6b7a640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6b7a7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6b7a950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6b7aad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6b7ac60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6b7ade8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6b79120"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6b792a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2b6ae6b894e8" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2b6ae6b894e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2b6ae6b89838"/>
        <function-ref name="getStartByte" scoped="" ref="0x2b6ae6b899c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2b6ae6b89b48"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2b6ae6b89cd0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2b6ae6b89e58"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2b6ae6b88020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2b6ae6b881a8"/>
        <function-ref name="getStopBit" scoped="" ref="0x2b6ae6b88330"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae6b884b8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2b6ae6b88640"/>
        <function-ref name="getData" scoped="" ref="0x2b6ae6b887c8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2b6ae6b88950"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2b6ae6b88ad8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2b6ae6b88d60"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2b6ae6b87020"/>
        <function-ref name="getIV" scoped="" ref="0x2b6ae6b871a8"/>
        <function-ref name="enableI2C" scoped="" ref="0x2b6ae6b87330"/>
        <function-ref name="setStartBit" scoped="" ref="0x2b6ae6b874b8"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2b6ae6b87640"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2b6ae6b877c8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2b6ae6b87950"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2b6ae6b87ad8"/>
        <function-ref name="isI2C" scoped="" ref="0x2b6ae6b87c60"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2b6ae6b87de8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2b6ae6b86020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2b6ae6b863a8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2b6ae6b86530"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2b6ae6b866b8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2b6ae6b86840"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2b6ae6b869c8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2b6ae6b86b50"/>
        <function-ref name="disableI2C" scoped="" ref="0x2b6ae6b86cd8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2b6ae6b86e60"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2b6ae6b85020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2b6ae6b851a8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2b6ae6b85330"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2b6ae6b854b8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2b6ae6b85640"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2b6ae6b857c8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2b6ae6b85950"/>
        <function-ref name="getStartBit" scoped="" ref="0x2b6ae6b85ad8"/>
        <function-ref name="setWordMode" scoped="" ref="0x2b6ae6b85c60"/>
        <function-ref name="setData" scoped="" ref="0x2b6ae6b85de8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2b6ae6b84020"/>
        <function-ref name="getClockSource" scoped="" ref="0x2b6ae6b841a8"/>
        <function-ref name="getWordMode" scoped="" ref="0x2b6ae6b84330"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2b6ae6b844b8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2b6ae6b84640"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2b6ae6b847c8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2b6ae6b84d50"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2b6ae6b83020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2b6ae6b831a8"/>
        <function-ref name="setStopBit" scoped="" ref="0x2b6ae6b83330"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2b6ae6b834b8"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2b6ae6b83640"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2b6ae6b837c8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2b6ae6b83950"/>
        <function-ref name="setStartByte" scoped="" ref="0x2b6ae6b83ad8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2b6ae6b83c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2b6ae6b7d868" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2b6ae6b7d868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6b7dbb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6b7dd40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6b7c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6b7c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6b7c330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6b7c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6b7c640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6b7c7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6b7c950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6b7cad8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6b7cc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6b7cde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6b7b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6b7b2a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6b7b430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6ae6ca6a88" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6ca6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca4020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b6ae6caf100" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b6ae6caf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6caf450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6ae6ca9a88" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6ca9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca9dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b6ae6ca3470" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6ca3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca37c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b6ae6c9cc10" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b6ae6c9cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9b020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b6ae6ca3c10" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b6ae6ca3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca2020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b6ae6c8f2e8" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6c8f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c8f638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c8f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b6ae6c922e8" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b6ae6c922e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c92638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c927c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6ae6cae3a0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6cae3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cae6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b6ae6c98470" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b6ae6c98470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c987c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c98948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6ae6c932e8" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6c932e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c93638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c937c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6ae6ca8a88" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b6ae6ca8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca8dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6ae6ca7a88" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6ca7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca7dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b6ae6c9d470" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae6c9d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9d7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b6ae6ca0c10" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b6ae6ca0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9f020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6ae6ca2470" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6ca2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca27c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6ae6cb2a90" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6cb2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6ae6cb2de0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6ae6cb0020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6ae6cb01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6ae6cadc50" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6cadc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6ae6cac2e8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b6ae6cac2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cac738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b6ae6c96a38" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae6c96a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c96d88"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b6ae6caca00" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae6caca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cacd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b6ae6c93a88" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6c93a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c93dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6ae6cad020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6cad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cad370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b6ae6c99c10" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b6ae6c99c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c98020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b6ae6ca72e8" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae6ca72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca7638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6ae6ca82e8" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6ca82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca8638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6ae6cb0a88" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6cb0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cb0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b6ae6c9ac10" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae6c9ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c99020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b6ae6c9b470" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b6ae6c9b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9b7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b6ae6c99470" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae6c99470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c997c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c99948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b6ae6c91a88" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6c91a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c91dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b6ae6c92a88" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b6ae6c92a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c92dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b6ae6c9f470" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b6ae6c9f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9f7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b6ae6c9bc10" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b6ae6c9bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9a020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6ae6c94a88" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae6c94a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c94dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b6ae6ca1470" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae6ca1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca17c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6ae6c8fa88" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6c8fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6c8fdd8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6cec020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cec1a8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6cec330"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6cec4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6ae6cb0470" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b6ae6cb0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cb07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b6ae6ca92e8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b6ae6ca92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca9638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b6ae6ca62e8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae6ca62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca6638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b6ae6c9dc10" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae6c9dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9c020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6ae6ca2c10" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6ca2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca1020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b6ae6c9c470" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae6c9c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9c7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6ae6ca4470" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6ca4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca47c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6ae6caf718" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b6ae6caf718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cafa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b6ae6ca4c10" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6ca4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca3020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6cb3e60" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6cb3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6cb21e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6cb2370"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6cb24f8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6cb2680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6cb2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b6ae6caa060" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6caa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6caa3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b6ae6caac90" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b6ae6caac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6ca9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6ae6c942e8" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b6ae6c942e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c94638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c947c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6ae6c95a88" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6c95a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c95dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6ae6cad638" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6cad638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cad988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b6ae6c952e8" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae6c952e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c95638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c957c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b6ae6c912e8" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b6ae6c912e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c91638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c917c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b6ae6c9fc10" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae6c9fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9d020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b6ae6c9a470" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b6ae6c9a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c9a7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c9a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6ae6cafd30" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b6ae6cafd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cae0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6ae6cae9b8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6cae9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6caed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b6ae6ca1c10" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae6ca1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca0020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b6ae6caa678" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b6ae6caa678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6caa9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b6ae6ca0470" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b6ae6ca0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ca07c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ca0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b6ae6c98c10" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b6ae6c98c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6c965e8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6c96770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6ae6cec780" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6cec780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6cecad0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6cecc58"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cecde0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6ceb020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6ceb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6ae6cd7470" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6cd7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd79c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd7b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b6ae6ce2900" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b6ae6ce2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6ce2c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6ae6cdb470" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6cdb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cdb7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cdb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b6ae6cd6d98" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6cd6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd5170"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd52f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b6ae6cce470" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b6ae6cce470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cce7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cce948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b6ae6cd55c0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b6ae6cd55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd5910"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd5a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b6ae6cc27c0" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6cc27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc2b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b6ae6cc47c0" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b6ae6cc47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc4b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6ae6ce1c50" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6ce1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cdf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b6ae6ccac10" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b6ae6ccac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc9020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6ae6cc57c0" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6cc57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc5b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6ae6cd9470" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b6ae6cd9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd97c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6ae6cd8470" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6cd8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd87c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b6ae6cd0c10" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae6cd0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ccf020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ccf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b6ae6cd1470" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b6ae6cd1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd17c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6ae6cd5d60" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6cd5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd30d8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6ae6ce32a8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6ce32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6ae6ce35f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6ae6ce3780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6ae6ce3908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6ae6cde638" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6cde638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cde988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6ae6cdec50" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b6ae6cdec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cdd0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b6ae6cc8060" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae6cc8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc83b0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b6ae6cdd3a0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae6cdd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cdd6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b6ae6cc4020" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6cc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc4370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6ae6cdf900" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6cdf900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cdfc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b6ae6cca470" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b6ae6cca470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cca7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cca948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b6ae6cd9c10" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae6cd9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd8020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6ae6cdbc10" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6cdbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd9020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6ae6ce22e8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6ce22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6ce2638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b6ae6ccb470" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae6ccb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ccb7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ccb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b6ae6ccec10" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b6ae6ccec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ccc020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ccc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b6ae6ccbc10" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae6ccbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cca020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b6ae6cc2020" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6cc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc2370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b6ae6cc3020" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b6ae6cc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc3370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b6ae6cd1c10" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b6ae6cd1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd0020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b6ae6ccc470" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b6ae6ccc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ccc7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ccc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6ae6cc5020" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae6cc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc5370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b6ae6cd3cc8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae6cd3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd20a0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd2228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6ae6cc1020" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6cc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6cc1370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6cc14f8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc1680"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6cc1808"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6cc1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6ae6ce3bd0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b6ae6ce3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6ce2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b6ae6cdcc50" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b6ae6cdcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cdb020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cdb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b6ae6cd8c10" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae6cd8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd7020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b6ae6ccf470" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae6ccf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ccf7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ccf948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6ae6cd3528" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6cd3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd3878"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b6ae6ccfc10" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae6ccfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cce020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6ae6cd7e10" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6cd7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd61a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6ae6ce1020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b6ae6ce1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6ce1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b6ae6cd65f8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6cd65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd6948"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6ce4558" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6ce4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6ce48a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6ce4a30"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6ce4bb8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6ce4d40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6ce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b6ae6cdd9b8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6cdd9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cddd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b6ae6cdc638" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b6ae6cdc638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cdc988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6ae6cc77c0" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b6ae6cc77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc7b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6ae6cc7020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6cc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc7370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6ae6cde020" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6cde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cde370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b6ae6cc8800" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae6cc8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc8b50"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc8cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b6ae6cc37c0" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b6ae6cc37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc3b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b6ae6cd0470" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae6cd0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd07c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b6ae6cccc10" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b6ae6cccc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6ccb020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6ccb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6ae6ce1638" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b6ae6ce1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6ce1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6ae6cdf2e8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6cdf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cdf638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b6ae6cd24f0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae6cd24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd2840"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b6ae6cdc020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b6ae6cdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6cdc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b6ae6cd2c90" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b6ae6cd2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cd1020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cd11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b6ae6cc9470" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b6ae6cc9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cc9bc0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6ae6cc1c58" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6cc1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6cc0020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6cc01a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6cc0330"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6cc04b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6cc0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b6ae6d16690" loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6ae6d16690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b6ae6d169e0"/>
        <function-ref name="changed" scoped="" ref="0x2b6ae6d16b68"/>
        <function-ref name="amGroup" scoped="" ref="0x2b6ae6d16cf0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b6ae6d16e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b6ae6d18cd8" loc="13:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b6ae6d18cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b6ae6d010a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b6ae6cfc190" loc="5:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b6ae6cfc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b6ae6cfc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2b6ae6cf9648" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b6ae6cf9648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6cf9998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b6ae6d00ad0" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b6ae6d00ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6d00e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2b6ae6d443f8" loc="14:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b6ae6d443f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6d44748"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6d448d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2b6ae6d44c40" loc="15:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2b6ae6d44c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6d48020"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6d481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2b6ae6d4ab08" loc="11:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2b6ae6d4ab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6d4ae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b6ae6cedba8" loc="8:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b6ae6cedba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6d35020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6d351a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b6ae6d35530" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b6ae6d35530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6d35880"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6d35a08"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6d35b90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6d35d18"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6d34020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6d341a8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6d34330"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6d344b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b6ae6d2c748" loc="15:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b6ae6d2c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6ae621e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b6ae6d2f578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b6ae6d31108" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2b6ae6d31108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6d31458"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6d315e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2b6ae6d31968" loc="14:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2b6ae6d31968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6d31cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6d31e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6d30020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6d301a8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6d30330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6d304b8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6d30640"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6d307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b6ae6d33b78" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b6ae6d33b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6ae621e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b6ae6d6c8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b6ae6d6a920" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2b6ae6d6a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6ae621e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b6ae6d5c698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6ae6d5cd10" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae6d5cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6ae621e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6d5bac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6d5a4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6d5a020"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6d5a930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2b6ae6d55178" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2b6ae6d55178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6ae621e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6d54020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6d54930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6d544a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6d54db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b6ae6d4f8c0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae6d4f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6d4fc10"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae6d4fd98"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae6d4e020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6d4e1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae6d4e330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6d4e4b8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae6d4e640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6d4e7c8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6d4e950"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae6d4ead8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae6d4ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6ae6d52740" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae6d52740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621fb98"/>
            <typename><typedef-ref name="TMicro" ref="0x2b6ae621e020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6d50578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6d4f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6d50a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6d4f4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2b6ae6d36378" loc="3:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2b6ae6d36378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6d366c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6d36850"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6d369d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6d36b60"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6d36ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6d36e70"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6dab020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6dab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6ae6da95f8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6ae6da95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6da9948"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6da9ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6ae6da9c58"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6da9de0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6da7020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6ae6da71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6da7330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6da74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6ae6da7640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6ae6da77c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6da7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6ae6da7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6ae6da7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6ae6da6020"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6da61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6ae6daa4e0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6ae6daa4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6daa830"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6daa9b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6daab40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6daacc8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6daae50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6da9020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6da91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6da9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6ae6da2020" loc="14:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b6ae6da2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6da2370"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6da24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6ae6d94140" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae6d94140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6ae6d94490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6ae6d94618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6ae6d947a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6ae6d94928"/>
        <function-ref name="setCca" scoped="" ref="0x2b6ae6d94ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6ae6d94c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b6ae6d93cc0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b6ae6d93cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6ae6d920a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b6ae6d95480" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6ae6d95480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6d957d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae6d95958"/>
        <function-ref name="modify" scoped="" ref="0x2b6ae6d95ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6d95c68"/>
        <function-ref name="resend" scoped="" ref="0x2b6ae6d95df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6ae6d98c58" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b6ae6d98c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6d95020"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6d951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b6ae6d92458" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b6ae6d92458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6ae6d927a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6ae6d8c638" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae6d8c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6ae6d8c988"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6ae6d8cb10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6ae6d8cc98"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6ae6d8ce20"/>
        <function-ref name="setCca" scoped="" ref="0x2b6ae6d8b020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6ae6d8b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b6ae6d83460" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b6ae6d83460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6ae6d82900"/>
        <function-ref name="clear" scoped="" ref="0x2b6ae6d81020"/>
        <function-ref name="isValid" scoped="" ref="0x2b6ae6d82220"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6d81700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b6ae6dd3de0" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6dd3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6dd2170"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd22f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b6ae6dd2650" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b6ae6dd2650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6dd29a0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd2b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b6ae6d8b5b0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b6ae6d8b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6ae6d8b900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b6ae6dd5478" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6dd5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6dd57c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b6ae6ddcd60" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2b6ae6ddcd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b6ae6d7e0d8"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6d7e260"/>
        <function-ref name="captured" scoped="" ref="0x2b6ae6d7e3e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b6ae6d7e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b6ae6d896c8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2b6ae6d896c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae6d86020"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6d87020"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae6d87930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae6d874a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae6d864a8"/>
        <function-ref name="start" scoped="" ref="0x2b6ae6d88578"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6d88a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6ae6d86940" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6d86940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae6d86c90"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae6d86e18"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae6d84020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae6d841a8"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae6d84330"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae6d844b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b6ae6dd7538" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6dd7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6dd7888"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd7a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b6ae6dd7da8" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6dd7da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6dd6170"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd62f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b6ae6dcb750" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b6ae6dcb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae6dcbaa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b6ae6dcbc28"/>
        <function-ref name="sfd" scoped="" ref="0x2b6ae6dcbdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae6d8d880" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae6d8d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae6d8dbd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae6d8dd58"/>
        <function-ref name="modify" scoped="" ref="0x2b6ae6d8c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae6d8c1a8"/>
        <function-ref name="resend" scoped="" ref="0x2b6ae6d8c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b6ae6ddacb0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6ddacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6ae6dd80a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6ae6dd8228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6ae6dd83b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b6ae6dd5b68" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6dd5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6dd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b6ae6d7dc98" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b6ae6d7dc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6dde020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6dde1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6dde330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6dde4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6dde640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6dde7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6dde950"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6ddead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6d8e888" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6d8e888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae6d8ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6ae6d847e8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6d847e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6d84b38"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae6d84cc0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae6d84e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b6ae6ddc1d8" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6ae6ddc1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6ddc528"/>
        <function-ref name="isSet" scoped="" ref="0x2b6ae6ddc6b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae6ddc838"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6ddc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b6ae6dd43d0" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6dd43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6dd4920"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b6ae6dda020" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b6ae6dda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6dda370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6dda4f8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6dda680"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6dda808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6dda990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b6ae6d7e8b8" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2b6ae6d7e8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6d7ed08"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6d7d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6d7d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6d7d330"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6d7d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6d7d640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6d7d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6d7d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b6ae6dd2e80" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b6ae6dd2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6dd11f8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd1380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b6ae6dd16f0" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6dd16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6dd1a40"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd1bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b6ae6dd6670" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b6ae6dd6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6dd69c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b6ae6ddee20" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2b6ae6ddee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6ddb1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6ddb330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6ddb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6ddb640"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6ddb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6ddb950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6ddbad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6ddbc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae6dcf0c0" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae6dcf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae6dcf410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae6dcf598"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6dcf720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae6dcf8a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae6dcfa30"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6dcfbb8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae6dcfd40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae6dce4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6dce020"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae6dce1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae6dce330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b6ae6dd3558" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6dd3558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6dd38a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd3a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6ae6d8d020" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b6ae6d8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6d8d370"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6d8d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b6ae6dd8720" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6dd8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6dd8a70"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6dd8bf8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6dd8d80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6dd7020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6dd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b6ae6dd6d40" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b6ae6dd6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6dd50d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b6ae6dd4e30" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b6ae6dd4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6dd31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b6ae6d8bcf8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2b6ae6d8bcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6ae6d890a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6ae6e61470" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae6e61470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e619c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e61b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b6ae6e6c9b8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b6ae6e6c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e6cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6ae6e65470" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae6e65470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e657c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e65948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b6ae6e60d98" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6e60d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5f170"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b6ae6e58470" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b6ae6e58470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e587c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e58948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b6ae6e5f5c0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b6ae6e5f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5f910"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5fa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b6ae6e4c7c0" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6e4c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e4cb10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e4cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b6ae6e4e7c0" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b6ae6e4e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e4eb10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e4ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6ae6e6bc50" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae6e6bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b6ae6e54c10" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b6ae6e54c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e53020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6ae6e507c0" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae6e507c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e50b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e50c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6ae6e64470" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b6ae6e64470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e647c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e64948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6ae6e62470" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae6e62470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e627c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e62948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b6ae6e5ac10" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae6e5ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e59020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b6ae6e5b470" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b6ae6e5b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5b7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6ae6e5fd60" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae6e5fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5e0d8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6ae6e6d430" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae6e6d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6ae6e6d780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6ae6e6d908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6ae6e6da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6ae6e68638" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae6e68638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e68988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6ae6e68c50" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b6ae6e68c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e670d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b6ae6e52060" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae6e52060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e523b0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e52538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b6ae6e673a0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae6e673a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e676f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b6ae6e4e020" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6e4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e4e370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e4e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6ae6e6a900" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae6e6a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e6ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b6ae6e54470" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b6ae6e54470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e547c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e54948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b6ae6e64c10" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae6e64c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e62020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6ae6e65c10" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae6e65c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e64020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6ae6e6c3a0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae6e6c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e6c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b6ae6e55470" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae6e55470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e557c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e55948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b6ae6e58c10" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b6ae6e58c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e57020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b6ae6e55c10" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae6e55c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e54020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b6ae6e4c020" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae6e4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e4c370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e4c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b6ae6e4d020" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b6ae6e4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e4d370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e4d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b6ae6e5bc10" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b6ae6e5bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5a020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b6ae6e57470" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b6ae6e57470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e577c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e57948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6ae6e50020" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae6e50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e50370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e504f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b6ae6e5ecc8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae6e5ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5c0a0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5c228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6ae6e4b020" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6e4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6e4b370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6e4b4f8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e4b680"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6e4b808"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6e4b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6ae6e6dd58" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b6ae6e6dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e6c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b6ae6e66c50" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b6ae6e66c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e65020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b6ae6e62c10" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae6e62c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e61020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b6ae6e59470" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae6e59470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e597c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e59948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6ae6e5e528" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae6e5e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5e878"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b6ae6e59c10" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae6e59c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e58020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6ae6e61e10" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae6e61e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e601a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e60330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6ae6e6b020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b6ae6e6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e6b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b6ae6e605f8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6e605f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e60948"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e60ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae6e6e7d0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae6e6e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6e6eb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6e6eca8"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6e6ee30"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6e6d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6e6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b6ae6e679b8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6e679b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e67d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b6ae6e66638" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b6ae6e66638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e66988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6ae6e517c0" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b6ae6e517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e51b10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e51c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6ae6e51020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae6e51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e51370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e514f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6ae6e68020" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6e68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e68370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b6ae6e52800" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae6e52800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e52b50"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e52cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b6ae6e4d7c0" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b6ae6e4d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e4db10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e4dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b6ae6e5a470" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae6e5a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5a7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b6ae6e57c10" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b6ae6e57c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e55020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6ae6e6b638" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b6ae6e6b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e6b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6ae6e6a2e8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae6e6a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e6a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b6ae6e5c4f0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae6e5c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5c840"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b6ae6e66020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b6ae6e66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e66370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b6ae6e5cc90" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b6ae6e5cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e5b020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b6ae6e53470" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b6ae6e53470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e53bc0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e53d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6ae6e4bc58" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae6e4bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6e4a020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6e4a1a8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e4a330"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6e4a4b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6e4a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b6ae6ea2808" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b6ae6ea2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae6ea2b58"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b6ae6ea2ce0"/>
        <function-ref name="sfd" scoped="" ref="0x2b6ae6ea2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae6ea1168" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae6ea1168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae6ea14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b6ae6ea18c0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b6ae6ea18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6ae6ea1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6ae6ea2020" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b6ae6ea2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6ea2370"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6ea24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b6ae6e99688" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2b6ae6e99688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6e999d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6e99b60"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6e99ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6e99e70"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6e98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6e981a8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6e98330"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6e984b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b6ae6e92af0" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae6e92af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b6ae6e92e40"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b6ae6e91020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b6ae6e911a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b6ae6e91330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b6ae6e914b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b6ae6e91640"/>
        <function-ref name="setChannel" scoped="" ref="0x2b6ae6e917c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b6ae6e91950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b6ae6e91ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b6ae6e91c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b6ae6e91de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b6ae6e90020"/>
        <function-ref name="sync" scoped="" ref="0x2b6ae6e901a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6ae6e90430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b6ae6e905b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b6ae6e7ce38" loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2b6ae6e7ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae6e7b1c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae6e7b348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b6ae6e90b80" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b6ae6e90b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6ae6e8d020"/>
        <function-ref name="clear" scoped="" ref="0x2b6ae6e8d700"/>
        <function-ref name="isValid" scoped="" ref="0x2b6ae6e8f8f8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6e8dde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b6ae6e98818" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2b6ae6e98818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6e98b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6e98cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6e98e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6e97030"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6e971b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6e97340"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6e974c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6e97650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b6ae6e8b6a8" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae6e8b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e8b9f8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e8bb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b6ae6e8a020" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b6ae6e8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e8a370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e8a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b6ae6e89108" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae6e89108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e89458"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e895e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6ae6e93328" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6e93328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae6e93678"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae6e93800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae6e93988"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae6e93b10"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae6e93c98"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae6e93e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b6ae6e9cc80" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2b6ae6e9cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae6e9b020"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b6ae6e9b1a8"/>
        <function-ref name="sfd" scoped="" ref="0x2b6ae6e9b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b6ae6e94398" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b6ae6e94398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e946e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b6ae6e9a420" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2b6ae6e9a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6ae6e9a770"/>
        <function-ref name="isInput" scoped="" ref="0x2b6ae6e9a8f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6ae6e9aa80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6ae6e9ac08"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6e9ad90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6ae6e99020"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6e991a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6ae6e99330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b6ae6e89970" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae6e89970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e89cc0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e89e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6ea0e00" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6ea0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae6e9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6ae6e92188" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6e92188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6e924d8"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae6e92660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae6e927e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae6e9b600" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae6e9b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae6e9b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b6ae6e966c0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2b6ae6e966c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae6e96a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae6e96b98"/>
        <function-ref name="request" scoped="" ref="0x2b6ae6e96d20"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae6e95020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae6e951a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b6ae6e8a850" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b6ae6e8a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e8aba0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e8ad28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b6ae6e95518" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae6e95518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae6e95868"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae6e959f0"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e95b78"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae6e95d00"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae6e94020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b6ae6e87210" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b6ae6e87210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e87760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b6ae6e9bd58" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2b6ae6e9bd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6ae6e9a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae6e87a18" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae6e87a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae6e87d68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae6e86020"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae6e861a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae6e86330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae6e864b8"/>
        <function-ref name="get" scoped="" ref="0x2b6ae6e86640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae6e867c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae6e86de8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6e86950"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae6e86ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae6e86c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b6ae6e8cdc8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae6e8cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae6e8b170"/>
        <function-ref name="write" scoped="" ref="0x2b6ae6e8b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b6ae6e8c6c8" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae6e8c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e8ca18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b6ae6e97a30" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6ae6e97a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6ae6e97d80"/>
        <function-ref name="disable" scoped="" ref="0x2b6ae6e96020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6ae6e961a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6ae6e96330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b6ae6e94a88" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae6e94a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae6e93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6ae6e9c498" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2b6ae6e9c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6ae6e9c7e8"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6e9c970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b6ae6eeb6b0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae6eeb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b6ae6eeba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b6ae6eef4b0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6eef4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae6eef800"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae6eef988"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae6eefb10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae6eefc98"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae6eefe20"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae6eec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b6ae6eea130" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae6eea130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6ae6ee9588"/>
        <function-ref name="clear" scoped="" ref="0x2b6ae6ee9c68"/>
        <function-ref name="isValid" scoped="" ref="0x2b6ae6eeae80"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6ee7380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b6ae6eecd08" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6eecd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6eeb0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae6eeb228"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae6eeb3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b6ae6ee3ac8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6ae6ee3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6ee3e18"/>
        <function-ref name="isSet" scoped="" ref="0x2b6ae6ee2020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae6ee21a8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6ee2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b6ae6ee6020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6ae6ee6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6ae6ee5478"/>
        <function-ref name="clear" scoped="" ref="0x2b6ae6ee5b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b6ae6ee6d70"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6ee3278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b6ae6eec3b8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b6ae6eec3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae6eec708"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae6eec890"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae6eeca18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b6ae6f45630" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b6ae6f45630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b6ae6f45980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b6ae6edf2e8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae6edf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae6edf638"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae6edf7c0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae6edf948"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae6edfad0"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae6edfc58"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae6edfde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b6ae6f3c618" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae6f3c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae6f3c968"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae6f3caf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6f3cc78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae6f3ce00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae6f3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b6ae6f44060" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b6ae6f44060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6ae6f424b8"/>
        <function-ref name="clear" scoped="" ref="0x2b6ae6f42b98"/>
        <function-ref name="isValid" scoped="" ref="0x2b6ae6f44db0"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6f412b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b6ae6f46b60" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae6f46b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae6f45020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae6f451a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae6f45330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b6ae6f3dac8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b6ae6f3dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f3de18"/>
        <function-ref name="isSet" scoped="" ref="0x2b6ae6f3c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae6f3c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6f3c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b6ae6f388b0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b6ae6f388b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f3a490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b6ae6f3ab20" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b6ae6f3ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f39728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b6ae6f40020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b6ae6f40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b6ae6f3e478"/>
        <function-ref name="clear" scoped="" ref="0x2b6ae6f3eb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b6ae6f40d70"/>
        <function-ref name="set" scoped="" ref="0x2b6ae6f3d278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b6ae6f46210" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2b6ae6f46210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae6f46560"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae6f466e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae6f46870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6ae6f53528" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b6ae6f53528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f520f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6ae6f52720" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae6f52720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f47578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6faf020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6f47a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6faf4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6ae6faa350" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b6ae6faa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae6f9d6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6fa9db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6ae6f9fad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6ae6f9f688"/>
        <function-ref name="getdt" scoped="" ref="0x2b6ae6f9c020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6ae6f9db18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae6f9f238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6ae6fa9020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6ae6f9d0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6ae6fa94c0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6fa9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6ae6f9c5e0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b6ae6f9c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f9b190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6fab080" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6fab080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae6fab3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6ae6fd9538" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae6fd9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae6fd7c88"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae6fd8d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae6fd7680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae6fd71f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae6fd6150"/>
        <function-ref name="start" scoped="" ref="0x2b6ae6fd83a8"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae6fd8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae6f98cf8" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae6f98cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae6fd90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6ae7b82b40" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae7b82b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7b7e238"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7b802b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae7b80bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7b80738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae7b7e6c0"/>
        <function-ref name="start" scoped="" ref="0x2b6ae7b818f8"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7b81dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae7b82358" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae7b82358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae7b826a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b6ae7b6a020" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae7b6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae7b6a370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae7b6a4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae7b6a680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae7b6a808"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7b6a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b6ae7b6d5e0" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae7b6d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae7b6d930"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae7b6dab8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae7b6dc40"/>
        <function-ref name="get" scoped="" ref="0x2b6ae7b6ddc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae7b6c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae7b6c1a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae7b6c330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae7b6c4b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae7b6c640"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae7b6c7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae7b6c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b6ae7b6cbd8" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae7b6cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae7b6b020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae7b6b1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae7b6b330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae7b6b4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae7b6b640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae7b6b7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae7b6b950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae7b6bad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae7b6bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b6ae7b608c8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b6ae7b608c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6ae7b60c18"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6ae7b60da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6ae7b5f020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6ae7b5f1a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7b5f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b6ae7b63020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6ae7b63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae7b63370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6ae7b634f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae7b63680"/>
        <function-ref name="get" scoped="" ref="0x2b6ae7b63808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae7b63990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae7b63b18"/>
        <function-ref name="getMode" scoped="" ref="0x2b6ae7b63ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae7b63e28"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae7b62020"/>
        <function-ref name="setMode" scoped="" ref="0x2b6ae7b621a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6ae7b62330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6ae7b66020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae7b66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7b64690"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7b656f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae7b64088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7b65b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae7b64b18"/>
        <function-ref name="start" scoped="" ref="0x2b6ae7b66d70"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7b65270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae7b677a8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae7b677a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae7b67af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b6ae7b625b8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6ae7b625b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6ae7b62908"/>
        <function-ref name="getControl" scoped="" ref="0x2b6ae7b62a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6ae7b62c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6ae7b62da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6ae7b60020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6ae7b601a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6ae7b60330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6ae7b604b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6ae7b60640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6ae6f8a150" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae6f8a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f89020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6f89930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6f894a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6f89db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b6ae6f83c80" loc="63:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b6ae6f83c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f81a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6f804a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6f80020"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6f80930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6ae6f85a60" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae6f85a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae6f84828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae6f83190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae6f84cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae6f83618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6ae7b7ca20" loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae7b7ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7b79088"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7b7a130"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae7b7aa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7b7a5b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae7b79510"/>
        <function-ref name="start" scoped="" ref="0x2b6ae7b7b7a8"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7b7bc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b6ae7b76d20" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b6ae7b76d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae621f430"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6ae621f788"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7b73410"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7b744a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae7b74db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7b74930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae7b73898"/>
        <function-ref name="start" scoped="" ref="0x2b6ae7b75ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7b74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6ae7b79b38" loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae7b79b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae7b778f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae7b76230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae7b77d80"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae7b766b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b6ae7011cf0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b6ae7011cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae70100a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae7010228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b6ae7015c70" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6ae7015c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7011410"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae70134a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6ae7013db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7013930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6ae7011898"/>
        <function-ref name="start" scoped="" ref="0x2b6ae70149f0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7013020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6ae701aab0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae701aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7016d60"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7018470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6ae70161c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6ae7018d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b6ae7015648"/>
        <function-ref name="gett0" scoped="" ref="0x2b6ae70151f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae70188c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6ae7019620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6ae7016790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6ae7019ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7018020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b6ae702f930" loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b6ae702f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae702fc80"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae702fe08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b6ae7034858" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b6ae7034858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7030bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae70311c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6ae7030020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6ae7031a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b6ae702f4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6ae702f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7031610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6ae70333d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6ae70305f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6ae7033878"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7033d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6ae703a5e0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae703a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae7036988"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7037020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6ae7037d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6ae7037900"/>
        <function-ref name="getdt" scoped="" ref="0x2b6ae70342d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6ae7036df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7037490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6ae7039198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6ae7036398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6ae7039658"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7039b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6ae702de18" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b6ae702de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae702ba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6ae702a0a0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6ae702a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6ae702adf0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6ae7029738"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6ae70292b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6ae7029bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6ae7022e28" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6ae7022e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae70790c0"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae707c798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6ae707b4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6ae707b088"/>
        <function-ref name="getdt" scoped="" ref="0x2b6ae7079960"/>
        <function-ref name="gett0" scoped="" ref="0x2b6ae7079510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae707cbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6ae707d9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6ae707baa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6ae707de80"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae707c348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6ae701ce38" loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b6ae701ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6ae61f0bd0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6ae621f020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6ae70800c0"/>
        <function-ref name="fired" scoped="" ref="0x2b6ae7083798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6ae70824d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6ae7082088"/>
        <function-ref name="getdt" scoped="" ref="0x2b6ae7080960"/>
        <function-ref name="gett0" scoped="" ref="0x2b6ae7080510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6ae7083be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6ae70849e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6ae7082aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6ae7084e80"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7083348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6ae70697c0" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6ae70697c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7069d10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7068020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b6ae7074cd0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2b6ae7074cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae70730a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6ae706d7c0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6ae706d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae706db10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae706dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b6ae70672e8" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2b6ae70672e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7067638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70677c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2b6ae7060a88" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2b6ae7060a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7060dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b6ae7067a88" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2b6ae7067a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7067dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7065020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b6ae70532e8" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2b6ae70532e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7053638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b6ae70552e8" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2b6ae70552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7055638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70557c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6ae7071020" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2b6ae7071020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae7071370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2b6ae705b2e8" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2b6ae705b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705b638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6ae70562e8" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6ae70562e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7056638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70567c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6ae706b7c0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2b6ae706b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae706bb10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae706bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6ae706a7c0" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2b6ae706a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae706ab10"/>
        <function-ref name="write" scoped="" ref="0x2b6ae706ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2b6ae70612e8" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2b6ae70612e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7061638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70617c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b6ae7063a88" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2b6ae7063a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7063dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7062020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6ae70652e8" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2b6ae70652e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7065638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70657c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6ae7075740" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6ae7075740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6ae7075a90"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6ae7075c18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6ae7075da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6ae7070900" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6ae7070900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae7070c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6ae706f020" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2b6ae706f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae706f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2b6ae705aa38" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2b6ae705aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705ad88"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7059020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b6ae706f738" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2b6ae706f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae706fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b6ae7056a88" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b6ae7056a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7056dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7055020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6ae7071c50" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6ae7071c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae7070020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2b6ae705ca88" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2b6ae705ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705cdd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b6ae706a020" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2b6ae706a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae706a370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae706a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6ae706b020" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6ae706b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae706b370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae706b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6ae70746b8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2b6ae70746b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae7074a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2b6ae705da88" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2b6ae705da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705ddd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2b6ae705e2e8" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2b6ae705e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705e638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2b6ae705c2e8" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2b6ae705c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705c638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b6ae7054a88" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2b6ae7054a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7054dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7053020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b6ae7055a88" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2b6ae7055a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7055dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7054020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b6ae70622e8" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2b6ae70622e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7062638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70627c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2b6ae705ea88" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2b6ae705ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705edd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6ae7057a88" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2b6ae7057a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7057dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7056020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b6ae70642e8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2b6ae70642e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7064638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70647c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6ae7053a88" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2b6ae7053a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae7053dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae7052020"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70521a8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae7052330"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae70524b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6ae70740a0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2b6ae70740a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae70743f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b6ae706d020" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2b6ae706d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae706d370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae706d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b6ae7069020" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2b6ae7069020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7069370"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70694f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2b6ae7061a88" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2b6ae7061a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7061dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7060020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6ae7065a88" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2b6ae7065a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7065dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7064020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2b6ae70602e8" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2b6ae70602e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7060638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70607c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6ae70682e8" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2b6ae70682e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7068638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70687c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6ae7073368" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2b6ae7073368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae70736b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b6ae7068a88" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2b6ae7068a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7068dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7067020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae7076a10" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae7076a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae7076d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae7075020"/>
        <function-ref name="request" scoped="" ref="0x2b6ae70751a8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae7075330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae70754b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b6ae706fd50" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2b6ae706fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae706e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b6ae706e9b8" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2b6ae706e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae706ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6ae70572e8" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2b6ae70572e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7057638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70577c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6ae7059a88" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2b6ae7059a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7059dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7057020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6ae70702e8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6ae70702e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae7070638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b6ae70592e8" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b6ae70592e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7059638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70597c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b6ae70542e8" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2b6ae70542e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7054638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70547c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b6ae7062a88" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2b6ae7062a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7062dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7061020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2b6ae705d2e8" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2b6ae705d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705d638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6ae7073980" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2b6ae7073980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae7073cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6ae7071638" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2b6ae7071638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae7071988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b6ae7064a88" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2b6ae7064a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7064dd8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7063020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b6ae706e3a0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2b6ae706e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6ae706e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b6ae70632e8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2b6ae70632e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae7063638"/>
        <function-ref name="write" scoped="" ref="0x2b6ae70637c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2b6ae705ba88" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2b6ae705ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae705a5e8"/>
        <function-ref name="write" scoped="" ref="0x2b6ae705a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6ae7052780" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2b6ae7052780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6ae7052ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6ae7052c58"/>
        <function-ref name="write" scoped="" ref="0x2b6ae7052de0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6ae7051020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6ae70511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b6ae7098650" loc="44:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b6ae7098650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6ae70989a0"/>
        <function-ref name="rand32" scoped="" ref="0x2b6ae7098b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b6ae7096668" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b6ae7096668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae70981e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae709c868" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae709c868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae709cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b6ae7092d58" loc="20:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b6ae7092d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6ae70910d8"/>
        <function-ref name="rand32" scoped="" ref="0x2b6ae7091260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b6ae7095d80" loc="19:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2b6ae7095d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae70928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae7095568" loc="18:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae7095568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae70958b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae7091558" loc="23:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae7091558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae70918a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae7091a30"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae7091bb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae7091d40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae7090020"/>
        <function-ref name="get" scoped="" ref="0x2b6ae70901a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae7090330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae7090950"/>
        <function-ref name="set" scoped="" ref="0x2b6ae70904b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae7090640"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae70907c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IdReader" ref="0x2b6ae7090c88" loc="24:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IdReader" scoped="" ref="0x2b6ae7090c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6ae708f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6ae709ac68" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b6ae709ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae70df020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae70df1a8"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae70df330"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae70df4b8"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae70df640"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae70df7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6ae70d6838" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b6ae70d6838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae70d6b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae70d6d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae70d5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae70d51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae70d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae70d9a78" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae70d9a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae70d9dc8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae70d6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae70d61a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae70d6330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae70d64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6ae70d1578" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b6ae70d1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae70d18c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae70d1a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae70d1bd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae70d1d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae70d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae70d2298" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae70d2298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae70d25e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae70d2770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae70d28f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae70d2a80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae70d2c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b6ae70cf080" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2b6ae70cf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6ae70cf3d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b6ae70cf558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae70d2e80" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae70d2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae70d11f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6ae70cf848" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae70cf848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae70cfb98"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae70cfd20"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae70ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b6ae70d02a0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b6ae70d02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae70d05f0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae70d0778"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae70d0900"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae70d0a88"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae70d0c10"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae70d0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6ae70d3468" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b6ae70d3468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae70d37b8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae70d3940"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae70d3ac8"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae70d3c50"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae70d3dd8"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae712c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6ae7126020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7126020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7126370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae71270c0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae71270c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7127410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b6ae7127788" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b6ae7127788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7127ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6ae7122818" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7122818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7122b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae7122110" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae7122110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae7122460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae7123450" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae7123450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae71237a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6ae7122e58" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae7122e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae71211e8"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae7121370"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae71214f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b6ae7123b18" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b6ae7123b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7123e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6ae7164020" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7164020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7164370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6ae7164670" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b6ae7164670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae71649c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7164b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae7164cd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae7164e58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae7163020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae70f9a40" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae70f9a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae70f9d90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7168020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae71681a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae7168330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae71684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b6ae7168db8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b6ae7168db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae7167170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae71672f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae7167480"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae7167608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae7167790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae7168748" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae7168748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7168a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae7128e28" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae7128e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae70f91a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae70f9330"/>
        <function-ref name="request" scoped="" ref="0x2b6ae70f94b8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae70f9640"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae70f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b6ae7167ae8" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b6ae7167ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7167e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b6ae71661a8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b6ae71661a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae71664f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae7166680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7166808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae7166990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae7166b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6ae715b528" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b6ae715b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae715b878"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae715ba00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae715bb88"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae715bd10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae715a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6ae715a358" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b6ae715a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae715a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b6ae719eac0" loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2b6ae719eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6ae719ee10"/>
        <function-ref name="runTask" scoped="" ref="0x2b6ae719d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6ae715a970" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae715a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae715acc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae715ae48"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae7159020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae71591a8"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae7159330"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae71594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b6ae715d490" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2b6ae715d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae715d7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae715d968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae715daf0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae715dc78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae715de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6ae71571c0" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2b6ae71571c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6ae7157510"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6ae7157698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6ae7157820"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6ae71579a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6ae71597a8" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae71597a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7159af8"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae7159c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae7159e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b6ae715edc8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2b6ae715edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae715d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6ae715f440" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2b6ae715f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae715f790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae715f918"/>
        <function-ref name="request" scoped="" ref="0x2b6ae715faa0"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae715fc28"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae715fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b6ae715e118" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2b6ae715e118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae715e468"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae715e5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae715e778"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae715e900"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae715ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b6ae715c188" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2b6ae715c188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae715c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b6ae715c808" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2b6ae715c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae715cb58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae715cce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae715ce68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae715b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae715b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6ae717fc28" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6ae717fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6ae717e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b6ae717e2a8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2b6ae717e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6ae717e5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6ae717e780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6ae717e908"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6ae717ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6ae7174dc8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2b6ae7174dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae7173170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae71732f8"/>
        <function-ref name="start" scoped="" ref="0x2b6ae7173480"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7173608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6ae7172838" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b6ae7172838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae7172b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7172d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae7171020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae71711a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae7171330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6ae7171668" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b6ae7171668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae71719b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae7175080" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae7175080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae71753d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7175558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae71756e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae7175868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae71759f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6ae7174318" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae7174318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6ae7174668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6ae71747f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6ae7174978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6ae7174b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b6ae7173928" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2b6ae7173928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae7173c78"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae7173e00"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae7172020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae71721a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae7172330"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae71724b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b6ae7171d28" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2b6ae7171d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6ae71700a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6ae7170228"/>
        <function-ref name="start" scoped="" ref="0x2b6ae71703b0"/>
        <function-ref name="stop" scoped="" ref="0x2b6ae7170538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae7175c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae7175c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7174020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6ae716d170" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6ae716d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b6ae716d4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b6ae716d648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b6ae716d7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b6ae716d958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6ae716fd50" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2b6ae716fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6ae716e0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6ae716e260"/>
        <function-ref name="isState" scoped="" ref="0x2b6ae716e3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6ae716e570"/>
        <function-ref name="requestState" scoped="" ref="0x2b6ae716e6f8"/>
        <function-ref name="forceState" scoped="" ref="0x2b6ae716e880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6ae71d1020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b6ae71d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae71d1370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae71d14f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae71d1680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae71d1808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae71d1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6ae71d55d8" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2b6ae71d55d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae71d5928"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae71d5ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae71d5c38"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae71d5dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae71d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b6ae71d22d0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b6ae71d22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b6ae71d2620"/>
        <function-ref name="setRetries" scoped="" ref="0x2b6ae71d27a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b6ae71d2930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b6ae71d2ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b6ae71d2c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b6ae71cd3c8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6ae71cd3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6ae71cd718"/>
        <function-ref name="noAck" scoped="" ref="0x2b6ae71cd8a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6ae71cda28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b6ae71d0550" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2b6ae71d0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b6ae71d08a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b6ae71d0a28"/>
        <function-ref name="getRetries" scoped="" ref="0x2b6ae71d0bb0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b6ae71d0d38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b6ae71cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6ae71afcc8" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2b6ae71afcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae71ae0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6ae71af020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2b6ae71af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae71af370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae71af4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae71af680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae71af808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae71af990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b6ae71adab0" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2b6ae71adab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b6ae71ade00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b6ae71ac020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b6ae71ac1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b6ae71ac330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b6ae71ac4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b6ae71ac640"/>
        <function-ref name="setChannel" scoped="" ref="0x2b6ae71ac7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b6ae71ac950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b6ae71acad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b6ae71acc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b6ae71acde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b6ae71ab020"/>
        <function-ref name="sync" scoped="" ref="0x2b6ae71ab1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6ae71ab430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b6ae71ab5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6ae71b1020" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6ae71b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6ae71b1370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6ae71b14f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6ae71b1680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6ae71b1808"/>
        <function-ref name="setCca" scoped="" ref="0x2b6ae71b1990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6ae71b1b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b6ae71b2400" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2b6ae71b2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b6ae71b2750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b6ae71aa6a0" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2b6ae71aa6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6ae71aa9f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6ae71aab78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6ae71aad00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6ae71a9020"/>
        <function-ref name="setCca" scoped="" ref="0x2b6ae71a91a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6ae71a9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae71b32a8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae71b32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae71b35f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae71b3780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae71b3908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae71b3a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae71b3c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6ae71b8980" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2b6ae71b8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6ae71b8cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae71b8e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae71b6020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6ae71b61a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6ae71b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6ae71b5628" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2b6ae71b5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae71b5978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6ae71ae368" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6ae71ae368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6ae71ae6b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b6ae71ae840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6ae71ae9c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b6ae71aeb50"/>
        <function-ref name="getPower" scoped="" ref="0x2b6ae71aecd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6ae71aee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b6ae71ab8d0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6ae71ab8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b6ae71abd20"/>
        <function-ref name="changed" scoped="" ref="0x2b6ae71aa020"/>
        <function-ref name="amGroup" scoped="" ref="0x2b6ae71aa1a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b6ae71aa330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6ae71ad188" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6ae71ad188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae71ad4d8"/>
        <function-ref name="getHeader" scoped="" ref="0x2b6ae71ad660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6ae71ad7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae71b6ab0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae71b6ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae71b6e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6ae71a82a8" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6ae71a82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6ae71a85f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6ae71a8780"/>
        <function-ref name="led1On" scoped="" ref="0x2b6ae71a8908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6ae71a8a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6ae71a8c18"/>
        <function-ref name="get" scoped="" ref="0x2b6ae71a8da0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6ae71a7020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6ae71a7640"/>
        <function-ref name="set" scoped="" ref="0x2b6ae71a71a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6ae71a7330"/>
        <function-ref name="led2On" scoped="" ref="0x2b6ae71a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae71b5c18" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae71b5c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae71b4020"/>
        <function-ref name="source" scoped="" ref="0x2b6ae71b41a8"/>
        <function-ref name="address" scoped="" ref="0x2b6ae71b4330"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae71b44b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae71b4640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae71b47c8"/>
        <function-ref name="type" scoped="" ref="0x2b6ae71b4950"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae71b4ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae71b4c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae71b4de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae71b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b6ae71a9698" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2b6ae71a9698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6ae71a99e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6ae71a9b70"/>
        <function-ref name="request" scoped="" ref="0x2b6ae71a9cf8"/>
        <function-ref name="granted" scoped="" ref="0x2b6ae71a9e80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6ae71a8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae7278020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.OpoReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae7278020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae7278370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae72784f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7278680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae7278808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae7278990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae727d970" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.OpoReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae727d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae727dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae7278bd8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.OpoReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae7278bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae7277020"/>
        <function-ref name="source" scoped="" ref="0x2b6ae72771a8"/>
        <function-ref name="address" scoped="" ref="0x2b6ae7277330"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae72774b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae7277640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae72777c8"/>
        <function-ref name="type" scoped="" ref="0x2b6ae7277950"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae7277ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae7277c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae7277de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae7276020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae72733b8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.BlinkReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae72733b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae7273708"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae7273890"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7273a18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae7273ba0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae7273d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae7275dd0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.BlinkReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae7275dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7273170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae7272020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.BlinkReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae7272020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae7272370"/>
        <function-ref name="source" scoped="" ref="0x2b6ae72724f8"/>
        <function-ref name="address" scoped="" ref="0x2b6ae7272680"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae7272808"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae7272990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae7272b18"/>
        <function-ref name="type" scoped="" ref="0x2b6ae7272ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae7272e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae7271020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae72711a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae7271330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae726f678" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.VisualReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae726f678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae726f9c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae726fb50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae726fcd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae726fe60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae726e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae726f0e0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.VisualReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae726f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae726f430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae726e268" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.VisualReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae726e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae726e5b8"/>
        <function-ref name="source" scoped="" ref="0x2b6ae726e740"/>
        <function-ref name="address" scoped="" ref="0x2b6ae726e8c8"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae726ea50"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae726ebd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae726ed60"/>
        <function-ref name="type" scoped="" ref="0x2b6ae726d020"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae726d1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae726d330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae726d4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae726d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae726b928" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.RxReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae726b928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae726bc78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae726be00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae726a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae726a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae726a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae726b390" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.RxReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae726b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae726b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae726a578" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.RxReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae726a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae726a8c8"/>
        <function-ref name="source" scoped="" ref="0x2b6ae726aa50"/>
        <function-ref name="address" scoped="" ref="0x2b6ae726abd8"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae726ad60"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae7269020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae72691a8"/>
        <function-ref name="type" scoped="" ref="0x2b6ae7269330"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae72694b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae7269640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae72697c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae7269950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6ae7267c70" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.ADCReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2b6ae7267c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6ae7265020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6ae72651a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6ae7265330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6ae72654b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6ae7265640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6ae72676d8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.ADCReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2b6ae72676d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6ae7267a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6ae7265888" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMReceiverC.nc">
      <component-ref qname="OpoBaseC.ADCReceive"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2b6ae7265888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6ae7265bd8"/>
        <function-ref name="source" scoped="" ref="0x2b6ae7265d60"/>
        <function-ref name="address" scoped="" ref="0x2b6ae7264020"/>
        <function-ref name="destination" scoped="" ref="0x2b6ae72641a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6ae7264330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6ae72644b8"/>
        <function-ref name="type" scoped="" ref="0x2b6ae7264640"/>
        <function-ref name="setType" scoped="" ref="0x2b6ae72647c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6ae7264950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6ae7264ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6ae7264c60"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6ae5b2a360" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b6ae5b2b020" loc="60:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2b6ae5b44020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2b6ae5b473e0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2b6ae5b46920" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2b6ae5b48d20" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2b6ae5b47af0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2b6ae5b48020" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2b6ae5b486a0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2b6ae5b46258" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b6ae5af2c40" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b6ae58a7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2b6ae5b8f748" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b6ae5b8f4d8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2b6ae5b81de8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6ae5b3d978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b6ae5b54438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b6ae5b8e020" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2b6ae5b8ee20" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2b6ae5b90da0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b6ae5b8e6f8" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b6ae5b92570" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2b6ae5b92c98" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b6ae5b90690" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6ae5b3d978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b6ae5b54438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6ae5b90420" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6ae5b3d978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b6ae5b54438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b6ae5b9a1d8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2b6ae5b985a0" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2b6ae5b98330" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b6ae5b97108" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6ae5b98e40" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6ae5b99b70" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6ae5b993e0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2b6ae5b9ab00" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b6ae5b9a890" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b6ae5b8a818" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2b6ae5ba0290" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6ae5ba0020" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2b6ae5ba0bf0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b6ae5ba0980" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2b6ae5b9f590" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b6ae5b9f320" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6ae5b9fc18" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b6ae5b7e6f8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b6ae5b7ce58" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2b6ae5b7cbe8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b6ae5b7edc8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6ae5b83b98" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b6ae5b7c4d8" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6ae5b80a00" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b6ae5b7e070" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6ae5b80328" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6ae5b7f0d8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2b6ae5b7f978" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b6ae5b7f708" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2b6ae5b95830" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2b6ae5b955c0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b6ae5bc0020" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b6ae5af4690" loc="76:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b6ae5b09760" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6ae57ea020" loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b6ae57f5020" loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b6ae57ea738" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b6ae57fdba0" loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b6ae57fc3e0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b6ae5ceb070" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b6ae5ceb7a8" loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b6ae5cea020" loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b6ae5ceae70" loc="83:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b6ae5ce7480" loc="100:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6ae5ce7c18" loc="117:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b6ae5cea738" loc="77:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6ae5ce6768" loc="134:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b6ae5ce64f8" loc="134:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b6ae5cec900" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b6ae5ce9608" loc="89:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b6ae5ce9d20" loc="94:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b6ae5cfc020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b6ae5cfc6e8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b6ae5cfd290" loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b6ae5cfb4a0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6ae5cfd930" loc="43:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b6ae5cfcda0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6ae5cff548" loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b6ae5cffbb8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b6ae5d13440" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b6ae5d13b28" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2b6ae5d2e290" loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b6ae5d2e020" loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b6ae5d16dc0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b6ae5d12950" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2b6ae5d2eb10" loc="117:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b6ae5d12258" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6ae5d14ca8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2b6ae5d2f020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2b6ae5d14510" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6ae5d16020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2b6ae5d310d8" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2b6ae5d2f748" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2b6ae5d31838" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b6ae5d166e0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b6ae5f49638" loc="113:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6ae5f493c8" loc="113:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b6ae5f48a40" loc="138:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6ae5f487d0" loc="138:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6ae5f4ca20" loc="104:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6ae5f49e20" loc="130:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b6ae5f992f0" loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b6ae5f9a9a0" loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b6ae5f9ad00" loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae5f99060" loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6ae5f95628" loc="135:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5f95060" loc="135:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae5f95370" loc="135:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6ae5f94828" loc="123:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6ae5f985b8" loc="96:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5f98348" loc="96:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6ae5f96a00" loc="110:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5f96458" loc="110:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b6ae5f96780" loc="110:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b6ae5fb6838" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fb65c8" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b6ae5fb4830" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fb45c0" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6ae5fb3948" loc="126:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fb3380" loc="126:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae5fb3690" loc="126:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6ae5fb1ab8" loc="106:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b6ae5fb2bd0" loc="94:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fb2640" loc="94:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae5fb2950" loc="94:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b6ae5fbaa00" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
              <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fba100" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b6ae5fba428" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae5fba738" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b6ae5fc6520" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fc62b0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b6ae5fc4630" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fc43c0" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b6ae5fc3700" loc="85:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fc3490" loc="85:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b6ae5fcbc60" loc="177:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6ae5f41438"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5fcb9f0" loc="177:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b6ae5faad18" loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5faaaa8" loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b6ae5fad290" loc="68:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b6ae5fadce8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5fada78" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b6ae5fd15d8" loc="121:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5fd1020" loc="121:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b6ae5fd1358" loc="121:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b6ae5fab0b8" loc="103:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5fa9a98" loc="103:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b6ae5fa9dd0" loc="103:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b6ae5fce8c8" loc="147:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5fce658" loc="147:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b6ae5fccb70" loc="162:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5fcc5f0" loc="162:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b6ae5fcc8f0" loc="162:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6ae5f41088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b6ae5fd0788" loc="136:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5fd0518" loc="136:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b6ae5fca0b8" loc="187:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6ae5f41438"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6ae5fc9a80" loc="187:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b6ae5fc9db0" loc="187:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6ae5f41438"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b6ae5fcae20" loc="195:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6ae5f41438"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6ae5fe19f8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fe1468" loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae5fe1778" loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6ae5fda020" loc="125:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fdc8e0" loc="125:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae5fdcbf0" loc="125:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6ae5fdc0d8" loc="112:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6ae5fdec48" loc="89:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fde9d8" loc="89:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6ae5fdd2a0" loc="100:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae5fdfc70" loc="100:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b6ae5fdd020" loc="100:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b6ae602e2a0" loc="31:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae602fb70" loc="31:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b6ae602e020" loc="31:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b6ae6030458" loc="15:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b6ae602f2a0" loc="23:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae6030c70" loc="23:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b6ae602f020" loc="23:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b6ae6041e30" loc="95:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6ae606b600" loc="105:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b6ae6068328" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b6ae6040bc0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b6ae60461d8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b6ae6045528" loc="72:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b6ae6042020" loc="94:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6043d60" loc="94:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b6ae6045d40" loc="79:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b6ae6046cc8" loc="65:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6046a58" loc="65:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b6ae6042818" loc="100:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b6ae60435b8" loc="85:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b6ae604d030" loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b6ae604d8e8" loc="81:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b6ae604e700" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b6ae604e490" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b6ae604c430" loc="91:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6ae604c1c0" loc="91:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b6ae6049020" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b6ae6049bc8" loc="69:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6049958" loc="69:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b6ae6048640" loc="80:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b6ae60483d0" loc="80:/home/wwhuang/git/tinyos-lab11/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6ae61822a0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b6ae6185c38" loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae6182020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b6ae617fc28" loc="79:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b6ae617f9b8" loc="79:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b6ae617d988" loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b6ae617d3e8" loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae617d708" loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b6ae617e948" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b6ae617b2b0" loc="99:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b6ae617a898" loc="99:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae617abb8" loc="99:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b6ae617b020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b6ae617f258" loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6ae6181a18" loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b6ae6181140" loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae6181460" loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b6ae6181788" loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6ae618e630" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b6ae618e3c0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b6ae618c408" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b6ae618ee20" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b6ae618c188" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b6ae6201690" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b6ae6200020" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b6ae61fd020" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b6ae61bd5b8"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b6ae61bd9c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b6ae6203020" loc="120:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b6ae6205020" loc="97:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b6ae6206700" loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b6ae62057a8" loc="102:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b6ae6203a08" loc="128:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b6ae61f6328" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b6ae61f9b20" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2b6ae61ef9c0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae61ef750" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b6ae61ef020" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b6ae62307a8" loc="213:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2b6ae623bbb0" loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2b6ae62132d0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61babc0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b6ae61b9438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6ae6213060" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61babc0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2b6ae61b9438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2b6ae620ae58" loc="123:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2b6ae6210558" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61b58f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b6ae61b4178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6ae62102e8" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61b58f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2b6ae61b4178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b6ae6235db0" loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2b6ae6231258" loc="197:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2b6ae6212b80" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61b7978"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2b6ae61b6178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2b6ae6210ce0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61b58f0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2b6ae61b4178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2b6ae620d790" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2b6ae620d520" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2b6ae620ee40" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2b6ae62356e0" loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2b6ae62123f8" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61b7978"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b6ae61b6178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6ae6212188" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61b7978"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2b6ae61b6178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2b6ae620fd70" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b6ae62344d0" loc="181:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2b6ae620e700" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2b6ae620e490" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2b6ae620a020" loc="113:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2b6ae620a738" loc="118:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b6ae62367c8" loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2b6ae6239878" loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2b6ae6209d00" loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b6ae6235020" loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2b6ae623a360" loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2b6ae6234b88" loc="182:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b6ae620b020" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2b6ae6190c30"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2b6ae61bb3b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2b6ae6232328" loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2b6ae6230070" loc="207:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2b6ae620f630" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2b6ae620f3c0" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b6ae622f108" loc="224:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6230e60" loc="224:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2b6ae6213a38" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b6ae61babc0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2b6ae61b9438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2b6ae62095a8" loc="128:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b6ae623aa50" loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2b6ae6236020" loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b6ae61bd5b8"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b6ae61bd9c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b6ae6238d20" loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b6ae61bd5b8"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2b6ae61bd9c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2b6ae6238338" loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b6ae61d1d50"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b6ae61cf188"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b6ae62380c8" loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b6ae61d1d50"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b6ae61cf188"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b6ae622f950" loc="231:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2b6ae6232aa8" loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2b6ae620b7c0" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2b6ae6231950" loc="202:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2b6ae6239178" loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2b6ae623b4a0" loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae622ab00" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae622ab00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6ae622ad30" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae622ad30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6ae6227620" loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae622ad30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6ae6226688" loc="76:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6ae6227e38" loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6ae6226d78" loc="82:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b6ae62938c8" loc="95:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6ae62920d8" loc="105:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b6ae6361720" loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b6ae6360020" loc="98:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b6ae6386590" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b6ae636dc00" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b6ae636cbf0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b6ae636d3e0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b6ae636c428" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b6ae63a5508" loc="81:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b6ae639a768" loc="79:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6ae63a39a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b6ae639a4f8" loc="79:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6ae63a39a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b6ae639f8f8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b6ae639c3c8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6ae63a39a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b6ae639c158" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6ae63a39a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b6ae639cc68" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b6ae63a39a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b6ae63e0020" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b6ae64ea020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b6ae64ea020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b6ae64e8020" loc="73:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b6ae64ea020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b6ae64e58e8" loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
        <documentation loc="83:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b6ae64ea020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b6ae64e5678" loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b6ae64ea020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b6ae511e508"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x2b6ae511e508"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b6ae64e47b0" loc="101:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
        <documentation loc="92:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b6ae64ea020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b6ae64e4540" loc="101:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b6ae64e97b0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b6ae64e8b40" loc="81:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b6ae64ea020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b6ae64ea848" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b6ae64e9020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b6ae6505548" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b6ae65052d8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae65935b0" loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae65935b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6ae65937e0" loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae65937e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b6ae658f4e8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae65937e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae658f278" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b6ae658d5b8" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae658d348" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b6ae6590338" loc="49:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65900c8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6ae658c838" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae65937e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae658c278" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b6ae658c5b8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae65937e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b6ae65802a0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae6581c78" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b6ae6580020" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b6ae657f370" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae657f100" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b6ae65814f8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b6ae6584b78" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b6ae6584908" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b6ae659a290" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae659a020" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b6ae659d578" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae659d308" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b6ae65a0d30" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b6ae65a0ac0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b6ae65a0290" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b6ae65a0020" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b6ae659e728" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b6ae659e4b8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b6ae659c3b0" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae659c140" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b6ae65d1830" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b6ae65d1250" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b6ae65d15b0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b6ae65a96a8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6ae65a9100" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b6ae65a9428" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b6ae65a5b80" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6ae65a55b0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b6ae65a5900" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b6ae65a8290" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b6ae51a6718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6ae65a8020" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b6ae65a7b60" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6ae65a78f0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b6ae65ab930" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6ae65ab6c0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b6ae65a8d30" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6ae65a8ac0" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b6ae65d5290" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65d5020" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b6ae6597490" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65a1e80" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b6ae6597210" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b6ae65d6290" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65d6020" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b6ae65d77e0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65d71f8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b6ae65d7560" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b6ae65d3290" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65d3020" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b6ae65a2338" loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65a20c8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6ae65f1388" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6ae65f9dc0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b6ae65f1108" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6ae65ef590" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b6ae65edbc8" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b6ae65eee08" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b6ae65ed628" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae65ed938" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6ae65ee670" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6ae65ee0c8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b6ae65ee3f0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b6ae65f1d98" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b6ae65f1b28" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b6ae65e9c80" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b6ae65e94e8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b6ae65e4ad8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65e4830" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b6ae65e40a8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b6ae5f5a9e0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b6ae5f582d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65e5d90" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b6ae65e2ce8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b6ae5f58d78"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b6ae5f55598"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae65e2a00" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b6ae65f7328" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b6ae65f4258" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b6ae65f5a88" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b6ae65b8b98" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b6ae65f8b28" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b6ae65f7b30" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b6ae65f5328" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b6ae65f83e0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b6ae65db178" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b6ae65dd798" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b6ae65dc9b0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b6ae65dc740" loc="66:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b6ae65dc020" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b6ae65df508" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b6ae65df298" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b6ae65dd020" loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b6ae65dfcc0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b6ae6650680" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b6ae66500c8" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b6ae6650400" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b6ae6651178" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b6ae6652840" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b6ae6652200" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b6ae66525c0" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b6ae66580a8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6ae6659e00" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b6ae6651980" loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b6ae6655990" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b6ae6655720" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b6ae6656108" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b6ae6658e40" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b6ae664f828" loc="117:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b6ae6654a30" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b6ae66547c0" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b6ae664f070" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b6ae6656828" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b6ae657b648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b6ae657bd70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b6ae6655020" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b6ae66596d0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b6ae6658790" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b6ae6654110" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b6ae664a2a0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6ae664a2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b6ae664aad8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
        <documentation loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b6ae66497c8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6ae664a2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b6ae6649248" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b6ae6649548" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6ae664a2a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b6ae6665290" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6ae5f5ecd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6665020" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6ae6665ce8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6ae5f5ecd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6665a78" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b6ae6682678" loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b6ae657b648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b6ae657bd70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae663f7b8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae663f7b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6ae663f9e8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6ae667c328" loc="109:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6ae667e450" loc="78:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b6ae667d960" loc="103:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6ae667d3c0" loc="103:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b6ae667d6e0" loc="103:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6ae667ebc0" loc="88:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b6ae667caa8" loc="116:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6ae66804e0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6ae6680270" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae663f9e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6ae6680cb0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b6ae666e020" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b6ae666ee70" loc="60:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b6ae666e780" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6ae5f41438"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b6ae666f818" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6ae5f41438"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b6ae666f260" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6ae5f41438"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b6ae666f598" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6ae5f417f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b6ae66a50d8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6ae5f5ecd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b6ae666a5e0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6ae5f5ecd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b6ae666b6b0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6ae666a020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6ae666a350" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6ae6669c60" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6ae5f5ecd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b6ae666ae30" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6ae66696a0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6ae66699d0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b6ae66718c8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6ae6671178" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b6ae6673a20" loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b6ae66731d8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b6ae6831bc8" loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6ae6830cc0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b6ae6830588" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6ae6830318" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b6ae68313e0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b6ae685aa50" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6ae6858418" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6ae685a328" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b6ae6859c30" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b6ae68599c0" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b6ae685eb68" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b6ae6859258" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b6ae69278c8" loc="24:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b6ae69760d8" loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b6ae69768a8" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b6ae6950348" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6951d58" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6ae69500c8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b6ae699c2b0" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae699d940" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6ae699dc70" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b6ae699c020" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6ae699ec50" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6ae5f5ecd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae699e6a0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6ae699e9d0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b6ae6951020" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6ae5f5ecd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6952908" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6ae6952c38" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b6ae694f948" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae694f060" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6ae694f390" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b6ae694f6b8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6ae6983930" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b6ae6983020" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b6ae6983380" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae69836a0" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6ae6981cc8" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b6ae6981060" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b6ae69813c0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae69816e0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b6ae6981a28" loc="83:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b6ae69879b0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b6ae6987740" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b6ae6a3b360" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2b6ae61d1d50"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2b6ae61cf188"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b6ae6a3f338" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6a3f0c8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b6ae6a3e630" loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6a3e3c0" loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b6ae6a3fb38" loc="68:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6ae6a3d0a8" loc="81:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6a3edc8" loc="81:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2b6ae6a9eae0" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2b6ae6aaf178" loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2b6ae6aa4bf0" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b6ae6aa4980" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2b6ae6ab8da8" loc="11:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2b6ae6aa0020" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2b6ae6aa8020" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2b6ae6ab0360" loc="28:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2b6ae6aad020" loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b6ae6ab13d0" loc="25:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2b6ae6ab1160" loc="25:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2b6ae6ab49d8" loc="21:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2b6ae6aacbc0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2b6ae6aa3a60" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2b6ae6a9e3e0" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2b6ae6aa42a8" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2b6ae6aef1d8" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2b6ae6aeb710" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2b6ae6ab6b80" loc="14:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2b6ae6aac4c0" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2b6ae6aabc68" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2b6ae6ab1c30" loc="27:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2b6ae6ab9c50" loc="7:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2b6ae6aa6b10" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b6ae6aa68a0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2b6ae6ab9580" loc="6:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2b6ae6aa28d8" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2b6ae6a9d258" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2b6ae6aed828" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2b6ae6aeb020" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2b6ae6aa0e40" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2b6ae6a9d928" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2b6ae6aa3360" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2b6ae6af02a8" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2b6ae6ab5290" loc="15:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2b6ae6aa7110" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2b6ae6a9b750" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2b6ae6a9fca8" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2b6ae6aa9810" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2b6ae6aa95a0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2b6ae6aec020" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2b6ae6aa61d8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2b6ae6aa0730" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2b6ae6ab86b0" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b6ae61dfaa0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b6ae61dd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2b6ae6ab8440" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2b6ae61dfaa0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2b6ae61dd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2b6ae6aaddc8" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2b6ae6ab42d0" loc="19:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b6ae6ab4060" loc="19:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2b6ae6aab4e0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6ae6aab270" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2b6ae6af0a18" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2b6ae6ab2a60" loc="24:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2b6ae6ab59a0" loc="18:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2b6ae6aa7a50" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2b6ae6aa77e0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6ae51a7b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2b6ae6ab64d0" loc="12:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2b6ae6a9b020" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2b6ae6a9f5a0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2b6ae6aa21d8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2b6ae6aa8980" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2b6ae6aa8710" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2b6ae6aad6d8" loc="35:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2b6ae6ab0a40" loc="29:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2b6ae6aec730" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2b6ae6ab2338" loc="22:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b6ae6ab20c8" loc="22:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2b6ae6aef938" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2b6ae6aaf848" loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2b6ae6aed0d8" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b6ae6cf93b0" loc="13:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b6ae6cf9140" loc="13:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b6ae6d463f0" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b6ae6d49ab8" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b6ae6d49e00" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae6d46160" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6ae6d440b8" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b6ae6d46ac8" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6ae6d46dd8" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae6d2d420" loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae6d2d420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6ae6d2d650" loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae6d2d650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b6ae6d2c118" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae6d2d650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6ae6d2de78" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6ae6d2d650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b6ae6d938d0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b6ae6dcb400" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b6ae6dcda68" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b6ae6dcb180" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b6ae6dcd328" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b6ae6dd0b40" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6ae6dd08d0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b6ae6de1ae8" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6ae51a7790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae6de1878" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b6ae6d7fb60" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae6d7f8f0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6ae6ddd938" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae6ddd6c8" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6ae6de0a20" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6ae6de07b0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6ae5f9dce8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6ae5f9a238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae6f3ba68" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae6f3ba68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6ae6f38328" loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6ae6fabdb8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6ae6fabdb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6ae6fa2918" loc="136:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6ae6fa5258" loc="83:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b6ae6fa3020" loc="114:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6ae6fa4910" loc="114:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6ae6fa4c28" loc="114:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b6ae6fa41d8" loc="98:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b6ae6fa0878" loc="151:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b6ae6fa0070" loc="144:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6ae6fa59d0" loc="92:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6ae57ed1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b6ae6fa88f0" loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6ae6fa8680" loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b6ae6fa2020" loc="129:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6ae6fa3950" loc="129:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6ae6fa3c68" loc="129:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b6ae6fa7378" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6ae6fa7108" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6ae51a8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6ae6fa7b20" loc="78:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b6ae7099400" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6ae7099400"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b6ae7096020" loc="64:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6ae57f1780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6ae7099400"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b6ae7099c38" loc="64:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6ae7099400"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
