<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="6:OpoADCTestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ac7269fd298"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ac726511850"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ac726511850"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ac726510c70"/></to>
    </wire>
    <wire loc="7:OpoADCTestC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac7269fd860"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e15e8"/></to>
    </wire>
    <wire loc="11:OpoADCTestC.nc">
      <from><interface-ref name="ReadSingleChannel" scoped="" ref="0x2ac72695c5c8"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x2ac726bccbd8"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x2ac726bccbd8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x2ac726a611c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:OpoADCTestC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x2ac7269827c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac726bcc020"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac726bcc020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac726a3de20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:OpoADCTestC.nc">
      <from><interface-ref name="UCapGpIO" scoped="" ref="0x2ac72696b540"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x2ac726737568"/></to>
    </wire>
    <wire loc="474:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2ac726737568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72683c3d8"/></to>
    </wire>
    <wire loc="16:OpoADCTestC.nc">
      <from><interface-ref name="SFDCapGpIO" scoped="" ref="0x2ac726980550"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2ac72673b668"/></to>
    </wire>
    <wire loc="472:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2ac72673b668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726846478"/></to>
    </wire>
    <wire loc="17:OpoADCTestC.nc">
      <from><interface-ref name="SFDLatch" scoped="" ref="0x2ac72697e540"/></from>
      <to><interface-ref name="Port52" scoped="" ref="0x2ac72674a568"/></to>
    </wire>
    <wire loc="484:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2ac72674a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726867ca0"/></to>
    </wire>
    <wire loc="18:OpoADCTestC.nc">
      <from><interface-ref name="TxRxSel" scoped="" ref="0x2ac72697c530"/></from>
      <to><interface-ref name="Port50" scoped="" ref="0x2ac72674e568"/></to>
    </wire>
    <wire loc="482:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2ac72674e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72684bca0"/></to>
    </wire>
    <wire loc="19:OpoADCTestC.nc">
      <from><interface-ref name="TxGate" scoped="" ref="0x2ac72697a528"/></from>
      <to><interface-ref name="Port53" scoped="" ref="0x2ac726748568"/></to>
    </wire>
    <wire loc="485:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2ac726748568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268623d8"/></to>
    </wire>
    <wire loc="20:OpoADCTestC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x2ac726978518"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x2ac72675f568"/></to>
    </wire>
    <wire loc="493:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2ac72675f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726872ca0"/></to>
    </wire>
    <wire loc="21:OpoADCTestC.nc">
      <from><interface-ref name="TimingLatch" scoped="" ref="0x2ac726976558"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2ac726720568"/></to>
    </wire>
    <wire loc="445:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2ac726720568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267e53d8"/></to>
    </wire>
    <wire loc="24:OpoADCTestC.nc">
      <from><interface-ref name="UltrasonicCapture" scoped="" ref="0x2ac726a02a00"/></from>
      <to><interface-ref name="CaptureB3" scoped="" ref="0x2ac726599020"/></to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2ac726599020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac726648c58"/></to>
    </wire>
    <wire loc="25:OpoADCTestC.nc">
      <from><interface-ref name="UCapControl" scoped="" ref="0x2ac7269ed558"/></from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2ac72658eba8"/></to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2ac72658eba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac72664ac80"/></to>
    </wire>
    <wire loc="26:OpoADCTestC.nc">
      <from><interface-ref name="SFDCapture" scoped="" ref="0x2ac726a00e50"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2ac72659b020"/></to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2ac72659b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac72663ac58"/></to>
    </wire>
    <wire loc="27:OpoADCTestC.nc">
      <from><interface-ref name="SFDCapControl" scoped="" ref="0x2ac726a01a08"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2ac726591120"/></to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2ac726591120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac72663cc80"/></to>
    </wire>
    <wire loc="28:OpoADCTestC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2ac7269ffcc8"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></to>
    </wire>
    <wire loc="120:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></to>
    </wire>
    <wire loc="32:OpoADCTestC.nc">
      <from><interface-ref name="RfControl" scoped="" ref="0x2ac7269994e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ac726bfd618"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ac726bfd618"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ac726c2b718"/></to>
    </wire>
    <wire loc="33:OpoADCTestC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ac7269ec278"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ac727a7d080"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ac727a7d080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ac72833e620"/></to>
    </wire>
    <wire loc="36:OpoADCTestC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ac726a03528"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ac726ceaad0"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ac726ceaad0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ac726cdd4b0"/></to>
    </wire>
    <wire loc="41:OpoADCTestC.nc">
      <from><interface-ref name="RxTimer" scoped="" ref="0x2ac7269507f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac727a77498"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac727a77498"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ac7278146a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:OpoADCTestC.nc">
      <from><interface-ref name="RfTimer" scoped="" ref="0x2ac72694d8c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac727a718e8"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac727a718e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ac7278146a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:OpoADCTestC.nc">
      <from><interface-ref name="AdcTimer" scoped="" ref="0x2ac726948ac8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac727a6a020"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac727a6a020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ac7278146a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac727947c28"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac727896110"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72784fe80"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72781d568"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac7276f5080"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72761ce00"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72753ab28"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac726d873e0"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac7281158e0"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac7270b95d8"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac726cde080"/></to>
    </wire>
    <wire loc="96:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac727f19cc0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac726a58110"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ac7266bc308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ac7261e8390"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ac7261e8390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ac7264d2680"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ac7266bcce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac726512c40"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac726512c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72650eb60"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ac7266ba418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2ac7265233e0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2ac72650d8b0"/></to>
    </wire>
    <wire loc="46:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2ac72650d8b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72651c738"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ac726523a40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac7266b4460"/></to>
    </wire>
    <wire loc="20:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2ac726522118"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac7266fa4a0"/></to>
    </wire>
    <wire loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac72651c738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac726534c60"/></to>
    </wire>
    <wire loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ac72652b980"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ac726533340"/></to>
    </wire>
    <wire loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ac7264fa130"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ac7265324d8"/></to>
    </wire>
    <wire loc="113:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2ac726577d30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac72662fc80"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2ac726593d30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac726644c80"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2ac726582558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac726635c58"/></to>
    </wire>
    <wire loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2ac726588e60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac726635020"/></to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2ac7265a06e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac726648020"/></to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2ac726596020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac72666ec58"/></to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2ac72658c060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac726661c80"/></to>
    </wire>
    <wire loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2ac7265714d0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac7265d9c80"/></to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2ac7265a2a70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac72663a020"/></to>
    </wire>
    <wire loc="115:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2ac726580558"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac72662dc58"/></to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2ac726598020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac72665fc58"/></to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2ac726590710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac726652c80"/></to>
    </wire>
    <wire loc="114:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2ac726587bb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac72662d020"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2ac726567060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265cb698"/></to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2ac72659f558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac72665f020"/></to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2ac726578898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac726637c80"/></to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2ac72658b400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac726659c80"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2ac726595668"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac726620c58"/></to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2ac72659a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac726650c58"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2ac726588140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac726620020"/></to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2ac7265a1868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac726650020"/></to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2ac726597020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac726657c58"/></to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2ac72659e3d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac726657020"/></to>
    </wire>
    <wire loc="128:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2ac72659c060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac726642c58"/></to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2ac72659d120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac72666e020"/></to>
    </wire>
    <wire loc="127:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2ac726589d00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ac726642020"/></to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2ac72658a898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2ac726670c80"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2ac7265e53b8"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265cad48"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2ac7265e59d0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2ac726666520"/></to>
    </wire>
    <wire loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2ac7265e3020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2ac726666c68"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac72661fa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265cb698"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac726639100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265cad48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac726634a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265cb698"/></to>
    </wire>
    <wire loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac726631100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265cad48"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac72662ca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265cb698"/></to>
    </wire>
    <wire loc="117:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac726646100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265cad48"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2ac7265ded50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2ac7265dd3a0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2ac726683418"/></to>
    </wire>
    <wire loc="123:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2ac7265dd9b8"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2ac726683b60"/></to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac726641a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac72663e100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac726656a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac726654100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac72664fa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></to>
    </wire>
    <wire loc="144:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac72664d100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac726665a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac726663100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac72665ea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac72665c100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac726674a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac726672100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac72666da90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2ac72666b100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7264d14e8"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ac7264e7998"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ac7264176c0"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac7266fa4a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac7266e1020"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ac7266d97c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ac7266fd020"/></to>
    </wire>
    <wire loc="22:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ac7266fd020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac7268ffc30"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ac7266df958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ac7266fc190"/></to>
    </wire>
    <wire loc="25:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ac7266fc190"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac726912448"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ac7266deae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ac7266fb338"/></to>
    </wire>
    <wire loc="28:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ac7266fb338"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac72690ecf0"/></to>
    </wire>
    <wire loc="23:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726916da0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x2ac72673d568"/></to>
    </wire>
    <wire loc="471:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2ac72673d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726827dd8"/></to>
    </wire>
    <wire loc="26:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac7269115f8"/></from>
      <to><interface-ref name="Port47" scoped="" ref="0x2ac726750568"/></to>
    </wire>
    <wire loc="478:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2ac726750568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72684f3d8"/></to>
    </wire>
    <wire loc="29:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac72690de20"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2ac72671c568"/></to>
    </wire>
    <wire loc="450:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2ac72671c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268003d8"/></to>
    </wire>
    <wire loc="442:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2ac726706978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267cfca0"/></to>
    </wire>
    <wire loc="455:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2ac726732568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72680dca0"/></to>
    </wire>
    <wire loc="531:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2ac72676d7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268233d8"/></to>
    </wire>
    <wire loc="551:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2ac72678c558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268a2ca0"/></to>
    </wire>
    <wire loc="532:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2ac72676b660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72681eca0"/></to>
    </wire>
    <wire loc="460:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2ac72672d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726804ca0"/></to>
    </wire>
    <wire loc="473:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2ac726739568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726841ca0"/></to>
    </wire>
    <wire loc="486:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2ac726746568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72685eca0"/></to>
    </wire>
    <wire loc="497:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2ac726757568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726885ca0"/></to>
    </wire>
    <wire loc="535:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2ac726787560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726815ca0"/></to>
    </wire>
    <wire loc="545:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2ac726798558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726872ca0"/></to>
    </wire>
    <wire loc="557:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2ac7267a6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72689d3d8"/></to>
    </wire>
    <wire loc="536:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2ac726785560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268343d8"/></to>
    </wire>
    <wire loc="463:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2ac726727568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268193d8"/></to>
    </wire>
    <wire loc="476:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2ac726754568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268583d8"/></to>
    </wire>
    <wire loc="489:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2ac726761568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268763d8"/></to>
    </wire>
    <wire loc="500:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2ac726773568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72689d3d8"/></to>
    </wire>
    <wire loc="440:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2ac72670ac88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267d9ca0"/></to>
    </wire>
    <wire loc="453:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2ac726716568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267f2d08"/></to>
    </wire>
    <wire loc="466:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2ac726741568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726830ca0"/></to>
    </wire>
    <wire loc="530:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2ac72676f970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268233d8"/></to>
    </wire>
    <wire loc="548:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2ac726792558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268893d8"/></to>
    </wire>
    <wire loc="555:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2ac7267a8558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72689d3d8"/></to>
    </wire>
    <wire loc="541:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2ac72677d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268623d8"/></to>
    </wire>
    <wire loc="495:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2ac72675b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72688eca0"/></to>
    </wire>
    <wire loc="549:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2ac726790558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726885ca0"/></to>
    </wire>
    <wire loc="538:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2ac726783558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72684bca0"/></to>
    </wire>
    <wire loc="443:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2ac7267247f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267ee3d8"/></to>
    </wire>
    <wire loc="456:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2ac72672f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268083d8"/></to>
    </wire>
    <wire loc="461:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2ac72672b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268233d8"/></to>
    </wire>
    <wire loc="487:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2ac726766568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72687f3d8"/></to>
    </wire>
    <wire loc="498:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2ac726777568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268a63d8"/></to>
    </wire>
    <wire loc="540:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2ac72677f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726867ca0"/></to>
    </wire>
    <wire loc="438:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2ac7266f6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267a0e18"/></to>
    </wire>
    <wire loc="451:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2ac72671a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267fbca0"/></to>
    </wire>
    <wire loc="464:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2ac726725568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726815ca0"/></to>
    </wire>
    <wire loc="477:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2ac726752568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726854ca0"/></to>
    </wire>
    <wire loc="542:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2ac72677b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726830ca0"/></to>
    </wire>
    <wire loc="546:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2ac726796558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268923d8"/></to>
    </wire>
    <wire loc="552:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2ac72678a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72689d3d8"/></to>
    </wire>
    <wire loc="543:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2ac726778560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72682b3d8"/></to>
    </wire>
    <wire loc="441:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2ac726708b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267d33d8"/></to>
    </wire>
    <wire loc="454:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2ac726734568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268113d8"/></to>
    </wire>
    <wire loc="467:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2ac72673f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72682b3d8"/></to>
    </wire>
    <wire loc="539:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2ac726781560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72686b3d8"/></to>
    </wire>
    <wire loc="550:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2ac72678e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268a63d8"/></to>
    </wire>
    <wire loc="496:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2ac726759568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268893d8"/></to>
    </wire>
    <wire loc="444:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2ac726722668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267eaca0"/></to>
    </wire>
    <wire loc="494:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2ac72675d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268923d8"/></to>
    </wire>
    <wire loc="449:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2ac72671e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267e1ca0"/></to>
    </wire>
    <wire loc="462:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2ac726729568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72681eca0"/></to>
    </wire>
    <wire loc="475:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2ac726735568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72685dca0"/></to>
    </wire>
    <wire loc="488:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2ac726763568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72687bca0"/></to>
    </wire>
    <wire loc="499:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2ac726775568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268a2ca0"/></to>
    </wire>
    <wire loc="439:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2ac7266f5e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267dd478"/></to>
    </wire>
    <wire loc="452:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2ac726718568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7267f63d8"/></to>
    </wire>
    <wire loc="465:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2ac726743568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268343d8"/></to>
    </wire>
    <wire loc="534:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2ac726767548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268193d8"/></to>
    </wire>
    <wire loc="547:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2ac726794558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72688eca0"/></to>
    </wire>
    <wire loc="533:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2ac726769560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268193d8"/></to>
    </wire>
    <wire loc="483:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2ac72674c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac72686b3d8"/></to>
    </wire>
    <wire loc="554:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2ac7267aa558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268a2ca0"/></to>
    </wire>
    <wire loc="558:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2ac7267a4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac7268763d8"/></to>
    </wire>
    <wire loc="529:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2ac7267715b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ac726804ca0"/></to>
    </wire>
    <wire loc="40:OpoADCTestP.nc">
      <from><interface-ref name="start_radio" scoped="" ref="0x2ac7269f7020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x2ac726bcbb98"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x2ac726a60758"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x2ac726bca578"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x2ac726a5f708"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x2ac726a60758"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x2ac726a56348"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x2ac726a5ad10"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x2ac726a53020"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2ac726a5f708"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x2ac726a54270"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x2ac726a611c8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x2ac726a58d58"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac726a3de20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac726bb3750"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac726bb3750"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727f16100"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x2ac726a52060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac726bb2c50"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac726bb2c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac727f15578"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x2ac726a72620"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x2ac726b1f8e8"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2ac726a6cdb0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x2ac72675f568"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2ac726a6add0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x2ac72675d568"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2ac726a68c48"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x2ac72675b568"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2ac726a66ac0"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x2ac726759568"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2ac726a64938"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x2ac726757568"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2ac726a627b0"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x2ac726777568"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2ac726a8e628"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x2ac726775568"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2ac726a8c528"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x2ac726773568"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2ac726a4f4e0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2ac726567060"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2ac726a70b68"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x2ac7265714d0"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2ac726a6e060"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x2ac726578898"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2ac726a6d390"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x2ac726588140"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2ac726a6c0c0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x2ac726588e60"/></to>
    </wire>
    <wire loc="99:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ac726bb2510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ac727f16df8"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac727f15e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac726bb1550"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ac727f145d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ac727f18328"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ac727fa4100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ac726c2b718"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ac726c653a0"/></to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ac726bfa5b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ac726c24798"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ac726c24798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ac727976980"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ac726bf7d10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ac726c21498"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ac726c21498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ac727973628"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ac726c1c1f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ac726c1f0c0"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ac726c1f0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ac7279712a8"/></to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac726c32968"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac7276b0130"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac7276b0130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac7276a2060"/></to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ac726c2c080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ac726c49ac0"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ac726c49ac0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ac726c55668"/></to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ac726bf71c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac726c23928"/></to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ac726c23928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac727975ab0"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c07cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c1ec78"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c1ec78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c56658"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ac726c0cb58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ac726c21a88"/></to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ac726c21a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ac727973c18"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ac726c31860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ac7276ac020"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ac7276ac020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ac72769e020"/></to>
    </wire>
    <wire loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ac726c653a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ac72793bdc8"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ac726c3fb48"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ac72796f020"/></to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ac726c67658"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ac727970400"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ac726c4be18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ac726c597e8"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ac726c597e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276b64b0"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ac726c55668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ac72793b318"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c56658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ac7276b33b8"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ac726c6ba98"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ac726c54128"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ac726c54128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ac7279282d0"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac726c48ca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac726c55020"/></to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac726c55020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac7276b26b0"/></to>
    </wire>
    <wire loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2ac727967698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac726c64388"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ac72796e020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ac726c604c8"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ac726c604c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ac7278d2db8"/></to>
    </wire>
    <wire loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ac72796ecc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ac726c591d0"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ac726c591d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ac7278d1ae8"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ac72796a8d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ac727489690"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ac72796d368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276b64b0"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276b64b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276a62e8"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac72796c188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276a4b60"/></to>
    </wire>
    <wire loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ac72796cab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ac726ceaad0"/></to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ac7279686a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ac726c85678"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ac726c85678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ac726c80948"/></to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac7279662a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ac72793bdc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ac727938d28"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac7276b26b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac7276a3630"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ac7279282d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ac727925550"/></to>
    </wire>
    <wire loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ac7278d2db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ac7278c6490"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ac72793b318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ac727934170"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2ac726c61020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac7278d2748"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ac7278d2748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2ac7278c7dc8"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ac7276b33b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ac7276a4210"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac726c64388"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac72789de28"/></to>
    </wire>
    <wire loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac72789de28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac7278c9440"/></to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2ac726c57330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac7278d3a40"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ac7278d3a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2ac7278c7118"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ac726c616a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ac7278d01a8"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ac7278d01a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ac7278c5808"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ac7278d1ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ac7278c5188"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ac727938d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ac726c53740"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ac726c53740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ac726c81140"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ac7278cf670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac727856a78"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ac727856a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac72784f298"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ac727853838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac72792b5d8"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ac72792b5d8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ac727927020"/></to>
    </wire>
    <wire loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ac727927020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac72793c080"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ac72793c080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ac727939838"/></to>
    </wire>
    <wire loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ac727939838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac726c862d8"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ac726c862d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac726c81be0"/></to>
    </wire>
    <wire loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ac7278cf020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac72793cc80"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ac72793cc80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ac727938668"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ac727938668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac72789c0c0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ac72789c0c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac727897450"/></to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ac72789b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac726c85020"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ac726c85020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac72761d168"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ac72761d168"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ac727618600"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac726c7f798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac726cede10"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac726cede10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac726cde6b0"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ac726c77a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ac726ce88b0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ac726ce88b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ac726cdb318"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ac726c73500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ac727548c58"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ac726c73500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ac72761e020"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ac72761e020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ac727619498"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ac727548c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ac727538198"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ac726c6dcc8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2ac727545480"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ac727545480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac7275389f8"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ac726c7ca70"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ac727544140"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ac727544140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ac7275377c0"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ac726ca1c58"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276b64b0"/></to>
    </wire>
    <wire loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac726c9d020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ac726ca0d58"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ac72781e650"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ac72781e650"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ac727819d58"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2ac726c92540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac727820c68"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ac727820c68"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac7270bf858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac726c6c518"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2ac726c8fb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2ac726c90cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2ac726c91e68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2ac726ce3d28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2ac726cda658"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2ac726d0f210"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ac726d87d58"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2ac726d87d58"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ac726dba6c0"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ac726d042c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ac726eab4f0"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ac726eab4f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac726e9f6a8"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ac726d03500"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2ac726ea89a8"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ac726ea89a8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac726ece020"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ac726d02688"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2ac726ea6ca8"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ac726ea6ca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac726ec5020"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ac726cfdcd0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2ac726eb0bd8"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ac726eb0bd8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ac726fe8b58"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ac726d233b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac7274117d0"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac7274117d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727023020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ac726d22518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2ac72740d020"/></to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ac72740d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ac726d22bf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2ac72740c2e8"/></to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ac72740c2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ac726d24ca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2ac72740f3a0"/></to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ac72740f3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac726d243c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac72740c900"/></to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac72740c900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ac726d2b120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2ac727404e10"/></to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ac727404e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ac726d2b990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2ac727401d60"/></to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ac727401d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ac726d2a230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2ac727400528"/></to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ac727400528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac726d2aab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac727407470"/></to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac727407470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac726d283d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac727407c10"/></to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac727407c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ac726cffa60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2ac7274497c0"/></to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ac7274497c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ac726cff128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2ac727449020"/></to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ac727449020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ac726d28c48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2ac727404470"/></to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ac727404470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ac726d26530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2ac727406470"/></to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ac727406470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ac726d26da0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ac727405470"/></to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ac727405470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2ac726d21e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727438e60"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac727438e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727023020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2ac726d21140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727461558"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac727461558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727023020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ac726cf81b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ac727489690"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ac726d0e998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ac72748bcd8"/></to>
    </wire>
    <wire loc="23:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ac72748bcd8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ac7274c7190"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2ac726d163f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2ac726d17598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac726d873e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac726dbbe70"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac726dbbe70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac727fe9630"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2ac726dba6c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ac727fe9e18"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac727fe9630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac727fe1358"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ac727fe9e18"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ac727fdba20"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac727fe1358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac727fc77a8"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ac727fd5d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ac727fe1b40"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ac727fe1b40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ac727fc5020"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ac727fd8b38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ac726dfcd70"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ac726dfcd70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ac726e1bc50"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac727fc2020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ac727fcc7d8"/></to>
    </wire>
    <wire loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac727fcc7d8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac727fc15b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac727fcbd60"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac727fcbd60"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac727fc08c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ac727fc9020"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac727fc9020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2ac726593d30"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2ac726589d00"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2ac726590710"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2ac7265a1868"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2ac72658eba8"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2ac7265a06e0"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2ac72658c060"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2ac72659f558"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2ac72658b400"/></to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2ac72659e3d0"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2ac72658a898"/></to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2ac72659d120"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ac726e3ce20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ac726dfaba0"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ac726dfaba0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ac726e2d020"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726e1f020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></to>
    </wire>
    <wire loc="73:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ac726eaa688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac726e99020"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ac726ea9818"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac726e95720"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ac726eac278"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac726ea4db8"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ac726ea7b20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac726eca720"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726ea2020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ac726706978"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726e9e908"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x2ac726739568"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726e98120"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2ac726708b00"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726e94908"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ac7266f6020"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726ecd120"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x2ac726752568"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726ec9908"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2ac72673b668"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726ec4120"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x2ac726754568"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ac726eb0020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ac726eea020"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ac726ef0898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ac726fd9a78"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726eeaa90"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x2ac726591120"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x2ac726ed8d60"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x2ac72659b020"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x2ac726ed7b48"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x2ac72673b668"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2ac726fe7780"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ac726f086f0"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2ac726f086f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x2ac726ef43e0"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x2ac726fd85f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ac726f0a7b8"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2ac726f0a7b8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x2ac726ef8470"/></to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2ac726efe6f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x2ac726f2a3e0"/></to>
    </wire>
    <wire loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2ac726f056f0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x2ac726ef13e0"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2ac726f036f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x2ac726f2f3e0"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2ac726f0e6f0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x2ac726ef63e0"/></to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2ac726f006f0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2ac726f2c3e0"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2ac726f076f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x2ac726ef33e0"/></to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2ac726efd6f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x2ac726f293e0"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2ac726f026f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x2ac726f2e3e0"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2ac726f096f0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x2ac726ef53e0"/></to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2ac726eff6f0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x2ac726f2b3e0"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2ac726f066f0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x2ac726ef23e0"/></to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2ac726f046f0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x2ac726f303e0"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2ac726f0f6f0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x2ac726ef73e0"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2ac726f016f0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x2ac726f2d3e0"/></to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ac72740f9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ac727403d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ac7273fa470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ac7274015c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ac7274457c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ac7274477c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ac72740dc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ac7273f7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7274487c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ac7273fdc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ac7273fe470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727410430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727023cb0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727023cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac72701cdf8"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac72740b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ac72740bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac7273f5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ac72740a3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac727447020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ac7273f7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ac727406c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ac7273f8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ac7273fac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ac7273f8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ac727445020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ac727446020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ac7273fec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ac7273f9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ac727448020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ac727400cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ac727444020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ac727410d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ac727409c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ac727405c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ac7273fc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ac7273fcc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7274035f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ac72740a9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ac727409638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac72740b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac7273f5800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ac7274467c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ac7273fd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ac7273f9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ac72740d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ac7273ff4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ac727409020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ac7273ffc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ac7273f6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ac727444c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac72705ce50"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72705a040"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72705ad40"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac727023020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727019c10"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac727059a98"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2ac727054838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac7270c1100"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ac7270c1100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac7270bf858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ac7270571e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac7270e8cf0"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac7270e8cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac72807a7d0"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ac727056d18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ac7270e6948"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ac7270e6948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ac728079b90"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ac727054020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ac7273e1020"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ac7273e1020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ac728078d18"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac727053730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2ac7270485d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ac7270bf858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac7270b81c8"/></to>
    </wire>
    <wire loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ac728078d18"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ac727114020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ac728079b90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ac7271169b0"/></to>
    </wire>
    <wire loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac72807a7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727117020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ac728079430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ac72806f8c8"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ac72806f8c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ac7272a3020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ac7271169b0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ac72717bb48"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ac7280782a8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ac727115020"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ac727115020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ac7271c42a8"/></to>
    </wire>
    <wire loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ac727111020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ac7280774b0"/></to>
    </wire>
    <wire loc="115:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7280ef8c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac727116208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ac727114d90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac728070b38"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac728070b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac7272a5ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ac72710ee58"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ac7280f6020"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ac7280f6020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ac7272a62b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac727116208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac72717b3c8"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ac727114020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ac7271c4e38"/></to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac727117020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac72717d608"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ac7271c2550"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ac727111020"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x2ac7271c3758"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x2ac727114d90"/></to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x2ac7271bd470"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x2ac72710ee58"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x2ac7271c2b88"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ac7271b6828"/></to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ac7271b6828"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2ac7271adc00"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac7271bdbd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x2ac7271bb2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ac7271ab5f8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ac7271a4020"/></to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ac7271ae1b8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ac7271a55d0"/></to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2ac72720f6e0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2ac72676f970"/></to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x2ac72720d658"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x2ac72676b660"/></to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2ac72720b558"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2ac726769560"/></to>
    </wire>
    <wire loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x2ac727209558"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x2ac726785560"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x2ac727207558"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x2ac726787560"/></to>
    </wire>
    <wire loc="14:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x2ac7271c8a48"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2ac7273434e8"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ac7280f6780"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ac7272a51c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ac7280f6d58"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ac7272ffc70"/></to>
    </wire>
    <wire loc="11:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ac7272ffc70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x2ac7273434e8"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ac72806e7c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ac7271b6828"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac72806e060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7272a37f0"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7272a37f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7273079d8"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7272a1570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7280ef8c8"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ac7272a3020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ac727308698"/></to>
    </wire>
    <wire loc="106:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ac727308698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ac728112d58"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x2ac7272a62b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x2ac72729d020"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac7272a5ce8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727309838"/></to>
    </wire>
    <wire loc="105:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac727309838"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac728112060"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x2ac7272a51c8"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x2ac72729d900"/></to>
    </wire>
    <wire loc="108:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7273079d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7281100e0"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7273063c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7272a1570"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac72728dd98"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7273079d8"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x2ac72728d020"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ac7271ae1b8"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2ac72728d7c0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ac7271ab5f8"/></to>
    </wire>
    <wire loc="107:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ac727308dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ac7281114c0"/></to>
    </wire>
    <wire loc="109:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac728110980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7273063c8"/></to>
    </wire>
    <wire loc="111:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ac72810f130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ac728114020"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ac72810c2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x2ac72733c060"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x2ac7271adc00"/></to>
    </wire>
    <wire loc="18:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x2ac727338868"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x2ac72676f970"/></to>
    </wire>
    <wire loc="19:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x2ac7273367e0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x2ac726769560"/></to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ac72742ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ac727435100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac72742fa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ac727429470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ac727422c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ac727429c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ac72746a2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ac72746c2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ac7274343a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ac727472470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac72746e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ac72742ea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ac72742ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ac727423470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ac727425c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ac727428470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727437a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727023cb0"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac727433c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ac7274312e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac727471a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ac727431a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac72746ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac727433020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ac727473c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ac72742c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac72742e2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ac727436a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ac727475c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ac727421470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ac727473470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ac72746ba88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ac72746ca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ac727424470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ac727421c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ac72746fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ac727427470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ac72746aa88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ac727436470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ac72742f2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ac72742b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ac727423c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ac727428c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ac727422470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ac72742a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ac727435718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ac72742ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ac727430060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ac727430c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ac72746f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ac727470a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac727433638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac7274702e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ac72746b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ac727424c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ac727475470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ac727435d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ac7274349b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ac727427c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ac727430678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ac727425470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ac727472c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ac727469780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ac727454470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ac72745f900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac727457470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ac727453d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ac7274a0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ac7274515c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ac7274957c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ac7274977c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ac72745dc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ac72749dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7274987c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ac727456470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ac727455470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ac72744dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ac72744e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ac727451d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac7274602a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727023cb0"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac72745b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ac72745bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac72749b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ac72745a3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac727497020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac72745c900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ac72749d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ac727456c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac727457c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ac72745f2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ac72749e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ac7274a0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ac72749ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ac727495020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ac727496020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ac72744ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ac72749f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ac727498020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ac727450cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ac727493020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ac727460bd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ac727458c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ac727455c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ac72744b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ac727450528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ac72744bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ac727454e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ac72745d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7274535f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ac72745a9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ac727458638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ac7274997c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ac727499020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac72745b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac72749b800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ac7274967c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ac72744d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ac72749fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ac72745d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ac72745c2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ac72744f4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ac727458020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ac72744fc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ac72749c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ac727493c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2ac7274c4648"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2ac7274caad0"/></to>
    </wire>
    <wire loc="20:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x2ac7274caad0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2ac7274b5b08"/></to>
    </wire>
    <wire loc="16:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2ac7274af3f8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2ac7274b8ba8"/></to>
    </wire>
    <wire loc="21:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2ac7274b8ba8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2ac7274f3108"/></to>
    </wire>
    <wire loc="17:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x2ac7274afc40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ac7274fa020"/></to>
    </wire>
    <wire loc="18:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2ac7274f7530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x2ac7274a1378"/></to>
    </wire>
    <wire loc="11:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x2ac7274a1378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2ac7275014e0"/></to>
    </wire>
    <wire loc="18:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ac7274ed748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ac7274f5b78"/></to>
    </wire>
    <wire loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ac7274f5b78"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ac7274cc920"/></to>
    </wire>
    <wire loc="19:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x2ac7274f3968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ac7274f7530"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ac727523d10"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ac72750f178"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ac72750f178"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ac72750b740"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac7275098c0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x2ac726567060"/></to>
    </wire>
    <wire loc="9:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac7275005f8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x2ac726716568"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2ac727543cc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2ac727536738"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2ac727542458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2ac727536e80"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2ac727535820"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ac726d87d58"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ac72752a8b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ac726eac278"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ac727529c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ac726eab4f0"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ac727526e20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2ac726ea7b20"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ac72757dd60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2ac726eb0020"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ac72757b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac7275f47d0"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac7275f47d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727023020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac72757bcb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac7275f3430"/></to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac7275f3430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727023cb0"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ac727578670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ac7275f3d58"/></to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ac7275f3d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ac727578d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2ac7275f0638"/></to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ac7275f0638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ac727577478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2ac7275f0c50"/></to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ac7275f0c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac727577b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac7275ee638"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac7275ee638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ac727579da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ac7275e8470"/></to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ac7275e8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ac72757a720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2ac72762dc58"/></to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ac72762dc58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac727579538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7276317c0"/></to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7276317c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac7275763d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac7275eac10"/></to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac7275eac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ac727575558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7275e65f8"/></to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7275e65f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ac727575de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ac7275e6d98"/></to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ac7275e6d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ac727576e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2ac7275ec020"/></to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ac7275ec020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ac7275736f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2ac72762e020"/></to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ac72762e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ac727574650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ac7276307c0"/></to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ac7276307c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ac727574e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ac72762f020"/></to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ac72762f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ac72756d750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ac72761e808"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ac72761e808"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ac727619c80"/></to>
    </wire>
    <wire loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ac727531940"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276b64b0"/></to>
    </wire>
    <wire loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7275307e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ac72752f460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac7276b0130"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ac72757d1d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ac7276aaac8"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ac7276aaac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ac72769cac8"/></to>
    </wire>
    <wire loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac7275700c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ac7275e7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ac7275f29b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac7275ea470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ac7275dd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ac7275e45c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ac72762e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ac7275dac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ac7275e9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ac7275e0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ac7275e1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ac7275e4d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ac7275eec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac727634060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ac7275ed3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac727630020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac7275ef900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ac7275da470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ac7275e9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ac7275f23a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ac7275db470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ac7275ddc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ac7275dbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ac7275e1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ac7275dc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ac727631020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ac7275e3cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ac72762d020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ac7275ecc50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ac7275e8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ac7275df470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ac7275e3528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ac7275dfc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ac7275e7e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ac7275f0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ac7275ed9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ac7275ec638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ac7276327c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ac727632020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac7275ee020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac727634800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ac72762f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ac7275e0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ac7275dcc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ac7275ef2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ac7275e24f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ac7275e2c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ac7275d9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2ac72761d8c0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2ac727618d58"/></to>
    </wire>
    <wire loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac727660a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ac727617420"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ac726eab4f0"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ac727616688"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2ac726eaa688"/></to>
    </wire>
    <wire loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ac727615818"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2ac726ea9818"/></to>
    </wire>
    <wire loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ac727614a30"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ac726ef0898"/></to>
    </wire>
    <wire loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ac7276136c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727805db8"/></to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ac727805db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ac727023020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ac727612518"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2ac727846a88"/></to>
    </wire>
    <wire loc="195:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ac727846a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac727611a88"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac727800638"/></to>
    </wire>
    <wire loc="137:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac727800638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ac727611398"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2ac7277fe2e8"/></to>
    </wire>
    <wire loc="139:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ac7277fe2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ac727610328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276b64b0"/></to>
    </wire>
    <wire loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac72760e188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></to>
    </wire>
    <wire loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ac72760cb80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac7276b0130"/></to>
    </wire>
    <wire loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ac72760eaf0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ac726ceaad0"/></to>
    </wire>
    <wire loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ac727608dc8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7277f7c10"/></to>
    </wire>
    <wire loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7277f7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ac7276076a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ac7277f6470"/></to>
    </wire>
    <wire loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ac7277f6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ac7276086c8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2ac7277fd060"/></to>
    </wire>
    <wire loc="141:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ac7277fd060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ac727661108"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2ac7278462e8"/></to>
    </wire>
    <wire loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ac7278462e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ac727662020"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ac7277e42e8"/></to>
    </wire>
    <wire loc="188:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ac7277e42e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ac727662850"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ac7277e4a88"/></to>
    </wire>
    <wire loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ac7277e4a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac727661970"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac7277e6a88"/></to>
    </wire>
    <wire loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac7277e6a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ac727660210"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ac727803470"/></to>
    </wire>
    <wire loc="129:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ac727803470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2ac727655e38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ac7276fb720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ac726dfcd70"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2ac7276958b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ac727705528"/></to>
    </wire>
    <wire loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ac727698b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ac72774e020"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ac72774e020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ac7277c3988"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ac7276f5d78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac7277d0020"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac7276f5080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72774b560"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac72774b560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72826d358"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ac7277ca208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ac727758168"/></to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ac727753648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ac72774bd48"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ac72774bd48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ac728267a20"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ac7277c2b88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ac727740bd8"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ac727740bd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ac7277383f8"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac72826d358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac7282527a8"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ac728261d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ac72826db40"/></to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ac72826db40"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ac728251020"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ac728263b38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ac727740bd8"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac72824d020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ac7282575e0"/></to>
    </wire>
    <wire loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2ac7282575e0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac72824c5b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac728256bd8"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac728256bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac72824b8c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ac728254020"/></to>
    </wire>
    <wire loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2ac728254020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ac727735688"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ac726dfaba0"/></to>
    </wire>
    <wire loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ac7277b15e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ac7277c5478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ac7277ba420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ac7278146a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ac7278146a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ac7276f5d78"/></to>
    </wire>
    <wire loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ac7277f8a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ac727802100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac7277fca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x2ac7277efc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ac7277f6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ac7278013a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x2ac7277ea470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7277e62e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ac7277fba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ac7277faa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x2ac7277f0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ac7277f2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ac7277f5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727804a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727023cb0"/></to>
    </wire>
    <wire loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac727800c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac7277e9a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ac7277fea00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac727800020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x2ac7277ebc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ac7277fa2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac7277fb2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ac727803a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x2ac7277edc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x2ac7277ee470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x2ac7277eb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ac7277e3a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ac7277f1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x2ac7277eec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ac7277e7a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ac7277f4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ac7277fc2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ac7277f82e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x2ac7277f0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ac7277f5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x2ac7277ef470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ac7277f7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ac727802718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ac7277fdc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ac7277e72e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ac7277e8a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac7277e82e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ac7277e32e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ac7277f1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x2ac7277ed470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ac727802d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ac7278019b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ac7277f4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ac7277fd678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ac7277f2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x2ac7277eac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ac727845780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2ac72781c668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2ac72781dd80"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ac727822868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ac72781d568"/></to>
    </wire>
    <wire loc="50:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ac727818558"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <from><interface-ref name="IdReader" scoped="" ref="0x2ac727816c88"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x2ac7274caad0"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ac72784e578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ac727853838"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ac72784d2a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac727850468"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ac727850468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac7270bf858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ac72784c080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ac72781e650"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac72784c848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></to>
    </wire>
    <wire loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2ac72789c788"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2ac727897b18"/></to>
    </wire>
    <wire loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ac727896818"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ac72789b020"/></to>
    </wire>
    <wire loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac727896e58"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></to>
    </wire>
    <wire loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ac7278c4528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ac7278cf670"/></to>
    </wire>
    <wire loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ac7278c3358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ac7278cf020"/></to>
    </wire>
    <wire loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7278c3970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276b64b0"/></to>
    </wire>
    <wire loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7278c27a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></to>
    </wire>
    <wire loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ac7278c11c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ac7279462a8"/></to>
    </wire>
    <wire loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2ac7278feac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2ac72793a928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac727936d50"/></to>
    </wire>
    <wire loc="74:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ac727936d50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ac7270bf858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac7279223c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c56658"/></to>
    </wire>
    <wire loc="63:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ac72833e620"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ac728333e58"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ac727a7dc38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ac72833d268"/></to>
    </wire>
    <wire loc="64:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ac72833d268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ac726c1c1f0"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ac727a7c888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ac72833de20"/></to>
    </wire>
    <wire loc="65:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ac72833de20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ac726c0cb58"/></to>
    </wire>
    <wire loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ac727a7a020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ac72833b430"/></to>
    </wire>
    <wire loc="66:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ac72833b430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c07cb0"/></to>
    </wire>
    <wire loc="60:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ac728331ab0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac727a029b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ac728330700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ac726c0cb58"/></to>
    </wire>
    <wire loc="53:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ac727a029b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ac727a25e40"/></to>
    </wire>
    <wire loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ac727a91bd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ac726bfa5b0"/></to>
    </wire>
    <wire loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ac727a90888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ac726c0cb58"/></to>
    </wire>
    <wire loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ac727a8e020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ac726c1c1f0"/></to>
    </wire>
    <wire loc="169:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2ac727a8ec58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2ac727a8d470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/MoteClockC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MoteClockP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="3:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="OpoADCTestP" loc="4:OpoADCTestP.nc">
      <module/>
    </component>
    <component qname="OpoADCTestC.OpoADC" loc="45(OpoADCTestC.OpoADC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.  &#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/wwhuang/git/tinyos-lab11/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.16 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726959150"/>
            <typename><typedef-ref name="TMicro" ref="0x2ac7269594a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726959150"/>
            <typename><typedef-ref name="TMicro" ref="0x2ac7269594a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
        <short>&#10; Random interface wired to M twist PRNG.</short>
        <long>&#10; Random interface wired to M twist PRNG.&#10;&#10; @author  William Huang&#10; @date    2013&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMtC" loc="16:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OpoADCTestC.OpoAdcRf" loc="47(OpoADCTestC.OpoAdcRf):/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OpoADCTestC.OpoAdcRf.SenderC" loc="47(OpoADCTestC.OpoAdcRf.SenderC):/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OpoADCTestC.OpoAdcRf.SenderC.AMQueueEntryP" loc="43(OpoADCTestC.OpoAdcRf.SenderC.AMQueueEntryP):/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OpoADCTestC.RxTimer" loc="44(OpoADCTestC.RxTimer):/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OpoADCTestC.RfTimer" loc="44(OpoADCTestC.RfTimer):/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OpoADCTestC.AdcTimer" loc="44(OpoADCTestC.AdcTimer):/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2ac7265ac878" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2ac7265acbf0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2ac7265ab020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2ac7265ab378" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2ac7265ab6d0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2ac7265aba20" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2ac7265abd88" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2ac7265a9150" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2ac7265a9500" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2ac7265db748" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2ac7265dbaf8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2ac72679f998" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2ac72679fd20" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2ac72679e108" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2ac72679e490" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2ac72679e7e0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ClientC" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc" abstract="">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.  &#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ac726b7a1c8" loc="83:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ac726b6d1f8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ac726df5a28" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ac726df5a28"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ac726e30a68" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ac726e30a68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ac726e1a548" loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ac726e1a548"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ac726e1acb0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ac726e1acb0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ac726e190a8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ac726e190a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ac726e19820" loc="58:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ac726e19820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ac726e19bc8" loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2ac726e18380" loc="60:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2ac726e18380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ac726e01e80" loc="52:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ac726e01e80"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ac726e71610" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ac726e71610"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ac726e719d8" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ac726e719d8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ac726e70198" loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ac726e70198"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ac726e70540" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ac7272875a0" loc="89:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2ac7272cca80" loc="42:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2ac7272b25c0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac7274cdc48" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac7274cdc48"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ac727522398" loc="51:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac727522398"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac727703110" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac727703110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac72777c068" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac72777c068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac7277afb58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac7277afb58"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ac7277afe68" loc="46:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ac7279b98e8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ac727a1c348" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ac727a18e30" loc="43:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2ac7279feda8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2ac726513c50" loc="58:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2ac726513c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726512020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ac726511850" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ac726511850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ac726511ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac726512c40" loc="45:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac726512c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72650e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ac726523a40" loc="49:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2ac726523a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726523d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac72650eb60" loc="45:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac72650eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726523020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2ac7265233e0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2ac7265233e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726523730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2ac726522118" loc="50:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2ac726522118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726522468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2ac72650d8b0" loc="39:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2ac72650d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72650dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2ac72652b980" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ac72652b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ac7265187c8"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ac72652be58"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ac726518020"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ac7265181a8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ac72652bcd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ac726518330"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ac7265184b8"/>
        <function-ref name="initClocks" scoped="" ref="0x2ac726518640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac72651c738" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac72651c738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72651ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2ac726533340" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ac726533340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ac7265321a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ac726533818"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ac7265339a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ac726533b28"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ac726533690"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ac726533cb0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ac726533e38"/>
        <function-ref name="initClocks" scoped="" ref="0x2ac726532020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ac7265324d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ac7265324d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ac726532828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac726534c60" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac726534c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726533020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2ac726577d30" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2ac726577d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac7265700d8"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726570260"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7265703e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726570570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac7265706f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726570880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726570a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726570b90"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726570d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2ac726593d30" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2ac726593d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac7265920d8"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726592260"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7265923e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726592570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac7265926f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726592880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726592a08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726592b90"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726592d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2ac726582558" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2ac726582558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7265828a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac726582a30"/>
        <function-ref name="captured" scoped="" ref="0x2ac726582bb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726582d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726580020"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7265801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2ac726599020" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2ac726599020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726599370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7265994f8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726599680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726599808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726599990"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac726599b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2ac726588e60" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2ac726588e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7265871e8"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac726587370"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac7265874f8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726587680"/>
        <function-ref name="fired" scoped="" ref="0x2ac726587808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2ac7265a06e0" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2ac7265a06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7265a0a30"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7265a0bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac7265a0d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72659f020"/>
        <function-ref name="fired" scoped="" ref="0x2ac72659f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2ac726596020" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2ac726596020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726596370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7265964f8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726596680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726596808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726596990"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac726596b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2ac72658c060" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2ac72658c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac72658c3b0"/>
        <function-ref name="getControl" scoped="" ref="0x2ac72658c538"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72658c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac72658c848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac72658c9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72658cb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac72658cce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac72658ce68"/>
        <function-ref name="setControl" scoped="" ref="0x2ac72658b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2ac7265714d0" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2ac7265714d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726571820"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7265719a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726571b30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726571cb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726571e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726578020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac7265781a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726578330"/>
        <function-ref name="setControl" scoped="" ref="0x2ac7265784b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2ac72659b020" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2ac72659b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72659b370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac72659b4f8"/>
        <function-ref name="captured" scoped="" ref="0x2ac72659b680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72659b808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72659b990"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac72659bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2ac7265a2a70" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2ac7265a2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7265a2dc0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7265a1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac7265a11a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac7265a1330"/>
        <function-ref name="fired" scoped="" ref="0x2ac7265a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2ac726591120" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2ac726591120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726591570"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7265916f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726591880"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726591a08"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726591b90"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726591d18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726590020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac7265901a8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726590330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2ac726580558" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2ac726580558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7265808a8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac726580a30"/>
        <function-ref name="captured" scoped="" ref="0x2ac726580bb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726580d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726594020"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7265941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2ac726598020" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2ac726598020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726598370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7265984f8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726598680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726598808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726598990"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac726598b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2ac726590710" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2ac726590710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726590a60"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726590be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726590d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac72658e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac72658e1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72658e330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac72658e4b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac72658e640"/>
        <function-ref name="setControl" scoped="" ref="0x2ac72658e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2ac726587bb8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2ac726587bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726583020"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7265831a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726583330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac7265834b8"/>
        <function-ref name="fired" scoped="" ref="0x2ac726583640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2ac726567060" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2ac726567060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac7265673b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726567538"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7265676c0"/>
        <function-ref name="get" scoped="" ref="0x2ac726567848"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7265679d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726567b58"/>
        <function-ref name="getMode" scoped="" ref="0x2ac726567ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726567e68"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726566020"/>
        <function-ref name="setMode" scoped="" ref="0x2ac7265661a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726566330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2ac72659f558" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2ac72659f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72659f8a8"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac72659fa30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac72659fbb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72659fd40"/>
        <function-ref name="fired" scoped="" ref="0x2ac72659e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2ac726578898" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2ac726578898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726578be8"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726578d70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726577020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7265771a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726577330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7265774b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726577640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac7265777c8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726577950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2ac72658b400" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2ac72658b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac72658b750"/>
        <function-ref name="getControl" scoped="" ref="0x2ac72658b8d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72658ba60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac72658bbe8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac72658bd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72658a020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac72658a1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac72658a330"/>
        <function-ref name="setControl" scoped="" ref="0x2ac72658a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2ac726595668" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2ac726595668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7265959b8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac726595b40"/>
        <function-ref name="captured" scoped="" ref="0x2ac726595cc8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726595e50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726582020"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7265821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2ac72659a020" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2ac72659a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72659a370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac72659a4f8"/>
        <function-ref name="captured" scoped="" ref="0x2ac72659a680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72659a808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72659a990"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac72659ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2ac726588140" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2ac726588140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726588490"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac726588618"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac7265887a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726588928"/>
        <function-ref name="fired" scoped="" ref="0x2ac726588ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2ac7265a1868" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2ac7265a1868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7265a1bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7265a1d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac7265a0020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac7265a01a8"/>
        <function-ref name="fired" scoped="" ref="0x2ac7265a0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2ac726597020" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2ac726597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726597370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7265974f8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726597680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726597808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726597990"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac726597b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2ac72658eba8" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2ac72658eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac72658d020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac72658d1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72658d330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac72658d4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac72658d640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72658d7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac72658d950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac72658dad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac72658dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2ac726594520" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2ac726594520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726594870"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac7265949f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726594b80"/>
        <function-ref name="get" scoped="" ref="0x2ac726594d08"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726593020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7265931a8"/>
        <function-ref name="getMode" scoped="" ref="0x2ac726593330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7265934b8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726593640"/>
        <function-ref name="setMode" scoped="" ref="0x2ac7265937c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726593950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2ac72659e3d0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2ac72659e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72659e720"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac72659e8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac72659ea30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72659ebb8"/>
        <function-ref name="fired" scoped="" ref="0x2ac72659ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2ac72659c060" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2ac72659c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72659c3b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac72659c538"/>
        <function-ref name="captured" scoped="" ref="0x2ac72659c6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72659c848"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72659c9d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac72659cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2ac72659d120" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2ac72659d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72659d670"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac72659d7f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac72659d980"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72659db08"/>
        <function-ref name="fired" scoped="" ref="0x2ac72659dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2ac726589d00" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2ac726589d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7265a20a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7265a2228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac7265a23b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac7265a2538"/>
        <function-ref name="fired" scoped="" ref="0x2ac7265a26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2ac72658a898" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2ac72658a898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac72658abe8"/>
        <function-ref name="getControl" scoped="" ref="0x2ac72658ad70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726589020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7265891a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726589330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7265894b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726589640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac7265897c8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726589950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2ac7265e59d0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2ac7265e59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7265e5d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2ac7265e53b8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2ac7265e53b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7265e5708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2ac7265e3020" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2ac7265e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7265e3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2ac7265cad48" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac7265cad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7265e50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ac7265cb698" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac7265cb698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac7265cb9e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac7265cbb70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7265cbcf8"/>
        <function-ref name="get" scoped="" ref="0x2ac7265cbe80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7265ca030"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7265ca1b8"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7265ca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7265ca4c8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac7265ca650"/>
        <function-ref name="setMode" scoped="" ref="0x2ac7265ca7d8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac7265ca960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2ac7265dd3a0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2ac7265dd3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7265dd6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2ac7265ded50" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2ac7265ded50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7265dd0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2ac7265dd9b8" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2ac7265dd9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7265ddd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2ac7265de718" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac7265de718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7265dea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ac7265df020" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac7265df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac7265df370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac7265df4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7265df680"/>
        <function-ref name="get" scoped="" ref="0x2ac7265df808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7265df990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7265dfb18"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7265dfca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7265dfe28"/>
        <function-ref name="overflow" scoped="" ref="0x2ac7265de020"/>
        <function-ref name="setMode" scoped="" ref="0x2ac7265de1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac7265de330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac726620c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac726620c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72661f020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac72661f1a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac72661f330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72661f4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72661f640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac72661f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac7265d9c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac7265d9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726621020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7266211a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726621330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7266214b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726621640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266217c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726621950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726621ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726621c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac726639100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac726639100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726639450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac726620020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac726620020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726620370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7266204f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726620680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726620808"/>
        <function-ref name="fired" scoped="" ref="0x2ac726620990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac72661fa90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac72661fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac72661fde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac72661e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72661e1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72661e330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72661e4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72661e640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac72661e7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72661e950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac72661ead8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac72661ec60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac72661ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac726635c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac726635c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726634020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7266341a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726634330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7266344b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726634640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7266347c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac726637c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac726637c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726636020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7266361a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726636330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7266364b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726636640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266367c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726636950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726636ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726636c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac726631100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac726631100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726631450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac726635020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac726635020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726635370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7266354f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726635680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726635808"/>
        <function-ref name="fired" scoped="" ref="0x2ac726635990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac726634a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac726634a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726634de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726632020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7266321a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726632330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266324b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726632640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7266327c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726632950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726632ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac726632c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726632de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac72662dc58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac72662dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72662c020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac72662c1a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac72662c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72662c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72662c640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac72662c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac72662fc80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac72662fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac72662e020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac72662e1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72662e330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac72662e4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac72662e640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72662e7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac72662e950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac72662ead8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac72662ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac726646100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac726646100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726646450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac72662d020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac72662d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72662d370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac72662d4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac72662d680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72662d808"/>
        <function-ref name="fired" scoped="" ref="0x2ac72662d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac72662ca90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac72662ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac72662cde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726647020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7266471a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726647330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266474b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726647640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7266477c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726647950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726647ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac726647c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726647de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac726642c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac726642c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726641020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7266411a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726641330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7266414b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726641640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7266417c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac726644c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac726644c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726643020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7266431a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726643330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7266434b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726643640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266437c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726643950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726643ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726643c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac72663e100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac72663e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac72663e450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac726642020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac726642020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726642370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7266424f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726642680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726642808"/>
        <function-ref name="fired" scoped="" ref="0x2ac726642990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac726641a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac726641a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726641de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac72663f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72663f1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72663f330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72663f4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72663f640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac72663f7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72663f950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac72663fad8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac72663fc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac72663fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac72663ac58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac72663ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726656020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7266561a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726656330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7266564b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726656640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7266567c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac72663cc80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac72663cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac72663b020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac72663b1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72663b330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac72663b4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac72663b640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72663b7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac72663b950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac72663bad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac72663bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac726654100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac726654100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726654450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac72663a020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac72663a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72663a370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac72663a4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac72663a680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72663a808"/>
        <function-ref name="fired" scoped="" ref="0x2ac72663a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac726656a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac726656a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726656de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726655020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7266551a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726655330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266554b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726655640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7266557c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726655950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726655ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac726655c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726655de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac726650c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac726650c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72664f020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac72664f1a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac72664f330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72664f4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72664f640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac72664f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac726652c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac726652c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726651020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7266511a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726651330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7266514b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726651640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266517c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726651950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726651ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726651c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac72664d100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac72664d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac72664d450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac726650020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac726650020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726650370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7266504f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726650680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726650808"/>
        <function-ref name="fired" scoped="" ref="0x2ac726650990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac72664fa90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac72664fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac72664fde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac72664e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72664e1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72664e330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72664e4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72664e640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac72664e7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72664e950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac72664ead8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac72664ec60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac72664ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac726648c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac726648c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726665020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7266651a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726665330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7266654b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726665640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7266657c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac72664ac80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac72664ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726649020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7266491a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726649330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7266494b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726649640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266497c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726649950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726649ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726649c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac726663100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac726663100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726663450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac726648020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac726648020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726648370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7266484f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726648680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726648808"/>
        <function-ref name="fired" scoped="" ref="0x2ac726648990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac726665a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac726665a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726665de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726664020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7266641a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726664330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266644b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726664640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7266647c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726664950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726664ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac726664c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726664de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac72665fc58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac72665fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72665e020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac72665e1a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac72665e330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72665e4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72665e640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac72665e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac726661c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac726661c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726660020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7266601a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726660330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7266604b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726660640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266607c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726660950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726660ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726660c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac72665c100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac72665c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac72665c450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac72665f020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac72665f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72665f370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac72665f4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac72665f680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72665f808"/>
        <function-ref name="fired" scoped="" ref="0x2ac72665f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac72665ea90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac72665ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac72665ede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac72665d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72665d1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72665d330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72665d4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72665d640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac72665d7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72665d950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac72665dad8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac72665dc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac72665dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac726657c58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac726657c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726674020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7266741a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726674330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7266744b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726674640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7266747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac726659c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac726659c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726658020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7266581a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726658330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7266584b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726658640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266587c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726658950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726658ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726658c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac726672100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac726672100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726672450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac726657020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac726657020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726657370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7266574f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726657680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726657808"/>
        <function-ref name="fired" scoped="" ref="0x2ac726657990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac726674a90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac726674a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726674de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726673020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7266731a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726673330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7266734b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726673640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7266737c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726673950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726673ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac726673c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726673de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac72666ec58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac72666ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72666d020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac72666d1a8"/>
        <function-ref name="captured" scoped="" ref="0x2ac72666d330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72666d4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72666d640"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac72666d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2ac726670c80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2ac726670c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac72666f020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac72666f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72666f330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac72666f4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac72666f640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72666f7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac72666f950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac72666fad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac72666fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2ac72666b100" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2ac72666b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac72666b450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ac72666e020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2ac72666e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72666e370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac72666e4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac72666e680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72666e808"/>
        <function-ref name="fired" scoped="" ref="0x2ac72666e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ac72666da90" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac72666da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac72666dde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac72666c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72666c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72666c330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72666c4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72666c640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac72666c7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72666c950"/>
        <function-ref name="overflow" scoped="" ref="0x2ac72666cad8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac72666cc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac72666cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2ac726683b60" loc="7:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2ac726683b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726682020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2ac726666520" loc="4:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2ac726666520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726666870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2ac726666c68" loc="5:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2ac726666c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726683020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2ac726683418" loc="6:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2ac726683418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726683768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ac7264fa130" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ac7264fa130"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ac7264fa480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ac7264176c0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2ac7264176c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ac726417a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ac7264fcb08" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2ac7264fcb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ac7264fce58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2ac72651baa8" loc="39:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2ac72651baa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2ac7266b3950"/>
        <function-ref name="initTimerB" scoped="" ref="0x2ac7266b3020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2ac7266b31a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x2ac7266b3330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2ac72651bdf8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2ac7266b34b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2ac7266b3640"/>
        <function-ref name="initClocks" scoped="" ref="0x2ac7266b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ac7266b4af0" loc="3:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubInit" scoped="" ref="0x2ac7266b4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7266b4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac7266b4460" loc="2:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac7266b4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7266b47b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ac7266ba418" loc="60:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2ac7266ba418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7266ba768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ac726510c70" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ac726510c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ac7266bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ac7266bcce0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2ac7266bcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7266ba0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ac7266bc308" loc="58:/home/wwhuang/git/tinyos-lab11/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ac7266bc308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7266bc658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ac7266bc7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ac7266bc968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ac7261efca0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2ac7261efca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac7261ae020"/>
        <function-ref name="runTask" scoped="" ref="0x2ac7261ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ac7261e8390" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ac7261e8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7261e86e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ac7261e8868"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ac7261e89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ac7264d14e8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2ac7264d14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac7264d1838"/>
        <function-ref name="runTask" scoped="" ref="0x2ac7264d19c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ac7264e7998" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2ac7264e7998"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ac7264e7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ac7264d2680" loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2ac7264d2680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7264d29d0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ac7264d2b58"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ac7264d2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ac7266e4c38" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac7266e4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac7266cf020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac7266cf1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ac7266cf330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac7266cf4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac7266cf640"/>
        <function-ref name="get" scoped="" ref="0x2ac7266cf7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac7266cf950"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac7266ce020"/>
        <function-ref name="set" scoped="" ref="0x2ac7266cfad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ac7266cfc60"/>
        <function-ref name="led2On" scoped="" ref="0x2ac7266cfde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ac7266d97c8" loc="50:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2ac7266d97c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7266d9b18"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7266d9ca0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7266d9e28"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7266df020"/>
        <function-ref name="get" scoped="" ref="0x2ac7266df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7266df330"/>
        <function-ref name="set" scoped="" ref="0x2ac7266df4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7266df640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac7266e1020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac7266e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7266e1370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ac7266df958" loc="51:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2ac7266df958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7266dfca8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7266dfe30"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7266de020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7266de1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7266de330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7266de4b8"/>
        <function-ref name="set" scoped="" ref="0x2ac7266de640"/>
        <function-ref name="clr" scoped="" ref="0x2ac7266de7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ac7266e15e8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac7266e15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac7266e1938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac7266e1ac0"/>
        <function-ref name="led1On" scoped="" ref="0x2ac7266e1c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac7266e1dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac7266e0020"/>
        <function-ref name="get" scoped="" ref="0x2ac7266e01a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac7266e0330"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac7266e0950"/>
        <function-ref name="set" scoped="" ref="0x2ac7266e04b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ac7266e0640"/>
        <function-ref name="led2On" scoped="" ref="0x2ac7266e07c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ac7266deae0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2ac7266deae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7266dee30"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7266d8020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7266d81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7266d8330"/>
        <function-ref name="get" scoped="" ref="0x2ac7266d84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7266d8640"/>
        <function-ref name="set" scoped="" ref="0x2ac7266d87c8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7266d8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ac7266fd020" loc="5:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2ac7266fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7266fd370"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7266fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7266fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7266fd808"/>
        <function-ref name="get" scoped="" ref="0x2ac7266fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7266fdb18"/>
        <function-ref name="set" scoped="" ref="0x2ac7266fdca0"/>
        <function-ref name="clr" scoped="" ref="0x2ac7266fde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ac7266fc190" loc="6:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2ac7266fc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7266fc4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7266fc668"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7266fc7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7266fc978"/>
        <function-ref name="get" scoped="" ref="0x2ac7266fcb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7266fcc88"/>
        <function-ref name="set" scoped="" ref="0x2ac7266fce10"/>
        <function-ref name="clr" scoped="" ref="0x2ac7266fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ac7266fa4a0" loc="10:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac7266fa4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7266fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ac7266fb338" loc="7:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2ac7266fb338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7266fb688"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7266fb810"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7266fb998"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7266fbb20"/>
        <function-ref name="get" scoped="" ref="0x2ac7266fbca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7266fbe30"/>
        <function-ref name="set" scoped="" ref="0x2ac7266fa020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7266fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ac726706978" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ac726706978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726706cc8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726706e50"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726705020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267051a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726705330"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267054b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726705640"/>
        <function-ref name="get" scoped="" ref="0x2ac7267057c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726705950"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726705ad8"/>
        <function-ref name="set" scoped="" ref="0x2ac726705c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726705de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726724020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267242a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726724430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ac726732568" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ac726732568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267328b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726732a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726732bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726732d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726730020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726730330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267304b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726730640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267307c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726730950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726730ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726730c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72672f020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72672f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2ac72676d7d0" loc="145:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2ac72676d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72676db20"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72676dca8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72676de30"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72676c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72676c1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72676c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72676c4b8"/>
        <function-ref name="get" scoped="" ref="0x2ac72676c640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72676c7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72676c950"/>
        <function-ref name="set" scoped="" ref="0x2ac72676cad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72676cc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72676cde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72676b120"/>
        <function-ref name="clr" scoped="" ref="0x2ac72676b2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2ac72678c558" loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2ac72678c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72678c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72678ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72678cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72678cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72678b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72678b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72678b330"/>
        <function-ref name="get" scoped="" ref="0x2ac72678b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72678b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72678b7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72678b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72678bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72678bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72678a020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72678a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2ac72676b660" loc="146:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2ac72676b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72676b9b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72676bb38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72676bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72676be48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72676a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72676a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72676a330"/>
        <function-ref name="get" scoped="" ref="0x2ac72676a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72676a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72676a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72676a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72676aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72676ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726769020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2ac72672d568" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2ac72672d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72672d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72672da40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72672dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72672dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72672c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72672c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72672c330"/>
        <function-ref name="get" scoped="" ref="0x2ac72672c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72672c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72672c7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72672c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72672cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72672cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72672b020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72672b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2ac726739568" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2ac726739568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267398b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726739a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726739bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726739d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726738020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726738330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267384b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726738640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267387c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726738950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726738ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726738c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726737020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2ac726746568" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2ac726746568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267468b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726746a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726746bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726746d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726745020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726745330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267454b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726745640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267457c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726745950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726745ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726745c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726766020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2ac726757568" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2ac726757568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267578b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726757a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726757bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726757d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726756020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726756330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267564b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726756640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267567c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726756950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726756ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726756c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726777020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2ac726787560" loc="149:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2ac726787560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267878b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726787a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726787bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726787d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726786020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726786330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267864b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726786640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267867c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726786950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726786ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726786c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726785020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2ac726798558" loc="159:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2ac726798558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267988a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726798a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726798bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726798d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726797020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726797330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726797640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267977c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726797950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726797ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726797c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726796020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2ac7267a6560" loc="171:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2ac7267a6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267a68b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267a6a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267a6bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267a6d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267a5020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267a5330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267a54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267a5640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267a57c8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267a5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267a5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267a5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267a4020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ac726720568" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ac726720568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267208b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726720a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726720bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726720d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72671f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72671f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72671f330"/>
        <function-ref name="get" scoped="" ref="0x2ac72671f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72671f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72671f7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72671f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72671fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72671fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72671e020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72671e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2ac726785560" loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2ac726785560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267858b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726785a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726785bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726785d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726784020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726784330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267844b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726784640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267847c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726784950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726784ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726784c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726783020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ac72671c568" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ac72671c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72671c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72671ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72671cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72671cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72671b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72671b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72671b330"/>
        <function-ref name="get" scoped="" ref="0x2ac72671b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72671b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72671b7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72671b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72671bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72671bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72671a020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72671a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2ac726727568" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2ac726727568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267278b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726727a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726727bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726727d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726726020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726726330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267264b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726726640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267267c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726726950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726726ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726726c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726725020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2ac726754568" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2ac726754568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267548b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726754a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726754bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726754d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726753020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726753330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267534b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726753640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267537c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726753950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726753ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726753c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726752020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2ac726761568" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2ac726761568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267618b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726761a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726761bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726761d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726760020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726760330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726760640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267607c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726760950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726760ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726760c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72675f020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72675f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2ac726773568" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2ac726773568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267738b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726773a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726773bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726773d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726772020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726772330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267724b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726772640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267727c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726772950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726772ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726772c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726771020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ac72670ac88" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ac72670ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726709020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267091a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726709330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267094b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726709640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267097c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726709950"/>
        <function-ref name="get" scoped="" ref="0x2ac726709ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726709c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726709de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726708020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267081a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726708330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267085b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726708740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ac726716568" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ac726716568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267169b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726716b40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726716cc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726716e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726715020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726715330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267154b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726715640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267157c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726715950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726715ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726715c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726734020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2ac726741568" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2ac726741568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267418b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726741a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726741bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726741d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726740020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726740330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267404b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726740640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267407c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726740950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726740ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726740c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72673f020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72673f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2ac72676f970" loc="144:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2ac72676f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72676fcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72676fe48"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72676e020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72676e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72676e330"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72676e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72676e640"/>
        <function-ref name="get" scoped="" ref="0x2ac72676e7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72676e950"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72676ead8"/>
        <function-ref name="set" scoped="" ref="0x2ac72676ec60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72676ede8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72676d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72676d2a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72676d430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2ac726792558" loc="162:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2ac726792558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267928a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726792a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726792bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726792d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726791020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726791330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267914b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726791640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267917c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726791950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726791ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726791c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726790020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2ac7267a8558" loc="169:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2ac7267a8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267a88a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267a8a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267a8bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267a8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267a7020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267a7330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267a74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267a7640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267a77c8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267a7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267a7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267a7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267a6020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2ac72677d560" loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2ac72677d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72677d8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72677da38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72677dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72677dd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72677c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72677c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72677c330"/>
        <function-ref name="get" scoped="" ref="0x2ac72677c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72677c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72677c7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72677c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72677cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72677cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72677b020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72677b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2ac72673d568" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2ac72673d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72673dab8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72673dc40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72673ddc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72673c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72673c1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72673c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72673c4b8"/>
        <function-ref name="get" scoped="" ref="0x2ac72673c640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72673c7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72673c950"/>
        <function-ref name="set" scoped="" ref="0x2ac72673cad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72673cc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72673cde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72673b120"/>
        <function-ref name="clr" scoped="" ref="0x2ac72673b2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2ac72674a568" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2ac72674a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72674a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72674aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72674abc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72674ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726749020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726749330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267494b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726749640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267497c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726749950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726749ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726749c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726748020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2ac72675b568" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2ac72675b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72675b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72675ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72675bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72675bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72675a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72675a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72675a330"/>
        <function-ref name="get" scoped="" ref="0x2ac72675a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72675a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72675a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72675a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72675aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72675ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726759020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2ac726790558" loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2ac726790558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267908a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726790a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726790bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726790d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72678f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72678f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72678f330"/>
        <function-ref name="get" scoped="" ref="0x2ac72678f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72678f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72678f7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72678f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72678fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72678fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72678e020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72678e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2ac726783558" loc="152:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2ac726783558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267838a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726783a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726783bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726783d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726782020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726782330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267824b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726782640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267827c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726782950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726782ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726782c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726781020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ac7267247f0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ac7267247f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726724b40"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726724cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726724e50"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726723020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267231a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726723330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267234b8"/>
        <function-ref name="get" scoped="" ref="0x2ac726723640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267237c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726723950"/>
        <function-ref name="set" scoped="" ref="0x2ac726723ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726723c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726723de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726722120"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267222a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ac72672f568" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ac72672f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72672f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72672fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72672fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72672fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72672e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72672e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72672e330"/>
        <function-ref name="get" scoped="" ref="0x2ac72672e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72672e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72672e7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72672e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72672ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72672ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72672d020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72672d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2ac72675f568" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2ac72675f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72675f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72675fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72675fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72675fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72675e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72675e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72675e330"/>
        <function-ref name="get" scoped="" ref="0x2ac72675e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72675e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72675e7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72675e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72675ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72675ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72675d020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72675d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2ac72672b568" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2ac72672b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72672b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72672ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72672bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72672bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72672a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72672a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72672a330"/>
        <function-ref name="get" scoped="" ref="0x2ac72672a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72672a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72672a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72672a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72672aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72672ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726729020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2ac726737568" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2ac726737568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267378b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726737a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726737bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726737d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726736020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726736330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267364b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726736640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267367c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726736950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726736ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726736c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726735020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2ac726766568" loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2ac726766568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267668b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726766a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726766bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726766d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726764020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726764330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726764640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267647c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726764950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726764ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726764c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726763020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2ac726777568" loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2ac726777568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267778b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726777a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726777bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726777d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726776020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726776330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267764b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726776640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267767c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726776950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726776ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726776c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726775020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2ac72677f560" loc="154:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2ac72677f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72677f8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72677fa38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72677fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72677fd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72677e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72677e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72677e330"/>
        <function-ref name="get" scoped="" ref="0x2ac72677e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72677e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72677e7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72677e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72677ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72677ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72677d020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72677d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ac7266f6020" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ac7266f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7266f6370"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7266f64f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7266f6680"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7266f6808"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7266f6990"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7266f6b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7266f6ca0"/>
        <function-ref name="get" scoped="" ref="0x2ac7266f6e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7266f5020"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7266f51a8"/>
        <function-ref name="set" scoped="" ref="0x2ac7266f5330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7266f54b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7266f5640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7266f58c8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7266f5a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ac72671a568" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ac72671a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72671a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72671aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72671abc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72671ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726719020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726719330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267194b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726719640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267197c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726719950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726719ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726719c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726718020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2ac726725568" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2ac726725568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267258b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726725a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726725bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726725d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726744020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726744330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267444b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726744640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267447c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726744950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726744ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726744c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726743020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2ac726752568" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2ac726752568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267528b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726752a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726752bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726752d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726751020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267511a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726751330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267514b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726751640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267517c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726751950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726751ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726751c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726750020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2ac72677b560" loc="156:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2ac72677b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72677b8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72677ba38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72677bbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72677bd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726779020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726779330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267794b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726779640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267797c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726779950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726779ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726779c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726778020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2ac726796558" loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2ac726796558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267968a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726796a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726796bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726796d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726795020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726795330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267954b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726795640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267957c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726795950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726795ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726795c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726794020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2ac72678a558" loc="166:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2ac72678a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72678a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72678aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72678abb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72678ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726789020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726789330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267894b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726789640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267897c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726789950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726789ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726789c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267aa020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2ac72674e568" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2ac72674e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72674e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72674ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72674ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72674ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72674d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72674d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72674d330"/>
        <function-ref name="get" scoped="" ref="0x2ac72674d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72674d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72674d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72674d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72674dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72674dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72674c020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72674c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2ac726778560" loc="157:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2ac726778560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267788b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726778a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726778bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726778d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726799020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726799330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726799640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267997c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726799950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726799ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726799c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726798020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ac726708b00" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ac726708b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726708e50"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726707020"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267071a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726707330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267074b8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726707640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267077c8"/>
        <function-ref name="get" scoped="" ref="0x2ac726707950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726707ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726707c60"/>
        <function-ref name="set" scoped="" ref="0x2ac726707de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726706020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267061a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726706430"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267065b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ac726734568" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ac726734568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267348b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726734a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726734bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726734d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726733020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726733330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267334b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726733640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267337c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726733950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726733ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726733c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726732020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2ac72673f568" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2ac72673f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72673f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72673fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72673fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72673fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72673e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72673e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72673e330"/>
        <function-ref name="get" scoped="" ref="0x2ac72673e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72673e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72673e7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72673e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72673ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72673ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72673d020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72673d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2ac726781560" loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2ac726781560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267818b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726781a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726781bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726781d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726780020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726780330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267804b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726780640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267807c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726780950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726780ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726780c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72677f020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72677f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2ac72678e558" loc="164:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2ac72678e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72678e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72678ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72678ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72678ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72678d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72678d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72678d330"/>
        <function-ref name="get" scoped="" ref="0x2ac72678d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72678d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72678d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72678d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72678dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72678dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72678c020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72678c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2ac72673b668" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2ac72673b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72673b9b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72673bb40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72673bcc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72673be50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72673a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72673a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72673a330"/>
        <function-ref name="get" scoped="" ref="0x2ac72673a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72673a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72673a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72673a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72673aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72673ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726739020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2ac726748568" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2ac726748568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267488b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726748a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726748bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726748d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726747020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726747330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267474b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726747640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267477c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726747950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726747ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726747c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726746020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2ac726759568" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2ac726759568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267598b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726759a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726759bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726759d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726758020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726758330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267584b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726758640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267587c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726758950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726758ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726758c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726757020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ac726722668" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ac726722668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267229b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726722b40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726722cc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726722e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726721020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726721330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267214b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726721640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267217c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726721950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726721ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726721c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726720020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2ac72675d568" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2ac72675d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72675d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72675da40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72675dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72675dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72675c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72675c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72675c330"/>
        <function-ref name="get" scoped="" ref="0x2ac72675c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72675c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72675c7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72675c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72675cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72675cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72675b020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72675b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ac72671e568" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ac72671e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72671e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72671ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72671ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72671ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72671d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72671d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72671d330"/>
        <function-ref name="get" scoped="" ref="0x2ac72671d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72671d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72671d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72671d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72671dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72671dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72671c020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72671c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2ac726729568" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2ac726729568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267298b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726729a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726729bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726729d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726728020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726728330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267284b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726728640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267287c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726728950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726728ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726728c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726727020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2ac726735568" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2ac726735568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267358b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726735a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726735bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726735d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726755020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726755330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267554b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726755640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267557c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726755950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726755ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726755c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726754020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2ac726763568" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2ac726763568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267638b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726763a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726763bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726763d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726762020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726762330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726762640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267627c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726762950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726762ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726762c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726761020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2ac726775568" loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2ac726775568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267758b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726775a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726775bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726775d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726774020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726774330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267744b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726774640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267747c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726774950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726774ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726774c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726773020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ac7266f5e10" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ac7266f5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72670b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72670b330"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72670b4b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72670b640"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72670b7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72670b950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72670bad8"/>
        <function-ref name="get" scoped="" ref="0x2ac72670bc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72670bde8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72670a020"/>
        <function-ref name="set" scoped="" ref="0x2ac72670a1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72670a330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72670a4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72670a740"/>
        <function-ref name="clr" scoped="" ref="0x2ac72670a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ac726718568" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ac726718568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267188b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726718a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726718bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726718d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726717020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726717330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267174b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726717640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267177c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726717950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726717ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726717c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726716020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2ac726743568" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2ac726743568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267438b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726743a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726743bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726743d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726742020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726742330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267424b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726742640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267427c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726742950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726742ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726742c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726741020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2ac726750568" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2ac726750568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267508b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726750a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726750bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726750d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72674f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72674f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72674f330"/>
        <function-ref name="get" scoped="" ref="0x2ac72674f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72674f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72674f7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72674f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72674fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72674fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72674e020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72674e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2ac726767548" loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2ac726767548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726767898"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726767a20"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726767ba8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726767d30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726788020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726788330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267884b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726788640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267887c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726788950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726788ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726788c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726787020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2ac726794558" loc="161:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2ac726794558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267948a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726794a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726794bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726794d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726793020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726793330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267934b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726793640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267937c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726793950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726793ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726793c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726792020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2ac726769560" loc="147:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2ac726769560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267698b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726769a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726769bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726769d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726768020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726768330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726768640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267687c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726768950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726768ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726768c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726767020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2ac72674c568" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2ac72674c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72674c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72674ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72674cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72674cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72674b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72674b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72674b330"/>
        <function-ref name="get" scoped="" ref="0x2ac72674b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72674b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72674b7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72674b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72674bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72674bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72674a020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72674a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2ac7267aa558" loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2ac7267aa558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267aa8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267aaa30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267aabb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267aad40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267a9020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267a91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267a9330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267a94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267a9640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267a97c8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267a9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267a9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267a9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267a8020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2ac7267a4568" loc="172:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2ac7267a4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267a48b8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267a4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267a4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267a4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267a3020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267a3330"/>
        <function-ref name="get" scoped="" ref="0x2ac7267a34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267a3640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267a37c8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267a3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267a3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267a3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267a2020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2ac7267715b8" loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2ac7267715b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726771d08"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726770020"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267701a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726770330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267704b8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726770640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267707c8"/>
        <function-ref name="get" scoped="" ref="0x2ac726770950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726770ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726770c60"/>
        <function-ref name="set" scoped="" ref="0x2ac726770de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72676f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72676f1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72676f430"/>
        <function-ref name="clr" scoped="" ref="0x2ac72676f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267a0e18" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267a0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267be1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267be330"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267be4b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267be640"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267be7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267be950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267bead8"/>
        <function-ref name="get" scoped="" ref="0x2ac7267bec60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267bede8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267bd020"/>
        <function-ref name="set" scoped="" ref="0x2ac7267bd1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267bd330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267bd4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267bd740"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267bd8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267dd478" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267dd478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267dd7c8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267dd950"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267ddad8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267ddc60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267ddde8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267dc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267dc1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7267dc330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267dc4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267dc640"/>
        <function-ref name="set" scoped="" ref="0x2ac7267dc7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267dc950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267dcad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267dcd60"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267d9ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267d9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267d7020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267d71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267d7330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267d74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267d7640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267d77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267d7950"/>
        <function-ref name="get" scoped="" ref="0x2ac7267d7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267d7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267d7de8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267d6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267d61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267d6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267d65b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267d6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267d33d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267d33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267d3728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267d38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267d3a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267d3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267d3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267d2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267d21a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7267d2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267d24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267d2640"/>
        <function-ref name="set" scoped="" ref="0x2ac7267d27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267d2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267d2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267d2d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267cfca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267cfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267ce020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267ce1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267ce330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267ce4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267ce640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267ce7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267ce950"/>
        <function-ref name="get" scoped="" ref="0x2ac7267cead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267cec60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267cede8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267cd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267cd1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267cd330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267cd5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267cd740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267ee3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267ee3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267ee728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267ee8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267eea38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267eebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267eed48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267ed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267ed1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7267ed330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267ed4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267ed640"/>
        <function-ref name="set" scoped="" ref="0x2ac7267ed7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267ed950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267edad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267edd60"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267eaca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267eaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267e9020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267e91a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267e9330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267e94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267e9640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267e97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267e9950"/>
        <function-ref name="get" scoped="" ref="0x2ac7267e9ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267e9c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267e9de8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267e8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267e81a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267e8330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267e85b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267e8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267e53d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267e53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267e5728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267e58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267e5a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267e5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267e5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267e41a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7267e4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267e44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267e4640"/>
        <function-ref name="set" scoped="" ref="0x2ac7267e47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267e4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267e4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267e4d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267e1ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267e1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267e0020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267e01a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267e0330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267e04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267e0640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267e07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267e0950"/>
        <function-ref name="get" scoped="" ref="0x2ac7267e0ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267e0c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267e0de8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267df020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267df1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267df330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267df5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267df740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268003d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268003d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726800728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268008b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726800a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726800bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726800d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267ff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267ff1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7267ff330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267ff4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267ff640"/>
        <function-ref name="set" scoped="" ref="0x2ac7267ff7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267ff950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267ffad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267ffd60"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267fbca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267fbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267fa020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267fa1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267fa330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267fa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267fa640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267fa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267fa950"/>
        <function-ref name="get" scoped="" ref="0x2ac7267faad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267fac60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267fade8"/>
        <function-ref name="set" scoped="" ref="0x2ac7267f9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267f91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267f9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267f95b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267f9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267f63d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267f63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267f6728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267f68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267f6a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267f6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267f6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267f51a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7267f5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267f54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267f5640"/>
        <function-ref name="set" scoped="" ref="0x2ac7267f57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7267f5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7267f5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7267f5d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac7267f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7267f2d08" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7267f2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7267f10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7267f1228"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7267f13b0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7267f1538"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7267f16c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7267f1848"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7267f19d0"/>
        <function-ref name="get" scoped="" ref="0x2ac7267f1b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7267f1ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7267f1e68"/>
        <function-ref name="set" scoped="" ref="0x2ac726814020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268141a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726814330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268145b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726814740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268113d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268113d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726811728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268118b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726811a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726811bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726811d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726810020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268101a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726810330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268104b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726810640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268107c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726810950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726810ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726810d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac72680f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72680dca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72680dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72680c020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72680c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72680c330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72680c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72680c640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72680c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72680c950"/>
        <function-ref name="get" scoped="" ref="0x2ac72680cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72680cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72680cde8"/>
        <function-ref name="set" scoped="" ref="0x2ac72680b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72680b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72680b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72680b5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72680b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268083d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268083d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726808728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268088b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726808a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726808bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726808d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726807020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268071a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726807330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268074b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726807640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268077c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726807950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726807ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726807d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726806020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726804ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726804ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726803020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268031a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726803330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726803640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726803950"/>
        <function-ref name="get" scoped="" ref="0x2ac726803ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726803c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726803de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726826020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268261a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726826330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268265b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726826740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268233d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268233d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726823728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268238b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726823a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726823bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726823d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726821020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268211a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726821330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268214b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726821640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268217c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726821950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726821ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726821d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726820020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72681eca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72681eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72681d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72681d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72681d330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72681d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72681d640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72681d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72681d950"/>
        <function-ref name="get" scoped="" ref="0x2ac72681dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72681dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72681dde8"/>
        <function-ref name="set" scoped="" ref="0x2ac72681c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72681c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72681c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72681c5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72681c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268193d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268193d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726819728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268198b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726819a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726819bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726819d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726818020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268181a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726818330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268184b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726818640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268187c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726818950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726818ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726818d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726817020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726815ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726815ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726838020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268381a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726838330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268384b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726838640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268387c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726838950"/>
        <function-ref name="get" scoped="" ref="0x2ac726838ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726838c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726838de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726837020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268371a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726837330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268375b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726837740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268343d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268343d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726834728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268348b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726834a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726834bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726834d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726833020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268331a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726833330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268334b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726833640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268337c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726833950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726833ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726833d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726832020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726830ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726830ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72682f020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72682f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72682f330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72682f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72682f640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72682f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72682f950"/>
        <function-ref name="get" scoped="" ref="0x2ac72682fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72682fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72682fde8"/>
        <function-ref name="set" scoped="" ref="0x2ac72682e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72682e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72682e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72682e5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72682e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72682b3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72682b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72682b728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72682b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72682ba38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72682bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72682bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72682a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72682a1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72682a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72682a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72682a640"/>
        <function-ref name="set" scoped="" ref="0x2ac72682a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72682a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72682aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72682ad60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726829020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726827dd8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726827dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72684a170"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72684a2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72684a480"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72684a608"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72684a790"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72684a918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72684aaa0"/>
        <function-ref name="get" scoped="" ref="0x2ac72684ac28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72684adb0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726849020"/>
        <function-ref name="set" scoped="" ref="0x2ac7268491a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726849330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7268494b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726849740"/>
        <function-ref name="clr" scoped="" ref="0x2ac7268498c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726846478" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726846478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7268467c8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726846950"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726846ad8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726846c60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726846de8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726844020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268441a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726844330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268444b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726844640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268447c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726844950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726844ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726844d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726843020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726841ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726841ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726840020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268401a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726840330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268404b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726840640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268407c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726840950"/>
        <function-ref name="get" scoped="" ref="0x2ac726840ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726840c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726840de8"/>
        <function-ref name="set" scoped="" ref="0x2ac72683f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72683f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72683f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72683f5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72683f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72683c3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72683c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72683c728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72683c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72683ca38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72683cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72683cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72683b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72683b1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72683b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72683b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72683b640"/>
        <function-ref name="set" scoped="" ref="0x2ac72683b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72683b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72683bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72683bd60"/>
        <function-ref name="clr" scoped="" ref="0x2ac72683a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72685dca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72685dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72685c020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72685c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72685c330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72685c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72685c640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72685c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72685c950"/>
        <function-ref name="get" scoped="" ref="0x2ac72685cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72685cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72685cde8"/>
        <function-ref name="set" scoped="" ref="0x2ac72685b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72685b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72685b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72685b5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72685b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268583d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268583d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726858728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268588b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726858a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726858bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726858d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726857020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268571a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726857330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268574b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726857640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268577c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726857950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726857ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726857d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726856020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726854ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726854ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726853020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268531a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726853330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268534b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726853640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268537c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726853950"/>
        <function-ref name="get" scoped="" ref="0x2ac726853ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726853c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726853de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726852020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268521a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726852330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268525b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726852740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72684f3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72684f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72684f728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72684f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72684fa38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72684fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72684fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72684e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72684e1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72684e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72684e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72684e640"/>
        <function-ref name="set" scoped="" ref="0x2ac72684e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72684e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72684ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72684ed60"/>
        <function-ref name="clr" scoped="" ref="0x2ac72684d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72684bca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72684bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726870020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268701a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726870330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268704b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726870640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268707c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726870950"/>
        <function-ref name="get" scoped="" ref="0x2ac726870ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726870c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726870de8"/>
        <function-ref name="set" scoped="" ref="0x2ac72686f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72686f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72686f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72686f5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72686f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72686b3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72686b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72686b728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72686b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72686ba38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72686bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72686bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72686a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72686a1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72686a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72686a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72686a640"/>
        <function-ref name="set" scoped="" ref="0x2ac72686a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72686a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72686aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72686ad60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726869020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726867ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726867ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726866020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268661a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726866330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268664b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726866640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268667c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726866950"/>
        <function-ref name="get" scoped="" ref="0x2ac726866ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726866c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726866de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726865020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268651a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726865330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268655b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726865740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268623d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268623d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726862728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268628b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726862a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726862bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726862d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726861020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268611a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726861330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268614b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726861640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268617c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726861950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726861ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726861d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726860020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72685eca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72685eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726883020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268831a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726883330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268834b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726883640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268837c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726883950"/>
        <function-ref name="get" scoped="" ref="0x2ac726883ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726883c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726883de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726882020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268821a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726882330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268825b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726882740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72687f3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72687f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72687f728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72687f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72687fa38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72687fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72687fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72687e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72687e1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72687e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72687e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72687e640"/>
        <function-ref name="set" scoped="" ref="0x2ac72687e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72687e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72687ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72687ed60"/>
        <function-ref name="clr" scoped="" ref="0x2ac72687d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72687bca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72687bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72687a020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72687a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72687a330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72687a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72687a640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72687a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72687a950"/>
        <function-ref name="get" scoped="" ref="0x2ac72687aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72687ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72687ade8"/>
        <function-ref name="set" scoped="" ref="0x2ac726879020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268791a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726879330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268795b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726879740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268763d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268763d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726876728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268768b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726876a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726876bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726876d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726875020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268751a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726875330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268754b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726875640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268757c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726875950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726875ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726875d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726874020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726872ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726872ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726896020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268961a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726896330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268964b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726896640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268967c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726896950"/>
        <function-ref name="get" scoped="" ref="0x2ac726896ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726896c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726896de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726895020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268951a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726895330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268955b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726895740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268923d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268923d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726892728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268928b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726892a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726892bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726892d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726891020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268911a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726891330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268914b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726891640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268917c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726891950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726891ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726891d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726890020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72688eca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72688eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72688d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72688d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72688d330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72688d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72688d640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72688d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72688d950"/>
        <function-ref name="get" scoped="" ref="0x2ac72688dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72688dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72688dde8"/>
        <function-ref name="set" scoped="" ref="0x2ac72688c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72688c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72688c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72688c5b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72688c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268893d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268893d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726889728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268898b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726889a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726889bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726889d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726888020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268881a8"/>
        <function-ref name="get" scoped="" ref="0x2ac726888330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268884b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726888640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268887c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726888950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726888ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726888d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac726887020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac726885ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac726885ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726884020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268841a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726884330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268844b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726884640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268847c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726884950"/>
        <function-ref name="get" scoped="" ref="0x2ac726884ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726884c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726884de8"/>
        <function-ref name="set" scoped="" ref="0x2ac7268a9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268a91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7268a9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268a95b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7268a9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268a63d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268a63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7268a6728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268a68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7268a6a38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268a6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7268a6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268a51a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7268a5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268a54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7268a5640"/>
        <function-ref name="set" scoped="" ref="0x2ac7268a57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268a5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7268a5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268a5d60"/>
        <function-ref name="clr" scoped="" ref="0x2ac7268a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac7268a2ca0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac7268a2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7268a1020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7268a11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac7268a1330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7268a14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7268a1640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7268a17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7268a1950"/>
        <function-ref name="get" scoped="" ref="0x2ac7268a1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7268a1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7268a1de8"/>
        <function-ref name="set" scoped="" ref="0x2ac7268a0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7268a01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7268a0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7268a05b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac7268a0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ac72689d3d8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2ac72689d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72689d728"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72689d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72689da38"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72689dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72689dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72689c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72689c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72689c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72689c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72689c640"/>
        <function-ref name="set" scoped="" ref="0x2ac72689c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72689c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72689cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72689cd60"/>
        <function-ref name="clr" scoped="" ref="0x2ac72689b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac726916da0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726916da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726915170"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7269152f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726915480"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726915608"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726915790"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726915918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726915aa0"/>
        <function-ref name="get" scoped="" ref="0x2ac726915c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726915db0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726914020"/>
        <function-ref name="set" scoped="" ref="0x2ac7269141a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726914330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7269144b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726914740"/>
        <function-ref name="clr" scoped="" ref="0x2ac7269148c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac7268ffc30" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac7268ffc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726916020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7269161a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726916330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7269164b8"/>
        <function-ref name="get" scoped="" ref="0x2ac726916640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7269167c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726916950"/>
        <function-ref name="clr" scoped="" ref="0x2ac726916ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac7269115f8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac7269115f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726911948"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726911ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726911c58"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726911de0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726910020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7269101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726910330"/>
        <function-ref name="get" scoped="" ref="0x2ac7269104b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726910640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7269107c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726910950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726910ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726910c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72690f020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72690f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac726912448" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726912448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726912798"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726912920"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726912aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726912c30"/>
        <function-ref name="get" scoped="" ref="0x2ac726912db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726911020"/>
        <function-ref name="set" scoped="" ref="0x2ac7269111a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726911330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac72690de20" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac72690de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72690c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72690c330"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72690c4b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72690c640"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72690c7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72690c950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72690cad8"/>
        <function-ref name="get" scoped="" ref="0x2ac72690cc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72690cde8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72690b020"/>
        <function-ref name="set" scoped="" ref="0x2ac72690b1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72690b330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72690b4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72690b740"/>
        <function-ref name="clr" scoped="" ref="0x2ac72690b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac72690ecf0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac72690ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72690d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72690d228"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72690d3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72690d538"/>
        <function-ref name="get" scoped="" ref="0x2ac72690d6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72690d848"/>
        <function-ref name="set" scoped="" ref="0x2ac72690d9d0"/>
        <function-ref name="clr" scoped="" ref="0x2ac72690db58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Adc0" ref="0x2ac726978518" loc="16:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Adc0" scoped="" ref="0x2ac726978518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726978868"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7269789f0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726978b78"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726978d00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726977020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7269771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726977330"/>
        <function-ref name="get" scoped="" ref="0x2ac7269774b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726977640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7269777c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726977950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726977ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726977c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726976020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7269761a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ac726a03528" loc="20:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ac726a03528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ac726a03878"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ac726a03a00"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ac726a03b88"/>
        <function-ref name="syncDone" scoped="" ref="0x2ac726a03d10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ac726998020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ac7269981a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2ac726998330"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ac7269984b8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ac726998640"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ac7269987c8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ac726998950"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ac726998ad8"/>
        <function-ref name="sync" scoped="" ref="0x2ac726998c60"/>
        <function-ref name="getChannel" scoped="" ref="0x2ac7269ed020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ac7269ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UltrasonicCapture" ref="0x2ac726a02a00" loc="22:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UltrasonicCapture" scoped="" ref="0x2ac726a02a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726a02d50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac726a01020"/>
        <function-ref name="captured" scoped="" ref="0x2ac726a011a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726a01330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726a014b8"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac726a01640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFDCapGpIO" ref="0x2ac726980550" loc="12:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFDCapGpIO" scoped="" ref="0x2ac726980550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7269808a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726980a28"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726980bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726980d38"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72697f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72697f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72697f330"/>
        <function-ref name="get" scoped="" ref="0x2ac72697f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72697f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72697f7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72697f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72697fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72697fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72697e020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72697e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ac7269fd298" loc="26:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2ac7269fd298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ac7269fd5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCapGpIO" ref="0x2ac72696b540" loc="11:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCapGpIO" scoped="" ref="0x2ac72696b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72696b890"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72696ba18"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72696bba0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72696bd28"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726981020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7269811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726981330"/>
        <function-ref name="get" scoped="" ref="0x2ac7269814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726981640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7269817c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726981950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726981ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726981c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726980020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7269801a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ac7269ec278" loc="19:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ac7269ec278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7269ec5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7269ec750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7269ec8d8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7269eca60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7269ecbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxTimer" ref="0x2ac7269507f0" loc="6:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RxTimer" scoped="" ref="0x2ac7269507f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac72694ea18"/>
        <function-ref name="fired" scoped="" ref="0x2ac72695b158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac72695be48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac72695b9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ac72694d2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ac72694ee68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac72695b5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac726933370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac72694e448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac726933810"/>
        <function-ref name="stop" scoped="" ref="0x2ac726933cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxGate" ref="0x2ac72697a528" loc="15:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxGate" scoped="" ref="0x2ac72697a528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72697a878"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72697aa00"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72697ab88"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72697ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726979020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7269791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726979330"/>
        <function-ref name="get" scoped="" ref="0x2ac7269794b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726979640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7269797c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726979950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726979ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726979c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726978020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7269781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFDLatch" ref="0x2ac72697e540" loc="13:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFDLatch" scoped="" ref="0x2ac72697e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72697e890"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72697ea18"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72697eba0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72697ed28"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72697d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72697d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72697d330"/>
        <function-ref name="get" scoped="" ref="0x2ac72697d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72697d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72697d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72697d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72697dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72697dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72697c020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72697c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RfControl" ref="0x2ac7269994e8" loc="18:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RfControl" scoped="" ref="0x2ac7269994e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ac726999938"/>
        <function-ref name="stopDone" scoped="" ref="0x2ac726999ac0"/>
        <function-ref name="start" scoped="" ref="0x2ac726999c48"/>
        <function-ref name="stop" scoped="" ref="0x2ac726999dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimingLatch" ref="0x2ac726976558" loc="17:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimingLatch" scoped="" ref="0x2ac726976558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7269768a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726976a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726976bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726976d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726975020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7269751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726975330"/>
        <function-ref name="get" scoped="" ref="0x2ac7269754b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726975640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7269757c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726975950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726975ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726975c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726974020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7269741a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFDCapture" ref="0x2ac726a00e50" loc="24:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFDCapture" scoped="" ref="0x2ac726a00e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac7269ff1e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac7269ff370"/>
        <function-ref name="captured" scoped="" ref="0x2ac7269ff4f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7269ff680"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7269ff808"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac7269ff990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcTimer" ref="0x2ac726948ac8" loc="8:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcTimer" scoped="" ref="0x2ac726948ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac72696ed60"/>
        <function-ref name="fired" scoped="" ref="0x2ac726970470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac72696e1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac726970d10"/>
        <function-ref name="getdt" scoped="" ref="0x2ac72696d648"/>
        <function-ref name="gett0" scoped="" ref="0x2ac72696d1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac7269708c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac726947658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac72696e790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac726947af8"/>
        <function-ref name="stop" scoped="" ref="0x2ac726970020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TxRxSel" ref="0x2ac72697c530" loc="14:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TxRxSel" scoped="" ref="0x2ac72697c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72697c880"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72697ca08"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72697cb90"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72697cd18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72697b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72697b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72697b330"/>
        <function-ref name="get" scoped="" ref="0x2ac72697b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72697b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72697b7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72697b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72697bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72697bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72697a020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72697a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCapControl" ref="0x2ac7269ed558" loc="21:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCapControl" scoped="" ref="0x2ac7269ed558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac7269ed8a8"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7269eda30"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7269edbb8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7269edd40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726a02020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726a021a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726a02330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726a024b8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726a02640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x2ac7269827c0" loc="10:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x2ac7269827c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726982b10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726982c98"/>
        <function-ref name="request" scoped="" ref="0x2ac726982e20"/>
        <function-ref name="granted" scoped="" ref="0x2ac72696b020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac72696b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac7269fd860" loc="27:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac7269fd860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac7269fdbb0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac7269fdd38"/>
        <function-ref name="led1On" scoped="" ref="0x2ac7269fc020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac7269fc1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac7269fc330"/>
        <function-ref name="get" scoped="" ref="0x2ac7269fc4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac7269fc640"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac7269fcc60"/>
        <function-ref name="set" scoped="" ref="0x2ac7269fc7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2ac7269fc950"/>
        <function-ref name="led2On" scoped="" ref="0x2ac7269fcad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="start_radio" ref="0x2ac7269f7020" loc="40:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="start_radio" scoped="" ref="0x2ac7269f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac7269f7370"/>
        <function-ref name="runTask" scoped="" ref="0x2ac7269f74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RfTimer" ref="0x2ac72694d8c8" loc="7:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RfTimer" scoped="" ref="0x2ac72694d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac726949bc0"/>
        <function-ref name="fired" scoped="" ref="0x2ac72694b238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac726949020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac72694bad8"/>
        <function-ref name="getdt" scoped="" ref="0x2ac7269484d8"/>
        <function-ref name="gett0" scoped="" ref="0x2ac726948088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac72694b688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac72694c458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac7269495f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac72694c8f8"/>
        <function-ref name="stop" scoped="" ref="0x2ac72694cd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadSingleChannel" ref="0x2ac72695c5c8" loc="9:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadSingleChannel" scoped="" ref="0x2ac72695c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ac72695c918"/>
        <function-ref name="configureSingle" scoped="" ref="0x2ac72695caa0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x2ac72695cc28"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x2ac72695cdb0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x2ac72696c020"/>
        <function-ref name="configureMultiple" scoped="" ref="0x2ac72696c1a8"/>
        <function-ref name="singleDataReady" scoped="" ref="0x2ac72696c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFDCapControl" ref="0x2ac726a01a08" loc="23:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFDCapControl" scoped="" ref="0x2ac726a01a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726a01d58"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726a00020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726a001a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726a00330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726a004b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726a00640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726a007c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726a00950"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726a00ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerB" ref="0x2ac7269ffcc8" loc="25:OpoADCTestP.nc">
      <component-ref qname="OpoADCTestP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2ac7269ffcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac7269fe0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac7269fe228"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac7269fe3b0"/>
        <function-ref name="get" scoped="" ref="0x2ac7269fe538"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7269fe6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7269fe848"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7269fe9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7269feb58"/>
        <function-ref name="overflow" scoped="" ref="0x2ac7269fece0"/>
        <function-ref name="setMode" scoped="" ref="0x2ac7269fee68"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac7269fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x2ac726bcbb98" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <component-ref qname="OpoADCTestC.OpoADC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x2ac726bcbb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ac726bca020"/>
        <function-ref name="configure" scoped="" ref="0x2ac726bca1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2ac726bca330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x2ac726bccbd8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <component-ref qname="OpoADCTestC.OpoADC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x2ac726bccbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ac726bcb020"/>
        <function-ref name="configureSingle" scoped="" ref="0x2ac726bcb1a8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x2ac726bcb330"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x2ac726bcb4b8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x2ac726bcb640"/>
        <function-ref name="configureMultiple" scoped="" ref="0x2ac726bcb7c8"/>
        <function-ref name="singleDataReady" scoped="" ref="0x2ac726bcb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x2ac726bca578" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <component-ref qname="OpoADCTestC.OpoADC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x2ac726bca578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x2ac726bca8c8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x2ac726bcaa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac726bcc020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ClientC.nc">
      <component-ref qname="OpoADCTestC.OpoADC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac726bcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726bcc370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726bcc4f8"/>
        <function-ref name="request" scoped="" ref="0x2ac726bcc680"/>
        <function-ref name="granted" scoped="" ref="0x2ac726bcc808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726bcc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x2ac726a60758" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x2ac726a60758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ac726a60aa8"/>
        <function-ref name="configure" scoped="" ref="0x2ac726a60c30"/>
        <function-ref name="dataReady" scoped="" ref="0x2ac726a60db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x2ac726a5ad10" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x2ac726a5ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac726a5d0a0"/>
        <function-ref name="stop" scoped="" ref="0x2ac726a5d228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x2ac726a5f708" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2ac726a5f708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x2ac726a5fa58"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x2ac726a5fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x2ac726a611c8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x2ac726a611c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ac726a61518"/>
        <function-ref name="configureSingle" scoped="" ref="0x2ac726a616a0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x2ac726a61828"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x2ac726a619b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x2ac726a61b38"/>
        <function-ref name="configureMultiple" scoped="" ref="0x2ac726a61cc0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x2ac726a61e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac726a3de20" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac726a3de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726a341a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726a34330"/>
        <function-ref name="request" scoped="" ref="0x2ac726a344b8"/>
        <function-ref name="granted" scoped="" ref="0x2ac726a34640"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726a347c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x2ac726a56348" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x2ac726a56348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ac726a56698"/>
        <function-ref name="configure" scoped="" ref="0x2ac726a56820"/>
        <function-ref name="dataReady" scoped="" ref="0x2ac726a569a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x2ac726a72620" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x2ac726a72620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x2ac726a72970"/>
        <function-ref name="getMCtl" scoped="" ref="0x2ac726a72af8"/>
        <function-ref name="resetIFGs" scoped="" ref="0x2ac726a72c80"/>
        <function-ref name="isBusy" scoped="" ref="0x2ac726a72e08"/>
        <function-ref name="conversionDone" scoped="" ref="0x2ac726a51020"/>
        <function-ref name="getCtl1" scoped="" ref="0x2ac726a511a8"/>
        <function-ref name="setMCtl" scoped="" ref="0x2ac726a51330"/>
        <function-ref name="startConversion" scoped="" ref="0x2ac726a514b8"/>
        <function-ref name="setCtl0" scoped="" ref="0x2ac726a51640"/>
        <function-ref name="getMem" scoped="" ref="0x2ac726a517c8"/>
        <function-ref name="setIEFlags" scoped="" ref="0x2ac726a51950"/>
        <function-ref name="getIEFlags" scoped="" ref="0x2ac726a51ad8"/>
        <function-ref name="stopConversion" scoped="" ref="0x2ac726a51c60"/>
        <function-ref name="enableConversion" scoped="" ref="0x2ac726a4f020"/>
        <function-ref name="setCtl1" scoped="" ref="0x2ac726a4f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x2ac726a64938" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2ac726a64938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726a64c88"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726a64e10"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726a63020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726a631a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726a63330"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726a634b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726a63640"/>
        <function-ref name="get" scoped="" ref="0x2ac726a637c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726a63950"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726a63ad8"/>
        <function-ref name="set" scoped="" ref="0x2ac726a63c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726a63de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726a62020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726a622a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726a62430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x2ac726a6c0c0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2ac726a6c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726a6c410"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac726a6c598"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726a6c720"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726a6c8a8"/>
        <function-ref name="fired" scoped="" ref="0x2ac726a6ca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x2ac726a70b68" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2ac726a70b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726a6f020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726a6f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726a6f330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726a6f4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726a6f640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726a6f7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726a6f950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726a6fad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726a6fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x2ac726a53020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x2ac726a53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac726a53370"/>
        <function-ref name="stop" scoped="" ref="0x2ac726a534f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x2ac726a68c48" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2ac726a68c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726a67020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726a671a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726a67330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726a674b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726a67640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726a677c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726a67950"/>
        <function-ref name="get" scoped="" ref="0x2ac726a67ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726a67c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726a67de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726a66020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726a661a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726a66330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726a665b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726a66740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x2ac726a54270" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2ac726a54270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x2ac726a545c0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x2ac726a54748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x2ac726a8c528" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2ac726a8c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726a8c878"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726a8ca00"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726a8cb88"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726a8cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726a8b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726a8b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726a8b330"/>
        <function-ref name="get" scoped="" ref="0x2ac726a8b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726a8b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726a8b7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726a8b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726a8bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726a8bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726a8a020"/>
        <function-ref name="clr" scoped="" ref="0x2ac726a8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x2ac726a6cdb0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2ac726a6cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726a6b2e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726a6b470"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726a6b5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726a6b780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726a6b908"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726a6ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726a6bc18"/>
        <function-ref name="get" scoped="" ref="0x2ac726a6bda0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726a6a020"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726a6a1a8"/>
        <function-ref name="set" scoped="" ref="0x2ac726a6a330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726a6a4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726a6a640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726a6a8c8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726a6aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac726a58110" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac726a58110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726a58460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x2ac726a627b0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2ac726a627b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726a62b00"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726a62c88"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726a62e10"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726a8f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726a8f1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726a8f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726a8f4b8"/>
        <function-ref name="get" scoped="" ref="0x2ac726a8f640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726a8f7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726a8f950"/>
        <function-ref name="set" scoped="" ref="0x2ac726a8fad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726a8fc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726a8fde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726a8e120"/>
        <function-ref name="clr" scoped="" ref="0x2ac726a8e2a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x2ac726a4f4e0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2ac726a4f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726a4f830"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726a4f9b8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726a4fb40"/>
        <function-ref name="get" scoped="" ref="0x2ac726a4fcc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726a4fe50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726a70020"/>
        <function-ref name="getMode" scoped="" ref="0x2ac726a701a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726a70330"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726a704b8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac726a70640"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726a707c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x2ac726a52060" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x2ac726a52060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ac726a523b0"/>
        <function-ref name="userId" scoped="" ref="0x2ac726a52538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x2ac726a6e060" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2ac726a6e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726a6e3b0"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726a6e538"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726a6e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726a6e848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726a6e9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726a6eb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726a6ece0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726a6ee68"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726a6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x2ac726a58d58" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x2ac726a58d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2ac726a570d8"/>
        <function-ref name="configureSingle" scoped="" ref="0x2ac726a57260"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x2ac726a573e8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x2ac726a57570"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x2ac726a576f8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x2ac726a57880"/>
        <function-ref name="singleDataReady" scoped="" ref="0x2ac726a57a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x2ac726a66ac0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2ac726a66ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726a66e10"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726a65020"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726a651a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726a65330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726a654b8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726a65640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726a657c8"/>
        <function-ref name="get" scoped="" ref="0x2ac726a65950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726a65ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726a65c60"/>
        <function-ref name="set" scoped="" ref="0x2ac726a65de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726a64020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726a641a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726a64430"/>
        <function-ref name="clr" scoped="" ref="0x2ac726a645b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x2ac726a6d390" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2ac726a6d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726a6d6e0"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac726a6d868"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726a6d9f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726a6db78"/>
        <function-ref name="fired" scoped="" ref="0x2ac726a6dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x2ac726a6add0" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2ac726a6add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726a69170"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726a692f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726a69480"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726a69608"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726a69790"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726a69918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726a69aa0"/>
        <function-ref name="get" scoped="" ref="0x2ac726a69c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726a69db0"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726a68020"/>
        <function-ref name="set" scoped="" ref="0x2ac726a681a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726a68330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726a684b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726a68740"/>
        <function-ref name="clr" scoped="" ref="0x2ac726a688c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x2ac726a8e628" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2ac726a8e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726a8e978"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726a8eb00"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726a8ec88"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726a8ee10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726a8d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726a8d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726a8d330"/>
        <function-ref name="get" scoped="" ref="0x2ac726a8d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726a8d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726a8d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726a8d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726a8dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726a8dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726a8c020"/>
        <function-ref name="clr" scoped="" ref="0x2ac726a8c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x2ac726b1f8e8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x2ac726b1f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x2ac726b1fc38"/>
        <function-ref name="getMCtl" scoped="" ref="0x2ac726b1fdc0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x2ac726b4c020"/>
        <function-ref name="isBusy" scoped="" ref="0x2ac726b4c1a8"/>
        <function-ref name="conversionDone" scoped="" ref="0x2ac726b4c330"/>
        <function-ref name="getCtl1" scoped="" ref="0x2ac726b4c4b8"/>
        <function-ref name="setMCtl" scoped="" ref="0x2ac726b4c640"/>
        <function-ref name="startConversion" scoped="" ref="0x2ac726b4c7c8"/>
        <function-ref name="setCtl0" scoped="" ref="0x2ac726b4c950"/>
        <function-ref name="getMem" scoped="" ref="0x2ac726b4cad8"/>
        <function-ref name="setIEFlags" scoped="" ref="0x2ac726b4cc60"/>
        <function-ref name="getIEFlags" scoped="" ref="0x2ac726b4cde8"/>
        <function-ref name="stopConversion" scoped="" ref="0x2ac726b4b020"/>
        <function-ref name="enableConversion" scoped="" ref="0x2ac726b4b2a8"/>
        <function-ref name="setCtl1" scoped="" ref="0x2ac726b4b430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ac726bb2510" loc="86:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ac726bb2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ac726bb2880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac726bb2a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ac726bb1550" loc="89:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac726bb1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ac726bb18c0"/>
        <function-ref name="configure" scoped="" ref="0x2ac726bb1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac726bb3750" loc="85:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac726bb3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726bb3ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726bb3c48"/>
        <function-ref name="request" scoped="" ref="0x2ac726bb3dd0"/>
        <function-ref name="granted" scoped="" ref="0x2ac726bb2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726bb21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ac726bb2c50" loc="87:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac726bb2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ac726bb1020"/>
        <function-ref name="userId" scoped="" ref="0x2ac726bb11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac727f19cc0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac727f19cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac727f180a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2ac727f18328" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2ac727f18328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ac727f18678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ac727f18800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ac727f18988"/>
        <function-ref name="dequeue" scoped="" ref="0x2ac727f18b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ac727f16df8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ac727f16df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ac727f151a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac727f15330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ac727f15e18" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac727f15e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ac727f141c0"/>
        <function-ref name="configure" scoped="" ref="0x2ac727f14348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ac727f145d0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ac727f145d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ac727f14920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ac727f14aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ac727f14c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2ac727f14db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac727f16100" loc="51:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac727f16100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727f16470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac727f165f8"/>
        <function-ref name="request" scoped="" ref="0x2ac727f16780"/>
        <function-ref name="granted" scoped="" ref="0x2ac727f16908"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727f16a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ac727f15578" loc="53:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac727f15578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ac727f158c8"/>
        <function-ref name="userId" scoped="" ref="0x2ac727f15a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ac727fa4100" loc="68:/home/wwhuang/git/tinyos-lab11/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2ac727fa4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac727fa4450"/>
        <function-ref name="runTask" scoped="" ref="0x2ac727fa45d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ac726bfd618" loc="61:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ac726bfd618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ac726bfd968"/>
        <function-ref name="stopDone" scoped="" ref="0x2ac726bfdaf0"/>
        <function-ref name="start" scoped="" ref="0x2ac726bfdc78"/>
        <function-ref name="stop" scoped="" ref="0x2ac726bfde00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ac726bfa5b0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ac726bfa5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac726bfa900"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726bfaa88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726bfac10"/>
        <function-ref name="cancel" scoped="" ref="0x2ac726bfad98"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac726bf9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ac726bf7d10" loc="65:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ac726bf7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac726bf60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ac726c1c1f0" loc="67:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ac726c1c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726c1c540"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac726c1c6c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c1c850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726c1c9d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac726c1cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ac726c32968" loc="70:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac726c32968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ac726c0be10"/>
        <function-ref name="clear" scoped="" ref="0x2ac726c06558"/>
        <function-ref name="isValid" scoped="" ref="0x2ac726c0b730"/>
        <function-ref name="set" scoped="" ref="0x2ac726c06c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ac726c2c080" loc="72:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ac726c2c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ac726c2c3d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ac726c2c558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ac726c2c6e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ac726c2c868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac726bf71c8" loc="64:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac726bf71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac726bf7518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ac726c07cb0" loc="69:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c07cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ac726c0d0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ac726c0d228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ac726c0d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ac726c0cb58" loc="68:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ac726c0cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ac726bf1020"/>
        <function-ref name="source" scoped="" ref="0x2ac726bf11a8"/>
        <function-ref name="address" scoped="" ref="0x2ac726bf1330"/>
        <function-ref name="destination" scoped="" ref="0x2ac726bf14b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ac726bf1640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ac726bf17c8"/>
        <function-ref name="type" scoped="" ref="0x2ac726bf1950"/>
        <function-ref name="setType" scoped="" ref="0x2ac726bf1ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ac726bf1c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ac726bf1de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ac726be9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ac726c31860" loc="71:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ac726c31860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ac726c30cc0"/>
        <function-ref name="clear" scoped="" ref="0x2ac726c2f420"/>
        <function-ref name="isValid" scoped="" ref="0x2ac726c305e0"/>
        <function-ref name="set" scoped="" ref="0x2ac726c2fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ac726c2b718" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ac726c2b718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ac726c2ba68"/>
        <function-ref name="stopDone" scoped="" ref="0x2ac726c2bbf0"/>
        <function-ref name="start" scoped="" ref="0x2ac726c2bd78"/>
        <function-ref name="stop" scoped="" ref="0x2ac726c24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ac726c3fb48" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ac726c3fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ac726c49020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ac726c491a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ac726c49330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ac726c494b8"/>
        <function-ref name="setCca" scoped="" ref="0x2ac726c49640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ac726c497c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ac726c67658" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2ac726c67658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ac726c67aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ac726c1f0c0" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ac726c1f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726c1f410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac726c1f598"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c1f720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726c1f8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac726c1fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ac726c24798" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ac726c24798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac726c24ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c24c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726c24df8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac726c23020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac726c231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ac726c21498" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ac726c21498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac726c217e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ac726c4be18" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac726c4be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac726c1e1a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac726c1e330"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac726c1e4b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac726c1e640"/>
        <function-ref name="getPower" scoped="" ref="0x2ac726c1e7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac726c1e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ac726c49ac0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ac726c49ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ac726c49e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ac726c3e020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ac726c3e1a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ac726c3e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac726c23928" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac726c23928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac726c23c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ac726c1ec78" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c1ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ac726c1d020"/>
        <function-ref name="noAck" scoped="" ref="0x2ac726c1d1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ac726c1d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ac726c6ba98" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ac726c6ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ac726c6bde8"/>
        <function-ref name="setRetries" scoped="" ref="0x2ac726c3d020"/>
        <function-ref name="getRetries" scoped="" ref="0x2ac726c3d1a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ac726c3d330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ac726c3d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ac726c21a88" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ac726c21a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ac726c21dd8"/>
        <function-ref name="source" scoped="" ref="0x2ac726c20020"/>
        <function-ref name="address" scoped="" ref="0x2ac726c201a8"/>
        <function-ref name="destination" scoped="" ref="0x2ac726c20330"/>
        <function-ref name="setSource" scoped="" ref="0x2ac726c204b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ac726c20640"/>
        <function-ref name="type" scoped="" ref="0x2ac726c207c8"/>
        <function-ref name="setType" scoped="" ref="0x2ac726c20950"/>
        <function-ref name="isForMe" scoped="" ref="0x2ac726c20ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ac726c20c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2ac726c20de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ac726c48ca8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac726c48ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ac726c4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ac726c653a0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ac726c653a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ac726c656f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ac726c65878"/>
        <function-ref name="start" scoped="" ref="0x2ac726c65a00"/>
        <function-ref name="stop" scoped="" ref="0x2ac726c65b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ac726c55020" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac726c55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ac726c55370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ac726c54128" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ac726c54128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ac726c54478"/>
        <function-ref name="setRetries" scoped="" ref="0x2ac726c54600"/>
        <function-ref name="getRetries" scoped="" ref="0x2ac726c54788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ac726c54910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ac726c54a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ac726c597e8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac726c597e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac726c59b38"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac726c59cc0"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac726c59e48"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac726c56020"/>
        <function-ref name="getPower" scoped="" ref="0x2ac726c561a8"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac726c56330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ac726c604c8" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ac726c604c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac726c60818"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c609a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726c60b28"/>
        <function-ref name="cancel" scoped="" ref="0x2ac726c60cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac726c60e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ac726c55668" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ac726c55668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ac726c559b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ac726c55b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ac726c55cc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ac726c55e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ac726c61020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2ac726c61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac726c61370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ac726c56658" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac726c56658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ac726c569a8"/>
        <function-ref name="noAck" scoped="" ref="0x2ac726c56b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ac726c56cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac726c64388" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac726c64388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726c646d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726c64860"/>
        <function-ref name="request" scoped="" ref="0x2ac726c649e8"/>
        <function-ref name="granted" scoped="" ref="0x2ac726c64b70"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726c64cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ac726c57330" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2ac726c57330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac726c57680"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c57808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726c57990"/>
        <function-ref name="cancel" scoped="" ref="0x2ac726c57b18"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac726c57ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ac726c616a0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ac726c616a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726c619f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac726c61b78"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c61d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726c60020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac726c601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ac726c591d0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ac726c591d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac726c59520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ac726c53740" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ac726c53740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ac726c53a90"/>
        <function-ref name="stopDone" scoped="" ref="0x2ac726c53c18"/>
        <function-ref name="start" scoped="" ref="0x2ac726c53da0"/>
        <function-ref name="stop" scoped="" ref="0x2ac726c86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ac726c85678" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ac726c85678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ac726c859c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ac726c85b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ac726c85cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ac726c85e60"/>
        <function-ref name="setCca" scoped="" ref="0x2ac726c84020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ac726c841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac726c862d8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac726c862d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac726c86628"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c867b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726c86938"/>
        <function-ref name="cancel" scoped="" ref="0x2ac726c86ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac726c86c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac726c85020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac726c85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac726c85370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ac726c81140" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ac726c81140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ac726c81490"/>
        <function-ref name="stopDone" scoped="" ref="0x2ac726c81618"/>
        <function-ref name="start" scoped="" ref="0x2ac726c817a0"/>
        <function-ref name="stop" scoped="" ref="0x2ac726c81928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ac726c80948" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ac726c80948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ac726c80c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ac726c80e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ac726c7f020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ac726c7f1a8"/>
        <function-ref name="setCca" scoped="" ref="0x2ac726c7f330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ac726c7f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ac726c7ca70" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2ac726c7ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ac726c7cdc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ac726c75020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ac726c751a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ac726c75330"/>
        <function-ref name="setCca" scoped="" ref="0x2ac726c754b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ac726c75640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ac726ca1c58" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac726ca1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac726c9e020"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac726c9e1a8"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac726c9e330"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac726c9e4b8"/>
        <function-ref name="getPower" scoped="" ref="0x2ac726c9e640"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac726c9e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2ac726c6dcc8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ac726c6dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac726c7c0a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ac726c7c228"/>
        <function-ref name="modify" scoped="" ref="0x2ac726c7c3b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac726c7c538"/>
        <function-ref name="resend" scoped="" ref="0x2ac726c7c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac726c81be0" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac726c81be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac726c80020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c801a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac726c80330"/>
        <function-ref name="cancel" scoped="" ref="0x2ac726c804b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac726c80640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ac726ca0d58" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ac726ca0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ac726c6c0d8"/>
        <function-ref name="rand32" scoped="" ref="0x2ac726c6c260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ac726c73500" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2ac726c73500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac726c73850"/>
        <function-ref name="stop" scoped="" ref="0x2ac726c739d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ac726c9d020" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac726c9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac726c9d370"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac726c9d4f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac726c9d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2ac726c77a78" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ac726c77a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ac726c77dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x2ac726c7d020"/>
        <function-ref name="rxOn" scoped="" ref="0x2ac726c7d1a8"/>
        <function-ref name="startVReg" scoped="" ref="0x2ac726c7d330"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ac726c7d4b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ac726c7d640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ac726c7d7c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ac726c7d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac726c6c518" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac726c6c518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac726c6c868"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac726c6c9f0"/>
        <function-ref name="led1On" scoped="" ref="0x2ac726c6cb78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac726c6cd00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac726ca1020"/>
        <function-ref name="get" scoped="" ref="0x2ac726ca11a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac726ca1330"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac726ca1950"/>
        <function-ref name="set" scoped="" ref="0x2ac726ca14b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ac726ca1640"/>
        <function-ref name="led2On" scoped="" ref="0x2ac726ca17c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ac726c7f798" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac726c7f798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726c7fae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726c7fc70"/>
        <function-ref name="request" scoped="" ref="0x2ac726c7fdf8"/>
        <function-ref name="granted" scoped="" ref="0x2ac726c7e020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726c7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2ac726c92540" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x2ac726c92540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac726c92990"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac726c92b18"/>
        <function-ref name="isState" scoped="" ref="0x2ac726c92ca0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac726c92e28"/>
        <function-ref name="requestState" scoped="" ref="0x2ac726c9c020"/>
        <function-ref name="forceState" scoped="" ref="0x2ac726c9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2ac726c8fb80" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x2ac726c8fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac726c8d020"/>
        <function-ref name="runTask" scoped="" ref="0x2ac726c8d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2ac726c90cf8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x2ac726c90cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac726c8f0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ac726c8f228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2ac726c91e68" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x2ac726c91e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac726c901e8"/>
        <function-ref name="runTask" scoped="" ref="0x2ac726c90370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ac726ceaad0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ac726ceaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ac726ceae20"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ac726ce9020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ac726ce91a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2ac726ce9330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ac726ce94b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ac726ce9640"/>
        <function-ref name="setChannel" scoped="" ref="0x2ac726ce97c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ac726ce9950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ac726ce9ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ac726ce9c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ac726ce9de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ac726ce8020"/>
        <function-ref name="sync" scoped="" ref="0x2ac726ce81a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ac726ce8430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ac726ce85b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ac726ce3d28" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2ac726ce3d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726ce58b8"/>
        <function-ref name="readDone" scoped="" ref="0x2ac726ce5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ac726ce88b0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ac726ce88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ac726ce8c00"/>
        <function-ref name="rfOff" scoped="" ref="0x2ac726ce8d88"/>
        <function-ref name="rxOn" scoped="" ref="0x2ac726ce7020"/>
        <function-ref name="startVReg" scoped="" ref="0x2ac726ce71a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ac726ce7330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ac726ce74b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ac726ce7640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ac726ce77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac726cede10" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac726cede10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726cea1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726cea330"/>
        <function-ref name="request" scoped="" ref="0x2ac726cea4b8"/>
        <function-ref name="granted" scoped="" ref="0x2ac726cea640"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726cea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ac726cdd4b0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ac726cdd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ac726cdd800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ac726cdd988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ac726cddb10"/>
        <function-ref name="syncDone" scoped="" ref="0x2ac726cddc98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ac726cdde20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ac726cdc020"/>
        <function-ref name="setChannel" scoped="" ref="0x2ac726cdc1a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ac726cdc330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ac726cdc4b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ac726cdc640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ac726cdc7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ac726cdc950"/>
        <function-ref name="sync" scoped="" ref="0x2ac726cdcad8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ac726cdcd60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ac726cdb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2ac726d28c48" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ac726d28c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726d26020"/>
        <function-ref name="write" scoped="" ref="0x2ac726d261a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2ac726d0e998" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ac726d0e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ac726d0ece8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2ac726d0f210" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x2ac726d0f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac726d06918"/>
        <function-ref name="fired" scoped="" ref="0x2ac726d0c980"/>
        <function-ref name="startAt" scoped="" ref="0x2ac726d06310"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac726d0ce08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac726d06da0"/>
        <function-ref name="start" scoped="" ref="0x2ac726d0c020"/>
        <function-ref name="stop" scoped="" ref="0x2ac726d0c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2ac726d2aab8" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac726d2aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726d2ae08"/>
        <function-ref name="write" scoped="" ref="0x2ac726d28020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2ac726d03500" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2ac726d03500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726d03850"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726d039d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726d03b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726d03ce8"/>
        <function-ref name="get" scoped="" ref="0x2ac726d03e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726d02020"/>
        <function-ref name="set" scoped="" ref="0x2ac726d021a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726d02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ac726cda658" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x2ac726cda658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726cd91e8"/>
        <function-ref name="readDone" scoped="" ref="0x2ac726cd9638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2ac726d163f0" loc="126:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x2ac726d163f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac726d16740"/>
        <function-ref name="runTask" scoped="" ref="0x2ac726d168c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2ac726d26530" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ac726d26530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726d26880"/>
        <function-ref name="write" scoped="" ref="0x2ac726d26a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ac726d26da0" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ac726d26da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726d25170"/>
        <function-ref name="write" scoped="" ref="0x2ac726d252f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2ac726d2b990" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ac726d2b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726d2bce0"/>
        <function-ref name="write" scoped="" ref="0x2ac726d2be68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ac726cf81b0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ac726cf81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ac726cf8500"/>
        <function-ref name="changed" scoped="" ref="0x2ac726cf8688"/>
        <function-ref name="amGroup" scoped="" ref="0x2ac726cf8810"/>
        <function-ref name="setAddress" scoped="" ref="0x2ac726cf8998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ac726d042c0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ac726d042c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726d04610"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726d04798"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726d04920"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726d04aa8"/>
        <function-ref name="get" scoped="" ref="0x2ac726d04c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726d04db8"/>
        <function-ref name="set" scoped="" ref="0x2ac726d03020"/>
        <function-ref name="clr" scoped="" ref="0x2ac726d031a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2ac726d243c0" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac726d243c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac726d24910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2ac726d02688" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2ac726d02688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726d029d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726d02b60"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726d02ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726d02e70"/>
        <function-ref name="get" scoped="" ref="0x2ac726d01020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726d011a8"/>
        <function-ref name="set" scoped="" ref="0x2ac726d01330"/>
        <function-ref name="clr" scoped="" ref="0x2ac726d014b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac726cde080" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac726cde080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726cde3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ac726d283d0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac726d283d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726d28720"/>
        <function-ref name="write" scoped="" ref="0x2ac726d288a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2ac726d24ca0" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ac726d24ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac726d23020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ac726d233b0" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ac726d233b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726d23700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726d23888"/>
        <function-ref name="request" scoped="" ref="0x2ac726d23a10"/>
        <function-ref name="granted" scoped="" ref="0x2ac726d23b98"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726d23d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2ac726d21e50" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x2ac726d21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726d201e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726d20370"/>
        <function-ref name="request" scoped="" ref="0x2ac726d204f8"/>
        <function-ref name="granted" scoped="" ref="0x2ac726d20680"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726d20808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ac726cdb318" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x2ac726cdb318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ac726cdb668"/>
        <function-ref name="rfOff" scoped="" ref="0x2ac726cdb7f0"/>
        <function-ref name="rxOn" scoped="" ref="0x2ac726cdb978"/>
        <function-ref name="startVReg" scoped="" ref="0x2ac726cdbb00"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ac726cdbc88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ac726cdbe10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ac726cda020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ac726cda1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2ac726d2a230" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ac726d2a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726d2a580"/>
        <function-ref name="write" scoped="" ref="0x2ac726d2a708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2ac726d2b120" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ac726d2b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726d2b470"/>
        <function-ref name="write" scoped="" ref="0x2ac726d2b5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2ac726d22518" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ac726d22518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac726d22868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac726d20ac0" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac726d20ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac726d20e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac726d1f020"/>
        <function-ref name="led1On" scoped="" ref="0x2ac726d1f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac726d1f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac726d1f4b8"/>
        <function-ref name="get" scoped="" ref="0x2ac726d1f640"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac726d1f7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac726d1fde8"/>
        <function-ref name="set" scoped="" ref="0x2ac726d1f950"/>
        <function-ref name="led0On" scoped="" ref="0x2ac726d1fad8"/>
        <function-ref name="led2On" scoped="" ref="0x2ac726d1fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2ac726d17598" loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x2ac726d17598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac726d178e8"/>
        <function-ref name="runTask" scoped="" ref="0x2ac726d17a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac726cde6b0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac726cde6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726cdea00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726cdeb88"/>
        <function-ref name="request" scoped="" ref="0x2ac726cded10"/>
        <function-ref name="granted" scoped="" ref="0x2ac726cdd020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726cdd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2ac726cffa60" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ac726cffa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726cffdb0"/>
        <function-ref name="write" scoped="" ref="0x2ac726cfc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2ac726cff128" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ac726cff128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac726cff578"/>
        <function-ref name="write" scoped="" ref="0x2ac726cff700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2ac726cfdcd0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2ac726cfdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726d000a0"/>
        <function-ref name="disable" scoped="" ref="0x2ac726d00228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ac726d003b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ac726d00538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2ac726d21140" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x2ac726d21140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac726d21490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac726d21618"/>
        <function-ref name="request" scoped="" ref="0x2ac726d217a0"/>
        <function-ref name="granted" scoped="" ref="0x2ac726d21928"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac726d21ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2ac726d22bf0" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ac726d22bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac726d24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac726d873e0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac726d873e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726d87730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2ac726d87d58" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2ac726d87d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac726d83410"/>
        <function-ref name="fired" scoped="" ref="0x2ac726d844a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ac726d84db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac726d84930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac726d83898"/>
        <function-ref name="start" scoped="" ref="0x2ac726d85af8"/>
        <function-ref name="stop" scoped="" ref="0x2ac726d84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac726dbbe70" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac726dbbe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac726dba1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2ac726dba6c0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x2ac726dba6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac726e72020"/>
        <function-ref name="fired" scoped="" ref="0x2ac726e73020"/>
        <function-ref name="startAt" scoped="" ref="0x2ac726e73930"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac726e734a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac726e724a8"/>
        <function-ref name="start" scoped="" ref="0x2ac726e74578"/>
        <function-ref name="stop" scoped="" ref="0x2ac726e74a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ac727fe9e18" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac727fe9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727fe5628"/>
        <function-ref name="fired" scoped="" ref="0x2ac727fe6580"/>
        <function-ref name="startAt" scoped="" ref="0x2ac727fe5020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727fe6a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac727fe5ab0"/>
        <function-ref name="start" scoped="" ref="0x2ac727fe7be8"/>
        <function-ref name="stop" scoped="" ref="0x2ac727fe60f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac727fe9630" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac727fe9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac727fe9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ac727fe1b40" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac727fe1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727fdd238"/>
        <function-ref name="fired" scoped="" ref="0x2ac727fdf2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2ac727fdfbc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727fdf738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac727fdd6c0"/>
        <function-ref name="start" scoped="" ref="0x2ac727fe08f8"/>
        <function-ref name="stop" scoped="" ref="0x2ac727fe0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac727fe1358" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac727fe1358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac727fe16a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ac727fc9020" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ac727fc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac727fc9370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac727fc94f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac727fc9680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac727fc9808"/>
        <function-ref name="fired" scoped="" ref="0x2ac727fc9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ac727fcc7d8" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ac727fcc7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac727fccb28"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac727fcccb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac727fcce38"/>
        <function-ref name="get" scoped="" ref="0x2ac727fcb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac727fcb1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac727fcb330"/>
        <function-ref name="getMode" scoped="" ref="0x2ac727fcb4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac727fcb640"/>
        <function-ref name="overflow" scoped="" ref="0x2ac727fcb7c8"/>
        <function-ref name="setMode" scoped="" ref="0x2ac727fcb950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac727fcbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ac727fcbd60" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac727fcbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac727fca0d8"/>
        <function-ref name="getControl" scoped="" ref="0x2ac727fca260"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac727fca3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac727fca570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac727fca6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac727fca880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac727fcaa08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac727fcab90"/>
        <function-ref name="setControl" scoped="" ref="0x2ac727fcad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ac726dd39a8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ac726dd39a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726dd3cf8"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac726dd3e80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac726dd1030"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac726dd11b8"/>
        <function-ref name="fired" scoped="" ref="0x2ac726dd1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ac726dd65b0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726dd65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726dd6900"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726dd6a88"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726dd6c10"/>
        <function-ref name="get" scoped="" ref="0x2ac726dd6d98"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726dd5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726dd51a8"/>
        <function-ref name="getMode" scoped="" ref="0x2ac726dd5330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726dd54b8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726dd5640"/>
        <function-ref name="setMode" scoped="" ref="0x2ac726dd57c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726dd5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ac726dd41c8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726dd41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726dd4518"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726dd46a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726dd4828"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726dd49b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726dd4b38"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726dd4cc0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726dd4e48"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726dd3020"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726dd31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2ac727fc08c8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ac727fc08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac727fc0c18"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac727fc0da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac727fbe020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac727fbe1a8"/>
        <function-ref name="fired" scoped="" ref="0x2ac727fbe330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ac727fc2020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ac727fc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac727fc2370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac727fc24f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac727fc2680"/>
        <function-ref name="get" scoped="" ref="0x2ac727fc2808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac727fc2990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac727fc2b18"/>
        <function-ref name="getMode" scoped="" ref="0x2ac727fc2ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac727fc2e28"/>
        <function-ref name="overflow" scoped="" ref="0x2ac727fc1020"/>
        <function-ref name="setMode" scoped="" ref="0x2ac727fc11a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac727fc1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ac727fc5020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac727fc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727fc3690"/>
        <function-ref name="fired" scoped="" ref="0x2ac727fc46f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ac727fc3088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727fc4b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac727fc3b18"/>
        <function-ref name="start" scoped="" ref="0x2ac727fc5d70"/>
        <function-ref name="stop" scoped="" ref="0x2ac727fc4270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac727fc77a8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac727fc77a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac727fc7af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ac727fc15b8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac727fc15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac727fc1908"/>
        <function-ref name="getControl" scoped="" ref="0x2ac727fc1a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac727fc1c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac727fc1da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac727fc0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac727fc01a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac727fc0330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac727fc04b8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac727fc0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ac726dfcd70" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac726dfcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac726e00af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726dff4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726dff020"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726dff930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2ac726dfaba0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2ac726dfaba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac726e33930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726e31270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726e33db8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726e316f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ac726e1f020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ac726e1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726e1f370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac726e1f4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726e1f680"/>
        <function-ref name="get" scoped="" ref="0x2ac726e1f808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726e1f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726e1fb18"/>
        <function-ref name="getMode" scoped="" ref="0x2ac726e1fca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726e1fe28"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726e1e020"/>
        <function-ref name="setMode" scoped="" ref="0x2ac726e1e1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac726e1e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ac726e2d020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac726e2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac726e2dd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726e216b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726e21230"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726e21b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ac726e3ce20" loc="63:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2ac726e3ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac726e3abe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726e39548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726e390c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726e399d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ac726e1bc50" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac726e1bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac726e3d9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726e3c330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726e3de78"/>
        <function-ref name="overflow" scoped="" ref="0x2ac726e3c7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ac727fdba20" loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac727fdba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727fd8088"/>
        <function-ref name="fired" scoped="" ref="0x2ac727fd9130"/>
        <function-ref name="startAt" scoped="" ref="0x2ac727fd9a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727fd95b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac727fd8510"/>
        <function-ref name="start" scoped="" ref="0x2ac727fda7a8"/>
        <function-ref name="stop" scoped="" ref="0x2ac727fdac80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ac727fd5d20" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2ac727fd5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727fd2410"/>
        <function-ref name="fired" scoped="" ref="0x2ac727fd34a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ac727fd3db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727fd3930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac727fd2898"/>
        <function-ref name="start" scoped="" ref="0x2ac727fd4ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ac727fd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ac727fd8b38" loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac727fd8b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac727fd78f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac727fd5230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac727fd7d80"/>
        <function-ref name="overflow" scoped="" ref="0x2ac727fd56b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2ac726eaa688" loc="44:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2ac726eaa688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726eaa9d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726eaab60"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726eaace8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726eaae70"/>
        <function-ref name="get" scoped="" ref="0x2ac726ea9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ea91a8"/>
        <function-ref name="set" scoped="" ref="0x2ac726ea9330"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ea94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2ac726ea9818" loc="45:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2ac726ea9818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ea9b68"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ea9cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ea9e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ea8030"/>
        <function-ref name="get" scoped="" ref="0x2ac726ea81b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ea8340"/>
        <function-ref name="set" scoped="" ref="0x2ac726ea84c8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ea8650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2ac726ea89a8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x2ac726ea89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ea8cf8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ea8e80"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ea7030"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ea71b8"/>
        <function-ref name="get" scoped="" ref="0x2ac726ea7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ea74c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726ea7650"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ea77d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2ac726eab4f0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ac726eab4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726eab840"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726eab9c8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726eabb50"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726eabcd8"/>
        <function-ref name="get" scoped="" ref="0x2ac726eabe60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726eaa020"/>
        <function-ref name="set" scoped="" ref="0x2ac726eaa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726eaa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2ac726ea6ca8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x2ac726ea6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ea5020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ea51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ea5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ea54b8"/>
        <function-ref name="get" scoped="" ref="0x2ac726ea5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ea57c8"/>
        <function-ref name="set" scoped="" ref="0x2ac726ea5950"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ea5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2ac726eac278" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2ac726eac278"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726eac5c8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726eac750"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726eac8d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726eaca60"/>
        <function-ref name="get" scoped="" ref="0x2ac726eacbe8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726eacd70"/>
        <function-ref name="set" scoped="" ref="0x2ac726eab020"/>
        <function-ref name="clr" scoped="" ref="0x2ac726eab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2ac726ea7b20" loc="47:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2ac726ea7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ea7e70"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ea6020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ea61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ea6330"/>
        <function-ref name="get" scoped="" ref="0x2ac726ea64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ea6640"/>
        <function-ref name="set" scoped="" ref="0x2ac726ea67c8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ea6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac726ea2020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726ea2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ea2370"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ea24f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726ea2680"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ea2808"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ea2990"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726ea2b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ea2ca0"/>
        <function-ref name="get" scoped="" ref="0x2ac726ea2e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726ea1020"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726ea11a8"/>
        <function-ref name="set" scoped="" ref="0x2ac726ea1330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726ea14b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726ea1640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726ea18c8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ea1a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac726ea4db8" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726ea4db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ea3170"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ea32f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ea3480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ea3608"/>
        <function-ref name="get" scoped="" ref="0x2ac726ea3790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ea3918"/>
        <function-ref name="set" scoped="" ref="0x2ac726ea3aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ea3c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac726e9e908" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726e9e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726e9ec58"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726e9ede0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726e9d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726e9d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726e9d330"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726e9d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726e9d640"/>
        <function-ref name="get" scoped="" ref="0x2ac726e9d7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726e9d950"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726e9dad8"/>
        <function-ref name="set" scoped="" ref="0x2ac726e9dc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726e9dde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726e9c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726e9c2a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726e9c430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac726e9f6a8" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726e9f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726e9f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726e9fb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726e9fd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726e9e020"/>
        <function-ref name="get" scoped="" ref="0x2ac726e9e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726e9e330"/>
        <function-ref name="set" scoped="" ref="0x2ac726e9e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726e9e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac726e98120" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726e98120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726e98470"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726e985f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726e98780"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726e98908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726e98a90"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726e98c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726e98da0"/>
        <function-ref name="get" scoped="" ref="0x2ac726e97020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726e971a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726e97330"/>
        <function-ref name="set" scoped="" ref="0x2ac726e974b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726e97640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726e977c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726e97a50"/>
        <function-ref name="clr" scoped="" ref="0x2ac726e97bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac726e99020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726e99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726e99370"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726e994f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726e99680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726e99808"/>
        <function-ref name="get" scoped="" ref="0x2ac726e99990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726e99b18"/>
        <function-ref name="set" scoped="" ref="0x2ac726e99ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ac726e99e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac726e94908" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726e94908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726e94c58"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726e94de0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726e93020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726e931a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726e93330"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726e934b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726e93640"/>
        <function-ref name="get" scoped="" ref="0x2ac726e937c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726e93950"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726e93ad8"/>
        <function-ref name="set" scoped="" ref="0x2ac726e93c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726e93de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726e92020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726e922a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726e92430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac726e95720" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726e95720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726e95a70"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726e95bf8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726e95d80"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726e94020"/>
        <function-ref name="get" scoped="" ref="0x2ac726e941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726e94330"/>
        <function-ref name="set" scoped="" ref="0x2ac726e944b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726e94640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac726ecd120" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726ecd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ecd470"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ecd5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726ecd780"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ecd908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ecda90"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726ecdc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ecdda0"/>
        <function-ref name="get" scoped="" ref="0x2ac726ecc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726ecc1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726ecc330"/>
        <function-ref name="set" scoped="" ref="0x2ac726ecc4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726ecc640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726ecc7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726ecca50"/>
        <function-ref name="clr" scoped="" ref="0x2ac726eccbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac726ece020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726ece020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ece370"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ece4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ece680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ece808"/>
        <function-ref name="get" scoped="" ref="0x2ac726ece990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726eceb18"/>
        <function-ref name="set" scoped="" ref="0x2ac726ececa0"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ecee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac726ec9908" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726ec9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ec9c58"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ec9de0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726ec8020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ec81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ec8330"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726ec84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ec8640"/>
        <function-ref name="get" scoped="" ref="0x2ac726ec87c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726ec8950"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726ec8ad8"/>
        <function-ref name="set" scoped="" ref="0x2ac726ec8c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726ec8de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726ec7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726ec72a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ec7430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac726eca720" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726eca720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ecaa70"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ecabf8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ecad80"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ec9020"/>
        <function-ref name="get" scoped="" ref="0x2ac726ec91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ec9330"/>
        <function-ref name="set" scoped="" ref="0x2ac726ec94b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ec9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac726ec4120" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac726ec4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ec4470"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ec45f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726ec4780"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ec4908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ec4a90"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726ec4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ec4da0"/>
        <function-ref name="get" scoped="" ref="0x2ac726ec2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726ec21a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726ec2330"/>
        <function-ref name="set" scoped="" ref="0x2ac726ec24b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726ec2640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726ec27c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726ec2a50"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ec2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac726ec5020" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726ec5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ec5370"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ec54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ec5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ec5808"/>
        <function-ref name="get" scoped="" ref="0x2ac726ec5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ec5b18"/>
        <function-ref name="set" scoped="" ref="0x2ac726ec5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ec5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2ac726eb0020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2ac726eb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ac726eb0370"/>
        <function-ref name="disable" scoped="" ref="0x2ac726eb04f8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726eb0680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ac726eb0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2ac726eb0bd8" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x2ac726eb0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726ef0020"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef01a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ac726ef0330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ac726ef04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2ac726ef0898" loc="44:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ac726ef0898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726ef0be8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef0d70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ac726eed020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ac726eed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x2ac726ed8d60" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x2ac726ed8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac726ed70d8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2ac726ed7260"/>
        <function-ref name="captured" scoped="" ref="0x2ac726ed73e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac726ed7570"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac726ed76f8"/>
        <function-ref name="setEdge" scoped="" ref="0x2ac726ed7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ac726eea020" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2ac726eea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ac726eea370"/>
        <function-ref name="disable" scoped="" ref="0x2ac726eea4f8"/>
        <function-ref name="captured" scoped="" ref="0x2ac726eea680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ac726eea808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ac726eeaa90" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac726eeaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac726eeade0"/>
        <function-ref name="getControl" scoped="" ref="0x2ac726ed8020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac726ed81a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac726ed8330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac726ed84b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac726ed8640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac726ed87c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac726ed8950"/>
        <function-ref name="setControl" scoped="" ref="0x2ac726ed8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x2ac726ed7b48" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac726ed7b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac726ed6020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac726ed61a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac726ed6330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac726ed64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac726ed6640"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac726ed67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac726ed6950"/>
        <function-ref name="get" scoped="" ref="0x2ac726ed6ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac726ed6c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac726ed6de8"/>
        <function-ref name="set" scoped="" ref="0x2ac726ed5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac726ed51a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac726ed5330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac726ed55b8"/>
        <function-ref name="clr" scoped="" ref="0x2ac726ed5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ac726f086f0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ac726f086f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f08a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f08bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f08d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f07020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f071a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f07330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ac726efe6f0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ac726efe6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726efea40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726efebc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726efed50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726efd020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726efd1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726efd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ac726f056f0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ac726f056f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f05a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f05bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f05d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f04020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f041a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ac726f036f0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ac726f036f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f03a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f03bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f03d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f02020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f021a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ac726f0e6f0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ac726f0e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f0ea40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f0ebc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f0ed50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f09020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f091a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f09330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ac726f006f0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ac726f006f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f00b40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f00cc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f00e50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726eff020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726eff1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726eff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ac726f076f0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ac726f076f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f07a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f07bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f07d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f06020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f061a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f06330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ac726efd6f0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ac726efd6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726efda40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726efdbc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726efdd50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726efb020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726efb1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726efb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ac726f0a7b8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ac726f0a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f0ab08"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f0ac90"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f0ae18"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f0f020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f0f1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f0f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ac726f026f0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ac726f026f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f02a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f02bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f02d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f01020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f011a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f01330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ac726f096f0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ac726f096f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f09a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f09bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f09d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f08020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f081a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ac726eff6f0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ac726eff6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726effa40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726effbc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726effd50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726efe020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726efe1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726efe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ac726f066f0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ac726f066f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f06a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f06bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f06d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f05020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f051a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f05330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ac726f046f0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ac726f046f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f04a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f04bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f04d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f03020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f031a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f03330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ac726f0f6f0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ac726f0f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f0fa40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f0fbc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f0fd50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f0e020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f0e1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f0e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ac726f016f0" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ac726f016f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f01a40"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f01bc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f01d50"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f00020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f001a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f00330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2ac726ef43e0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2ac726ef43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726ef4730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726ef48b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef4a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726ef4bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726ef4d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726ef3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2ac726f2a3e0" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2ac726f2a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f2a730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f2a8b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f2aa40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f2abc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f2ad50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2ac726ef13e0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2ac726ef13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726ef1730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726ef18b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef1a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726ef1bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726ef1d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2ac726f2f3e0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2ac726f2f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f2f730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f2f8b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f2fa40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f2fbc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f2fd50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2ac726ef63e0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2ac726ef63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726ef6730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726ef68b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef6a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726ef6bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726ef6d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726ef5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2ac726f2c3e0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2ac726f2c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f2c830"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f2c9b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f2cb40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f2ccc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f2ce50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2ac726ef33e0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2ac726ef33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726ef3730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726ef38b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef3a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726ef3bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726ef3d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726ef2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2ac726f293e0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2ac726f293e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f29730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f298b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f29a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f29bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f29d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2ac726ef8470" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2ac726ef8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726ef87c0"/>
        <function-ref name="fired" scoped="" ref="0x2ac726ef8948"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef8ad0"/>
        <function-ref name="edge" scoped="" ref="0x2ac726ef8c58"/>
        <function-ref name="enable" scoped="" ref="0x2ac726ef8de0"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726ef7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2ac726f2e3e0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2ac726f2e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f2e730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f2e8b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f2ea40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f2ebc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f2ed50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2ac726ef53e0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2ac726ef53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726ef5730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726ef58b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef5a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726ef5bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726ef5d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726ef4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2ac726f2b3e0" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2ac726f2b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f2b730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f2b8b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f2ba40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f2bbc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f2bd50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2ac726ef23e0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2ac726ef23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726ef2730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726ef28b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef2a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726ef2bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726ef2d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726ef1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2ac726f303e0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2ac726f303e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f30730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f308b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f30a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f30bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f30d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2ac726ef73e0" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2ac726ef73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726ef7730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726ef78b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726ef7a40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726ef7bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726ef7d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726ef6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2ac726f2d3e0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2ac726f2d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726f2d730"/>
        <function-ref name="fired" scoped="" ref="0x2ac726f2d8b8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726f2da40"/>
        <function-ref name="edge" scoped="" ref="0x2ac726f2dbc8"/>
        <function-ref name="enable" scoped="" ref="0x2ac726f2dd50"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726f2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2ac726fe7780" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2ac726fe7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726fe7ad0"/>
        <function-ref name="fired" scoped="" ref="0x2ac726fe7c58"/>
        <function-ref name="disable" scoped="" ref="0x2ac726fe7de0"/>
        <function-ref name="edge" scoped="" ref="0x2ac726fda020"/>
        <function-ref name="enable" scoped="" ref="0x2ac726fda1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726fda330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ac726fe8b58" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2ac726fe8b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726fe7020"/>
        <function-ref name="disable" scoped="" ref="0x2ac726fe71a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ac726fe7330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ac726fe74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x2ac726fd85f8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x2ac726fd85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac726fd8948"/>
        <function-ref name="fired" scoped="" ref="0x2ac726fd8ad0"/>
        <function-ref name="disable" scoped="" ref="0x2ac726fd8c58"/>
        <function-ref name="edge" scoped="" ref="0x2ac726fd8de0"/>
        <function-ref name="enable" scoped="" ref="0x2ac726fd7020"/>
        <function-ref name="getValue" scoped="" ref="0x2ac726fd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ac726fd9a78" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x2ac726fd9a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac726fd9dc8"/>
        <function-ref name="disable" scoped="" ref="0x2ac726fd8020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ac726fd81a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ac726fd8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ac727404470" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ac727404470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274049c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727404b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ac72740f9b8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ac72740f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ac727407470" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac727407470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274077c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727407948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ac727403d98" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ac727403d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727401170"/>
        <function-ref name="write" scoped="" ref="0x2ac7274012f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ac7273fa470" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ac7273fa470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273fa7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273fa948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ac7274015c0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ac7274015c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727401910"/>
        <function-ref name="write" scoped="" ref="0x2ac727401a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ac7274457c0" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ac7274457c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727445b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727445c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ac7274477c0" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ac7274477c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727447b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727447c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ac72740dc50" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ac72740dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ac7273f7c10" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ac7273f7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f6020"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ac7274487c0" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7274487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727448b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727448c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ac727406470" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ac727406470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274067c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727406948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ac727405470" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ac727405470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274057c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727405948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ac7273fdc10" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ac7273fdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273fc020"/>
        <function-ref name="write" scoped="" ref="0x2ac7273fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ac7273fe470" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ac7273fe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273fe7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273fe948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ac727401d60" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ac727401d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274000d8"/>
        <function-ref name="write" scoped="" ref="0x2ac727400260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ac727410430" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727410430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ac727410780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ac727410908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ac727410a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ac72740b638" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac72740b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ac72740bc50" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ac72740bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ac7273f5060" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac7273f5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f53b0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f5538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ac72740a3a0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ac72740a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ac727447020" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac727447020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727447370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274474f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ac72740c900" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac72740c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ac7273f7470" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ac7273f7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f77c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ac727406c10" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ac727406c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727405020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ac727407c10" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac727407c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727406020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ac72740f3a0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ac72740f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ac7273f8470" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ac7273f8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f87c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ac7273fac10" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ac7273fac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f9020"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ac7273f8c10" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ac7273f8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f7020"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ac727445020" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ac727445020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727445370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274454f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ac727446020" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ac727446020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727446370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274464f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ac7273fec10" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ac7273fec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273fd020"/>
        <function-ref name="write" scoped="" ref="0x2ac7273fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ac7273f9470" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ac7273f9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f97c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ac727448020" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ac727448020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727448370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274484f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ac727400cc8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ac727400cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273ff0a0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273ff228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ac727444020" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ac727444020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727444370"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac7274444f8"/>
        <function-ref name="write" scoped="" ref="0x2ac727444680"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac727444808"/>
        <function-ref name="readDone" scoped="" ref="0x2ac727444990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ac727410d58" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ac727410d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ac727409c50" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ac727409c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727407020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ac727405c10" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ac727405c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727404020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ac7273fc470" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ac7273fc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273fc7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273fc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ac727400528" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ac727400528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727400878"/>
        <function-ref name="write" scoped="" ref="0x2ac727400a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ac7273fcc10" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ac7273fcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273fa020"/>
        <function-ref name="write" scoped="" ref="0x2ac7273fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ac727404e10" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ac727404e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274031a8"/>
        <function-ref name="write" scoped="" ref="0x2ac727403330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ac72740d020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ac72740d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ac7274035f8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7274035f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727403948"/>
        <function-ref name="write" scoped="" ref="0x2ac727403ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac7274117d0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac7274117d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727411b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac727411ca8"/>
        <function-ref name="request" scoped="" ref="0x2ac727411e30"/>
        <function-ref name="granted" scoped="" ref="0x2ac727410020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7274101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ac72740a9b8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ac72740a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ac727409638" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ac727409638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727409988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ac7274497c0" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ac7274497c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727449b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727449c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ac727449020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ac727449020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727449370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274494f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ac72740b020" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac72740b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ac7273f5800" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac7273f5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f5b50"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ac7274467c0" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ac7274467c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727446b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727446c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ac7273fd470" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ac7273fd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273fd7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273fd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ac7273f9c10" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ac7273f9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f8020"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ac72740d638" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ac72740d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ac72740c2e8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ac72740c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72740c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ac7273ff4f0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ac7273ff4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273ff840"/>
        <function-ref name="write" scoped="" ref="0x2ac7273ff9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ac727409020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ac727409020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727409370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ac7273ffc90" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ac7273ffc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273fe020"/>
        <function-ref name="write" scoped="" ref="0x2ac7273fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ac7273f6470" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ac7273f6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7273f6bc0"/>
        <function-ref name="write" scoped="" ref="0x2ac7273f6d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ac727444c58" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ac727444c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727442020"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac7274421a8"/>
        <function-ref name="write" scoped="" ref="0x2ac727442330"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac7274424b8"/>
        <function-ref name="readDone" scoped="" ref="0x2ac727442640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ac727021c00" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2ac727021c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727020020"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac7270201a8"/>
        <function-ref name="write" scoped="" ref="0x2ac727020330"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac7270204b8"/>
        <function-ref name="readDone" scoped="" ref="0x2ac727020640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ac727023cb0" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727023cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ac7270210a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ac727021228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ac7270213b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ac72701f020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2ac72701f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72701f370"/>
        <function-ref name="write" scoped="" ref="0x2ac72701f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ac72701fd60" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2ac72701fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72701e0d8"/>
        <function-ref name="write" scoped="" ref="0x2ac72701e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac727023020" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac727023020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727023370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7270234f8"/>
        <function-ref name="request" scoped="" ref="0x2ac727023680"/>
        <function-ref name="granted" scoped="" ref="0x2ac727023808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727023990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ac72701ead8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2ac72701ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72701ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2ac727054020" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ac727054020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727054370"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7270544f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ac72705ce50" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x2ac72705ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac72705b1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac72705b370"/>
        <function-ref name="write" scoped="" ref="0x2ac72705b4f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac72705b680"/>
        <function-ref name="readDone" scoped="" ref="0x2ac72705b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ac72701cdf8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac72701cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ac727019170"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ac7270192f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ac727019480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2ac727056d18" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ac727056d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ac7270550a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2ac727054838" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x2ac727054838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac727054b88"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac727054d10"/>
        <function-ref name="isState" scoped="" ref="0x2ac727053020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac7270531a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ac727053330"/>
        <function-ref name="forceState" scoped="" ref="0x2ac7270534b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ac7270571e8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ac7270571e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727057538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7270576c0"/>
        <function-ref name="request" scoped="" ref="0x2ac727057848"/>
        <function-ref name="granted" scoped="" ref="0x2ac7270579d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727057b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ac72705a040" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x2ac72705a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72705a390"/>
        <function-ref name="write" scoped="" ref="0x2ac72705a518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ac72705ad40" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x2ac72705ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7270590d8"/>
        <function-ref name="write" scoped="" ref="0x2ac727059260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac727053730" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac727053730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac727053a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac727053c08"/>
        <function-ref name="led1On" scoped="" ref="0x2ac727053d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac72704d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac72704d1a8"/>
        <function-ref name="get" scoped="" ref="0x2ac72704d330"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac72704d4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac72704dad8"/>
        <function-ref name="set" scoped="" ref="0x2ac72704d640"/>
        <function-ref name="led0On" scoped="" ref="0x2ac72704d7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ac72704d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac727019c10" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac727019c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac72705c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac72705c1a8"/>
        <function-ref name="request" scoped="" ref="0x2ac72705c330"/>
        <function-ref name="granted" scoped="" ref="0x2ac72705c4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac72705c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2ac7270485d0" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x2ac7270485d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac727048920"/>
        <function-ref name="runTask" scoped="" ref="0x2ac727048aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ac727059a98" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x2ac727059a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727059de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ac7270c1100" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ac7270c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac7270c1450"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac7270c15d8"/>
        <function-ref name="isState" scoped="" ref="0x2ac7270c1760"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac7270c18e8"/>
        <function-ref name="requestState" scoped="" ref="0x2ac7270c1a70"/>
        <function-ref name="forceState" scoped="" ref="0x2ac7270c1bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ac7270bf858" loc="66:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ac7270bf858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac7270bfba8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac7270bfd30"/>
        <function-ref name="isState" scoped="" ref="0x2ac7270bc020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac7270bc1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ac7270bc330"/>
        <function-ref name="forceState" scoped="" ref="0x2ac7270bc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac7270b95d8" loc="66:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac7270b95d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7270b9928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ac7270b81c8" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ac7270b81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac7270b8518"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac7270b86a0"/>
        <function-ref name="isState" scoped="" ref="0x2ac7270b8828"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac7270b89b0"/>
        <function-ref name="requestState" scoped="" ref="0x2ac7270b8b38"/>
        <function-ref name="forceState" scoped="" ref="0x2ac7270b8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ac7273e1020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ac7273e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7273e1370"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7273e14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ac7270e6948" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ac7270e6948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ac7270e6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac7270e8cf0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac7270e8cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7270e60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7270e6228"/>
        <function-ref name="request" scoped="" ref="0x2ac7270e63b0"/>
        <function-ref name="granted" scoped="" ref="0x2ac7270e6538"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7270e66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ac728079430" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ac728079430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ac728079780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac728079908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ac728078d18" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ac728078d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7280770a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac728077228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ac7280774b0" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ac7280774b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ac728077800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ac728079b90" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ac728079b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ac728078020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac72807a7d0" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac72807a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac72807ab20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac72807aca8"/>
        <function-ref name="request" scoped="" ref="0x2ac72807ae30"/>
        <function-ref name="granted" scoped="" ref="0x2ac728079020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7280791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ac7280782a8" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ac7280782a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ac7280785f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ac728078780"/>
        <function-ref name="splitRead" scoped="" ref="0x2ac728078908"/>
        <function-ref name="write" scoped="" ref="0x2ac728078a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ac727116208" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac727116208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ac727116558"/>
        <function-ref name="configure" scoped="" ref="0x2ac7271166e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ac727114020" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ac727114020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727114370"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7271144f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ac727111020" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ac727111020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ac727111370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ac7271169b0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ac7271169b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ac727116d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ac727114d90" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ac727114d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727113170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7271132f8"/>
        <function-ref name="request" scoped="" ref="0x2ac727113480"/>
        <function-ref name="granted" scoped="" ref="0x2ac727113608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727113790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac727117020" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac727117020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727117370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7271174f8"/>
        <function-ref name="request" scoped="" ref="0x2ac727117680"/>
        <function-ref name="granted" scoped="" ref="0x2ac727117808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727117990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ac727115020" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ac727115020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ac727115370"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ac7271154f8"/>
        <function-ref name="splitRead" scoped="" ref="0x2ac727115680"/>
        <function-ref name="write" scoped="" ref="0x2ac727115808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ac72710ee58" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ac72710ee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ac7271101e8"/>
        <function-ref name="txDone" scoped="" ref="0x2ac727110370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2ac72717b3c8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac72717b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ac72717b738"/>
        <function-ref name="configure" scoped="" ref="0x2ac72717b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ac7271c4e38" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x2ac7271c4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7271c31e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7271c3370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x2ac7271c2550" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x2ac7271c2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2ac7271c28c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ac72717bb48" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x2ac72717bb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ac7271c4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x2ac7271c2b88" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ac7271c2b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ac7271c1020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ac7271c11a8"/>
        <function-ref name="setUctl" scoped="" ref="0x2ac7271c1330"/>
        <function-ref name="enableUart" scoped="" ref="0x2ac7271c14b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ac7271c1640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ac7271c17c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ac7271c1950"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ac7271c1ad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ac7271c1c60"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ac7271c1de8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ac7271c0020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ac7271c01a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ac7271c0330"/>
        <function-ref name="getUbr" scoped="" ref="0x2ac7271c05b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ac7271c0740"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ac7271c08c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ac7271c0a50"/>
        <function-ref name="isUart" scoped="" ref="0x2ac7271c0bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ac7271c0d60"/>
        <function-ref name="isSpi" scoped="" ref="0x2ac7271bf020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ac7271bf1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ac7271bf330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ac7271bf4b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ac7271bf640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7271bf7c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ac7271bfb50"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ac7271bfcd8"/>
        <function-ref name="setUbr" scoped="" ref="0x2ac7271bfe60"/>
        <function-ref name="tx" scoped="" ref="0x2ac7271be020"/>
        <function-ref name="getUctl" scoped="" ref="0x2ac7271be1a8"/>
        <function-ref name="disableUart" scoped="" ref="0x2ac7271be330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ac7271be4b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ac7271be640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ac7271be7c8"/>
        <function-ref name="rx" scoped="" ref="0x2ac7271be950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ac7271bead8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ac7271bec60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ac7271bede8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ac7271bd020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ac7271bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac7271bdbd0" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac7271bdbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac7271bc020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac7271bc1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ac7271bc330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac7271bc4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac7271bc640"/>
        <function-ref name="get" scoped="" ref="0x2ac7271bc7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac7271bc950"/>
        <function-ref name="led2On" scoped="" ref="0x2ac7271bb020"/>
        <function-ref name="set" scoped="" ref="0x2ac7271bcc60"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac7271bcad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ac7271bcde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x2ac7271c3758" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x2ac7271c3758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7271c3ac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7271c3c50"/>
        <function-ref name="request" scoped="" ref="0x2ac7271c3dd8"/>
        <function-ref name="granted" scoped="" ref="0x2ac7271c2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7271c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac72717d608" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac72717d608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac72717d978"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac72717db00"/>
        <function-ref name="request" scoped="" ref="0x2ac72717dc88"/>
        <function-ref name="granted" scoped="" ref="0x2ac72717de10"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac72717b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ac7271c42a8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x2ac7271c42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ac7271c45f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ac7271c4780"/>
        <function-ref name="splitRead" scoped="" ref="0x2ac7271c4908"/>
        <function-ref name="write" scoped="" ref="0x2ac7271c4a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x2ac7271bd470" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x2ac7271bd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ac7271bd7c0"/>
        <function-ref name="txDone" scoped="" ref="0x2ac7271bd948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x2ac7271bb2e8" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x2ac7271bb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac7271bb638"/>
        <function-ref name="runTask" scoped="" ref="0x2ac7271bb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2ac7271ab5f8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ac7271ab5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7271ab948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ac7271ae1b8" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ac7271ae1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ac7271ae508"/>
        <function-ref name="txDone" scoped="" ref="0x2ac7271ae690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ac7271b6828" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ac7271b6828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ac7271b6b78"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ac7271b6d00"/>
        <function-ref name="setUctl" scoped="" ref="0x2ac7271b3020"/>
        <function-ref name="enableUart" scoped="" ref="0x2ac7271b31a8"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ac7271b3330"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ac7271b34b8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ac7271b3640"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ac7271b37c8"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ac7271b3950"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ac7271b3ad8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ac7271b3c60"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ac7271b3de8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ac7271b2020"/>
        <function-ref name="getUbr" scoped="" ref="0x2ac7271b22a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ac7271b2430"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ac7271b25b8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ac7271b2740"/>
        <function-ref name="isUart" scoped="" ref="0x2ac7271b28c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ac7271b2a50"/>
        <function-ref name="isSpi" scoped="" ref="0x2ac7271b2bd8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ac7271b2d60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ac7271b1020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ac7271b11a8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ac7271b1330"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7271b14b8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ac7271b1840"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ac7271b19c8"/>
        <function-ref name="setUbr" scoped="" ref="0x2ac7271b1b50"/>
        <function-ref name="tx" scoped="" ref="0x2ac7271b1cd8"/>
        <function-ref name="getUctl" scoped="" ref="0x2ac7271b1e60"/>
        <function-ref name="disableUart" scoped="" ref="0x2ac7271b0020"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ac7271b01a8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ac7271b0330"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ac7271b04b8"/>
        <function-ref name="rx" scoped="" ref="0x2ac7271b0640"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ac7271b07c8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ac7271b0950"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ac7271b0ad8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ac7271b0c60"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ac7271b0de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2ac72720b558" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2ac72720b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72720b8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72720ba30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72720bbb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72720bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72720a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72720a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72720a330"/>
        <function-ref name="get" scoped="" ref="0x2ac72720a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72720a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72720a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72720a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72720aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72720ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac727209020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7272091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ac7271a55d0" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ac7271a55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ac7271a5920"/>
        <function-ref name="txDone" scoped="" ref="0x2ac7271a5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x2ac727209558" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x2ac727209558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7272098a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac727209a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac727209bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727209d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac727208020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7272081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac727208330"/>
        <function-ref name="get" scoped="" ref="0x2ac7272084b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac727208640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7272087c8"/>
        <function-ref name="set" scoped="" ref="0x2ac727208950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac727208ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac727208c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac727207020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7272071a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x2ac727207558" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x2ac727207558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7272078a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac727207a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac727207bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727207d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac727206020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7272061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac727206330"/>
        <function-ref name="get" scoped="" ref="0x2ac7272064b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac727206640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7272067c8"/>
        <function-ref name="set" scoped="" ref="0x2ac727206950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac727206ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac727206c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac727205020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7272051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x2ac7271adc00" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x2ac7271adc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ac7271a9020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ac7271a91a8"/>
        <function-ref name="setUctl" scoped="" ref="0x2ac7271a9330"/>
        <function-ref name="enableUart" scoped="" ref="0x2ac7271a94b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ac7271a9640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ac7271a97c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ac7271a9950"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ac7271a9ad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ac7271a9c60"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ac7271a9de8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ac7271a8020"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ac7271a81a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ac7271a8330"/>
        <function-ref name="getUbr" scoped="" ref="0x2ac7271a85b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ac7271a8740"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ac7271a88c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ac7271a8a50"/>
        <function-ref name="isUart" scoped="" ref="0x2ac7271a8bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ac7271a8d60"/>
        <function-ref name="isSpi" scoped="" ref="0x2ac7271a7020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ac7271a71a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ac7271a7330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ac7271a74b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ac7271a7640"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7271a77c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ac7271a7b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ac7271a7cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x2ac7271a7e60"/>
        <function-ref name="tx" scoped="" ref="0x2ac7271a6020"/>
        <function-ref name="getUctl" scoped="" ref="0x2ac7271a61a8"/>
        <function-ref name="disableUart" scoped="" ref="0x2ac7271a6330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ac7271a64b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ac7271a6640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ac7271a67c8"/>
        <function-ref name="rx" scoped="" ref="0x2ac7271a6950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ac7271a6ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ac7271a6c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ac7271a6de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ac7271a5020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ac7271a51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x2ac7271c8a48" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2ac7271c8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ac7271c8d98"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ac7271a3020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ac7271a31a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ac7271a3330"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ac7271a34b8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ac7271a3640"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ac7271a37c8"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ac7271a3950"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac7271a3ad8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ac7271a3c60"/>
        <function-ref name="getData" scoped="" ref="0x2ac7271a3de8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ac7271a2020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ac7271a21a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ac7271a2430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ac7271a25b8"/>
        <function-ref name="getIV" scoped="" ref="0x2ac7271a2740"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ac7271a28c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ac7271a2a50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ac7271a2bd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ac7271a2d60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ac7271c7020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ac7271c71a8"/>
        <function-ref name="isI2C" scoped="" ref="0x2ac7271c7330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ac7271c74b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ac7271c7640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ac7271c79c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ac7271c7b50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ac7271c7cd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ac7271c7e60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ac7271c6020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ac7271c61a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ac7271c6330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ac7271c64b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ac7271c6640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ac7271c67c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ac7271c6950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ac7271c6ad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ac7271c6c60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ac7271c6de8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ac7271c5020"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ac7271c51a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ac7271c5330"/>
        <function-ref name="setData" scoped="" ref="0x2ac7271c54b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ac7271c5640"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ac7271c57c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ac7271c5950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ac7271c5ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ac7271c5c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ac7271c5de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ac727210420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ac7272105a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ac727210730"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ac7272108b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ac727210a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ac727210bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ac727210d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ac72720f020"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ac72720f1a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ac72720f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x2ac72720d658" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x2ac72720d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72720d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72720db30"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72720dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72720de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72720c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72720c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72720c330"/>
        <function-ref name="get" scoped="" ref="0x2ac72720c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72720c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72720c7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac72720c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72720cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72720cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72720b020"/>
        <function-ref name="clr" scoped="" ref="0x2ac72720b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ac7271a4020" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ac7271a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7271a4370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2ac72720f6e0" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2ac72720f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72720fa30"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72720fbb8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac72720fd40"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72720e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72720e1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac72720e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72720e4b8"/>
        <function-ref name="get" scoped="" ref="0x2ac72720e640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac72720e7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac72720e950"/>
        <function-ref name="set" scoped="" ref="0x2ac72720ead8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac72720ec60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac72720ede8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac72720d120"/>
        <function-ref name="clr" scoped="" ref="0x2ac72720d2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ac72806f8c8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ac72806f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ac72806fc18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac72806fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x2ac7280f6780" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x2ac7280f6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7280f6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ac7280ef8c8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7280ef8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ac7280efc18"/>
        <function-ref name="configure" scoped="" ref="0x2ac7280efda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2ac7280f6d58" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ac7280f6d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ac7280f50d8"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ac7280f5260"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ac7280f53e8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ac7280f5570"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ac7280f56f8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ac7280f5880"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ac7280f5a08"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ac7280f5b90"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac7280f5d18"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ac7280f4020"/>
        <function-ref name="getData" scoped="" ref="0x2ac7280f41a8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ac7280f4330"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ac7280f44b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ac7280f4740"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ac7280f48c8"/>
        <function-ref name="getIV" scoped="" ref="0x2ac7280f4a50"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ac7280f4bd8"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ac7280f4d60"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ac7280f3020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ac7280f31a8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ac7280f3330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ac7280f34b8"/>
        <function-ref name="isI2C" scoped="" ref="0x2ac7280f3640"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ac7280f37c8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ac7280f3950"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ac7280f3cd8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ac7280f3e60"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ac7280f2020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ac7280f21a8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ac7280f2330"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ac7280f24b8"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ac7280f2640"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ac7280f27c8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ac7280f2950"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ac7280f2ad8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ac7280f2c60"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ac7280f2de8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ac7280f1020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ac7280f11a8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ac7280f1330"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ac7280f14b8"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ac7280f1640"/>
        <function-ref name="setData" scoped="" ref="0x2ac7280f17c8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ac7280f1950"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ac7280f1ad8"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ac7280f1c60"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ac7280f1de8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ac7280f0020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ac7280f01a8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ac7280f0730"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ac7280f08b8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ac7280f0a40"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ac7280f0bc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ac7280f0d50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ac7280ef020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ac7280ef1a8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ac7280ef330"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ac7280ef4b8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ac7280ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x2ac7280f6020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x2ac7280f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ac7280f6370"/>
        <function-ref name="txDone" scoped="" ref="0x2ac7280f64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac728070b38" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac728070b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac72806f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac72806f1a8"/>
        <function-ref name="request" scoped="" ref="0x2ac72806f330"/>
        <function-ref name="granted" scoped="" ref="0x2ac72806f4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac72806f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x2ac72806e7c0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x2ac72806e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ac72806eb10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ac72806ec98"/>
        <function-ref name="setUctl" scoped="" ref="0x2ac72806ee20"/>
        <function-ref name="enableUart" scoped="" ref="0x2ac7280fa020"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ac7280fa1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ac7280fa330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ac7280fa4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ac7280fa640"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ac7280fa7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ac7280fa950"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ac7280faad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ac7280fac60"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ac7280fade8"/>
        <function-ref name="getUbr" scoped="" ref="0x2ac7280f9120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ac7280f92a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ac7280f9430"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ac7280f95b8"/>
        <function-ref name="isUart" scoped="" ref="0x2ac7280f9740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ac7280f98c8"/>
        <function-ref name="isSpi" scoped="" ref="0x2ac7280f9a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ac7280f9bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ac7280f9d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ac7280f8020"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ac7280f81a8"/>
        <function-ref name="getMode" scoped="" ref="0x2ac7280f8330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ac7280f86b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ac7280f8840"/>
        <function-ref name="setUbr" scoped="" ref="0x2ac7280f89c8"/>
        <function-ref name="tx" scoped="" ref="0x2ac7280f8b50"/>
        <function-ref name="getUctl" scoped="" ref="0x2ac7280f8cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x2ac7280f8e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ac7280f7020"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ac7280f71a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ac7280f7330"/>
        <function-ref name="rx" scoped="" ref="0x2ac7280f74b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ac7280f7640"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ac7280f77c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ac7280f7950"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ac7280f7ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ac7280f7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ac72806e060" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac72806e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ac72806e3b0"/>
        <function-ref name="userId" scoped="" ref="0x2ac72806e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ac7272a3020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ac7272a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ac7272a3370"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac7272a34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ac7272a1570" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7272a1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ac7272a18c0"/>
        <function-ref name="configure" scoped="" ref="0x2ac7272a1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ac7272a62b0" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ac7272a62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ac7272a6600"/>
        <function-ref name="txDone" scoped="" ref="0x2ac7272a6788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac7272a5ce8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac7272a5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7272a40a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7272a4228"/>
        <function-ref name="request" scoped="" ref="0x2ac7272a43b0"/>
        <function-ref name="granted" scoped="" ref="0x2ac7272a4538"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7272a46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ac7272a51c8" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ac7272a51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac7272a5518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ac7272a37f0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7272a37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ac7272a3b40"/>
        <function-ref name="userId" scoped="" ref="0x2ac7272a3cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ac72728dd98" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac72728dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ac72728b170"/>
        <function-ref name="userId" scoped="" ref="0x2ac72728b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x2ac72729d020" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x2ac72729d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ac72729d390"/>
        <function-ref name="txDone" scoped="" ref="0x2ac72729d518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x2ac72728d7c0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x2ac72728d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac72728db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x2ac72729d900" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x2ac72729d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac72729dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x2ac72728d020" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x2ac72728d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x2ac72728d370"/>
        <function-ref name="txDone" scoped="" ref="0x2ac72728d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ac727308698" loc="92:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ac727308698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ac727308a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac727308b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ac7273063c8" loc="96:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac7273063c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ac727306738"/>
        <function-ref name="configure" scoped="" ref="0x2ac7273068c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ac727308dd8" loc="93:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ac727308dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727307170"/>
        <function-ref name="requested" scoped="" ref="0x2ac7273072f8"/>
        <function-ref name="granted" scoped="" ref="0x2ac727307480"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727307608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac727307790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac727309838" loc="91:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac727309838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727309ba8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac727309d30"/>
        <function-ref name="request" scoped="" ref="0x2ac727308020"/>
        <function-ref name="granted" scoped="" ref="0x2ac7273081a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727308330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ac7273079d8" loc="94:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7273079d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ac727307d28"/>
        <function-ref name="userId" scoped="" ref="0x2ac727306020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac7281158e0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac7281158e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac728115c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ac728114020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2ac728114020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ac728114370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ac7281144f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ac728114680"/>
        <function-ref name="dequeue" scoped="" ref="0x2ac728114808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ac728112d58" loc="55:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x2ac728112d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ac7281110f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac728111278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ac728110980" loc="60:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ac728110980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ac728110cf0"/>
        <function-ref name="configure" scoped="" ref="0x2ac728110e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ac72810f130" loc="61:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ac72810f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ac72810f480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ac72810f608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ac72810f790"/>
        <function-ref name="dequeue" scoped="" ref="0x2ac72810f918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ac7281114c0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ac7281114c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac728111810"/>
        <function-ref name="requested" scoped="" ref="0x2ac728111998"/>
        <function-ref name="granted" scoped="" ref="0x2ac728111b20"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac728111ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ac728111e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac72810fb60" loc="62:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac72810fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac72810d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac72810d1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ac72810d330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac72810d4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac72810d640"/>
        <function-ref name="get" scoped="" ref="0x2ac72810d7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac72810d950"/>
        <function-ref name="led0On" scoped="" ref="0x2ac72810c020"/>
        <function-ref name="set" scoped="" ref="0x2ac72810dc60"/>
        <function-ref name="led2On" scoped="" ref="0x2ac72810dad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac72810dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac728112060" loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac728112060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7281123d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac728112558"/>
        <function-ref name="request" scoped="" ref="0x2ac7281126e0"/>
        <function-ref name="granted" scoped="" ref="0x2ac728112868"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7281129f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ac7281100e0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ac7281100e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ac728110430"/>
        <function-ref name="userId" scoped="" ref="0x2ac7281105b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ac72810c2e8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x2ac72810c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac72810c638"/>
        <function-ref name="runTask" scoped="" ref="0x2ac72810c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x2ac7272ffc70" loc="4:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x2ac7272ffc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ac7272fc020"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ac7272fc1a8"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ac7272fc330"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ac7272fc4b8"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ac7272fc640"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ac7272fc7c8"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ac7272fc950"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ac7272fcad8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac7272fcc60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ac7272fcde8"/>
        <function-ref name="getData" scoped="" ref="0x2ac72734b020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ac72734b1a8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ac72734b330"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ac72734b5b8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ac72734b740"/>
        <function-ref name="getIV" scoped="" ref="0x2ac72734b8c8"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ac72734ba50"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ac72734bbd8"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ac72734bd60"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ac72734a020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ac72734a1a8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ac72734a330"/>
        <function-ref name="isI2C" scoped="" ref="0x2ac72734a4b8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ac72734a640"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ac72734a7c8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ac72734ab50"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ac72734acd8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ac72734ae60"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ac727349020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ac7273491a8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ac727349330"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ac7273494b8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ac727349640"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ac7273497c8"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ac727349950"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ac727349ad8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ac727349c60"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ac727349de8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ac727348020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ac7273481a8"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ac727348330"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ac7273484b8"/>
        <function-ref name="setData" scoped="" ref="0x2ac727348640"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ac7273487c8"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ac727348950"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ac727348ad8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ac727348c60"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ac727348de8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ac727347020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ac7273475a8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ac727347730"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ac7273478b8"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ac727347a40"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ac727347bc8"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ac727347d50"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ac727346020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ac7273461a8"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ac727346330"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ac7273464b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x2ac72733c060" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x2ac72733c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ac72733c3b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x2ac72733c538"/>
        <function-ref name="setUctl" scoped="" ref="0x2ac72733c6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x2ac72733c848"/>
        <function-ref name="setUrctl" scoped="" ref="0x2ac72733c9d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ac72733cb58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x2ac72733cce0"/>
        <function-ref name="getUtctl" scoped="" ref="0x2ac72733ce68"/>
        <function-ref name="getUrctl" scoped="" ref="0x2ac72733b020"/>
        <function-ref name="resetUsart" scoped="" ref="0x2ac72733b1a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x2ac72733b330"/>
        <function-ref name="disableIntr" scoped="" ref="0x2ac72733b4b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x2ac72733b640"/>
        <function-ref name="getUbr" scoped="" ref="0x2ac72733b8c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ac72733ba50"/>
        <function-ref name="setUmctl" scoped="" ref="0x2ac72733bbd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x2ac72733bd60"/>
        <function-ref name="isUart" scoped="" ref="0x2ac72733a020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ac72733a1a8"/>
        <function-ref name="isSpi" scoped="" ref="0x2ac72733a330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x2ac72733a4b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ac72733a640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x2ac72733a7c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x2ac72733a950"/>
        <function-ref name="getMode" scoped="" ref="0x2ac72733aad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x2ac72733ae60"/>
        <function-ref name="clrIntr" scoped="" ref="0x2ac727339020"/>
        <function-ref name="setUbr" scoped="" ref="0x2ac7273391a8"/>
        <function-ref name="tx" scoped="" ref="0x2ac727339330"/>
        <function-ref name="getUctl" scoped="" ref="0x2ac7273394b8"/>
        <function-ref name="disableUart" scoped="" ref="0x2ac727339640"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ac7273397c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x2ac727339950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x2ac727339ad8"/>
        <function-ref name="rx" scoped="" ref="0x2ac727339c60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x2ac727339de8"/>
        <function-ref name="isUartTx" scoped="" ref="0x2ac727338020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x2ac7273381a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x2ac727338330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x2ac7273384b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x2ac7273367e0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x2ac7273367e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac727336b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ac727336cb8"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac727336e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727335020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7273351a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac727335330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7273354b8"/>
        <function-ref name="get" scoped="" ref="0x2ac727335640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7273357c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac727335950"/>
        <function-ref name="set" scoped="" ref="0x2ac727335ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac727335c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac727335de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac727334120"/>
        <function-ref name="clr" scoped="" ref="0x2ac7273342a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x2ac7273434e8" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x2ac7273434e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x2ac727343838"/>
        <function-ref name="getStartByte" scoped="" ref="0x2ac7273439c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x2ac727343b48"/>
        <function-ref name="setMasterMode" scoped="" ref="0x2ac727343cd0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x2ac727343e58"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x2ac727342020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x2ac7273421a8"/>
        <function-ref name="getStopBit" scoped="" ref="0x2ac727342330"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac7273424b8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x2ac727342640"/>
        <function-ref name="getData" scoped="" ref="0x2ac7273427c8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x2ac727342950"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x2ac727342ad8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x2ac727342d60"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x2ac727341020"/>
        <function-ref name="getIV" scoped="" ref="0x2ac7273411a8"/>
        <function-ref name="enableI2C" scoped="" ref="0x2ac727341330"/>
        <function-ref name="setStartBit" scoped="" ref="0x2ac7273414b8"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x2ac727341640"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x2ac7273417c8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x2ac727341950"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x2ac727341ad8"/>
        <function-ref name="isI2C" scoped="" ref="0x2ac727341c60"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x2ac727341de8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x2ac727340020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x2ac7273403a8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x2ac727340530"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x2ac7273406b8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x2ac727340840"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x2ac7273409c8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x2ac727340b50"/>
        <function-ref name="disableI2C" scoped="" ref="0x2ac727340cd8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x2ac727340e60"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x2ac72733f020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x2ac72733f1a8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x2ac72733f330"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x2ac72733f4b8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x2ac72733f640"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x2ac72733f7c8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x2ac72733f950"/>
        <function-ref name="getStartBit" scoped="" ref="0x2ac72733fad8"/>
        <function-ref name="setWordMode" scoped="" ref="0x2ac72733fc60"/>
        <function-ref name="setData" scoped="" ref="0x2ac72733fde8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x2ac72733e020"/>
        <function-ref name="getClockSource" scoped="" ref="0x2ac72733e1a8"/>
        <function-ref name="getWordMode" scoped="" ref="0x2ac72733e330"/>
        <function-ref name="setShiftClock" scoped="" ref="0x2ac72733e4b8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x2ac72733e640"/>
        <function-ref name="enableNoAck" scoped="" ref="0x2ac72733e7c8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x2ac72733ed50"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x2ac72733d020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x2ac72733d1a8"/>
        <function-ref name="setStopBit" scoped="" ref="0x2ac72733d330"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x2ac72733d4b8"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x2ac72733d640"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x2ac72733d7c8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x2ac72733d950"/>
        <function-ref name="setStartByte" scoped="" ref="0x2ac72733dad8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x2ac72733dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x2ac727338868" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x2ac727338868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac727338bb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac727338d40"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac727337020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7273371a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac727337330"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7273374b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac727337640"/>
        <function-ref name="get" scoped="" ref="0x2ac7273377c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac727337950"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac727337ad8"/>
        <function-ref name="set" scoped="" ref="0x2ac727337c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac727337de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac727336020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7273362a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac727336430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ac72742ba88" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ac72742ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742a020"/>
        <function-ref name="write" scoped="" ref="0x2ac72742a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ac727435100" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ac727435100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727435450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ac72742fa88" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac72742fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742fdd8"/>
        <function-ref name="write" scoped="" ref="0x2ac72742e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ac727429470" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ac727429470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274297c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727429948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ac727422c10" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ac727422c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727421020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ac727429c10" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ac727429c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727428020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ac72746a2e8" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ac72746a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746a638"/>
        <function-ref name="write" scoped="" ref="0x2ac72746a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ac72746c2e8" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ac72746c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746c638"/>
        <function-ref name="write" scoped="" ref="0x2ac72746c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ac7274343a0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ac7274343a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7274346f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ac727472470" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ac727472470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274727c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727472948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ac72746e2e8" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac72746e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746e638"/>
        <function-ref name="write" scoped="" ref="0x2ac72746e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ac72742ea88" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ac72742ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742edd8"/>
        <function-ref name="write" scoped="" ref="0x2ac72742c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ac72742ca88" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ac72742ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742cdd8"/>
        <function-ref name="write" scoped="" ref="0x2ac72742b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ac727423470" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ac727423470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274237c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727423948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ac727425c10" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ac727425c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727424020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ac727428470" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ac727428470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274287c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727428948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ac727437a90" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727437a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ac727437de0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ac727436020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ac7274361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ac727433c50" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac727433c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727431020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ac7274312e8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ac7274312e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727431738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ac727471a38" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac727471a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727471d88"/>
        <function-ref name="write" scoped="" ref="0x2ac727470020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ac727431a00" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ac727431a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727431d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ac72746ea88" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac72746ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746edd8"/>
        <function-ref name="write" scoped="" ref="0x2ac72746c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ac727433020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac727433020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727433370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ac727473c10" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ac727473c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727472020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ac72742c2e8" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ac72742c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742c638"/>
        <function-ref name="write" scoped="" ref="0x2ac72742c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ac72742e2e8" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac72742e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742e638"/>
        <function-ref name="write" scoped="" ref="0x2ac72742e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ac727436a88" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ac727436a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727436dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ac727475c10" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ac727475c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727473020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ac727421470" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ac727421470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274217c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727421948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ac727473470" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ac727473470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274737c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727473948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ac72746ba88" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ac72746ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746bdd8"/>
        <function-ref name="write" scoped="" ref="0x2ac72746a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ac72746ca88" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ac72746ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746cdd8"/>
        <function-ref name="write" scoped="" ref="0x2ac72746b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ac727424470" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ac727424470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274247c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727424948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ac727421c10" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ac727421c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727475020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ac72746fa88" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ac72746fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746fdd8"/>
        <function-ref name="write" scoped="" ref="0x2ac72746e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ac727427470" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ac727427470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274277c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727427948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ac72746aa88" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ac72746aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac72746add8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac727469020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274691a8"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac727469330"/>
        <function-ref name="readDone" scoped="" ref="0x2ac7274694b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ac727436470" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ac727436470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7274367c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ac72742f2e8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ac72742f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742f638"/>
        <function-ref name="write" scoped="" ref="0x2ac72742f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ac72742b2e8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ac72742b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742b638"/>
        <function-ref name="write" scoped="" ref="0x2ac72742b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ac727423c10" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ac727423c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727422020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ac727428c10" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ac727428c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727427020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ac727422470" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ac727422470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274227c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727422948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ac72742a470" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ac72742a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72742a7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac72742a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ac727435718" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ac727435718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727435a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ac72742ac10" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ac72742ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727429020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac727438e60" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac727438e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7274371e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac727437370"/>
        <function-ref name="request" scoped="" ref="0x2ac7274374f8"/>
        <function-ref name="granted" scoped="" ref="0x2ac727437680"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727437808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ac727430060" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ac727430060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7274303b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ac727430c90" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ac727430c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72742f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ac72746f2e8" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ac72746f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746f638"/>
        <function-ref name="write" scoped="" ref="0x2ac72746f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ac727470a88" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ac727470a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727470dd8"/>
        <function-ref name="write" scoped="" ref="0x2ac72746f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ac727433638" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac727433638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727433988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ac7274702e8" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac7274702e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727470638"/>
        <function-ref name="write" scoped="" ref="0x2ac7274707c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ac72746b2e8" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ac72746b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72746b638"/>
        <function-ref name="write" scoped="" ref="0x2ac72746b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ac727424c10" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ac727424c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727423020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ac727475470" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ac727475470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274757c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727475948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ac727435d30" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ac727435d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7274340d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ac7274349b8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ac7274349b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727434d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ac727427c10" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ac727427c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727425020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ac727430678" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ac727430678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7274309c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ac727425470" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ac727425470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274257c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727425948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ac727472c10" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ac727472c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274715e8"/>
        <function-ref name="write" scoped="" ref="0x2ac727471770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ac727469780" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ac727469780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727469ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac727469c58"/>
        <function-ref name="write" scoped="" ref="0x2ac727469de0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac727468020"/>
        <function-ref name="readDone" scoped="" ref="0x2ac7274681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ac727454470" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ac727454470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274549c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727454b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ac72745f900" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ac72745f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ac727457470" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac727457470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274577c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727457948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ac727453d98" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ac727453d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727451170"/>
        <function-ref name="write" scoped="" ref="0x2ac7274512f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ac7274a0470" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ac7274a0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274a07c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7274a0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ac7274515c0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ac7274515c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727451910"/>
        <function-ref name="write" scoped="" ref="0x2ac727451a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ac7274957c0" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ac7274957c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727495b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727495c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ac7274977c0" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ac7274977c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727497b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727497c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ac72745dc50" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ac72745dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ac72749dc10" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ac72749dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749c020"/>
        <function-ref name="write" scoped="" ref="0x2ac72749c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ac7274987c0" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7274987c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727498b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727498c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ac727456470" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ac727456470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274567c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727456948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ac727455470" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ac727455470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274557c0"/>
        <function-ref name="write" scoped="" ref="0x2ac727455948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ac72744dc10" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ac72744dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72744b020"/>
        <function-ref name="write" scoped="" ref="0x2ac72744b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ac72744e470" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ac72744e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72744e7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac72744e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ac727451d60" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ac727451d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274500d8"/>
        <function-ref name="write" scoped="" ref="0x2ac727450260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ac7274602a8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac7274602a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ac7274605f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ac727460780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ac727460908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ac72745b638" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac72745b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ac72745bc50" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ac72745bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ac72749b060" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac72749b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749b3b0"/>
        <function-ref name="write" scoped="" ref="0x2ac72749b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ac72745a3a0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ac72745a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ac727497020" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac727497020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727497370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274974f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ac72745c900" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac72745c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ac72749d470" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ac72749d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749d7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac72749d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ac727456c10" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ac727456c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727455020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ac727457c10" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac727457c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727456020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ac72745f2e8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ac72745f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745f638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ac72749e470" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ac72749e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749e7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac72749e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ac7274a0c10" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ac7274a0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749f020"/>
        <function-ref name="write" scoped="" ref="0x2ac72749f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ac72749ec10" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ac72749ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749d020"/>
        <function-ref name="write" scoped="" ref="0x2ac72749d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ac727495020" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ac727495020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727495370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274954f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ac727496020" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ac727496020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727496370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274964f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ac72744ec10" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ac72744ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72744d020"/>
        <function-ref name="write" scoped="" ref="0x2ac72744d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ac72749f470" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ac72749f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749f7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac72749f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ac727498020" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ac727498020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727498370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274984f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ac727450cc8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ac727450cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72744f0a0"/>
        <function-ref name="write" scoped="" ref="0x2ac72744f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ac727493020" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ac727493020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727493370"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac7274934f8"/>
        <function-ref name="write" scoped="" ref="0x2ac727493680"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac727493808"/>
        <function-ref name="readDone" scoped="" ref="0x2ac727493990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ac727460bd0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ac727460bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ac727458c50" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ac727458c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727457020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ac727455c10" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ac727455c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727454020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ac72744b470" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ac72744b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72744b7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac72744b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ac727450528" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ac727450528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727450878"/>
        <function-ref name="write" scoped="" ref="0x2ac727450a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ac72744bc10" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ac72744bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274a0020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ac727454e10" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ac727454e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274531a8"/>
        <function-ref name="write" scoped="" ref="0x2ac727453330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ac72745d020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ac72745d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ac7274535f8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7274535f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727453948"/>
        <function-ref name="write" scoped="" ref="0x2ac727453ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac727461558" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac727461558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7274618a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac727461a30"/>
        <function-ref name="request" scoped="" ref="0x2ac727461bb8"/>
        <function-ref name="granted" scoped="" ref="0x2ac727461d40"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727460020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ac72745a9b8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ac72745a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ac727458638" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ac727458638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727458988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ac7274997c0" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ac7274997c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727499b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727499c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ac727499020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ac727499020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727499370"/>
        <function-ref name="write" scoped="" ref="0x2ac7274994f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ac72745b020" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac72745b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ac72749b800" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac72749b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749bb50"/>
        <function-ref name="write" scoped="" ref="0x2ac72749bcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ac7274967c0" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ac7274967c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727496b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727496c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ac72744d470" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ac72744d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72744d7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac72744d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ac72749fc10" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ac72749fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749e020"/>
        <function-ref name="write" scoped="" ref="0x2ac72749e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ac72745d638" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ac72745d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ac72745c2e8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ac72745c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac72745c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ac72744f4f0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ac72744f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72744f840"/>
        <function-ref name="write" scoped="" ref="0x2ac72744f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ac727458020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ac727458020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727458370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ac72744fc90" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ac72744fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72744e020"/>
        <function-ref name="write" scoped="" ref="0x2ac72744e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ac72749c470" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ac72749c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72749cbc0"/>
        <function-ref name="write" scoped="" ref="0x2ac72749cd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ac727493c58" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ac727493c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727492020"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac7274921a8"/>
        <function-ref name="write" scoped="" ref="0x2ac727492330"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac7274924b8"/>
        <function-ref name="readDone" scoped="" ref="0x2ac727492640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2ac727489690" loc="54:/home/wwhuang/git/tinyos-lab11/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ac727489690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ac7274899e0"/>
        <function-ref name="changed" scoped="" ref="0x2ac727489b68"/>
        <function-ref name="amGroup" scoped="" ref="0x2ac727489cf0"/>
        <function-ref name="setAddress" scoped="" ref="0x2ac727489e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2ac72748bcd8" loc="13:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ac72748bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ac7274cb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2ac7274c7190" loc="5:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ac7274c7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ac7274c74e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x2ac7274c4648" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ac7274c4648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274c4998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2ac7274caad0" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ac7274caad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274cae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2ac7274af3f8" loc="14:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ac7274af3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274af748"/>
        <function-ref name="write" scoped="" ref="0x2ac7274af8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x2ac7274afc40" loc="15:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x2ac7274afc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac7274b3020"/>
        <function-ref name="stop" scoped="" ref="0x2ac7274b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x2ac7274b5b08" loc="11:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x2ac7274b5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274b5e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2ac7274b8ba8" loc="8:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ac7274b8ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274f7020"/>
        <function-ref name="write" scoped="" ref="0x2ac7274f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2ac7274f7530" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2ac7274f7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7274f7880"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7274f7a08"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7274f7b90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7274f7d18"/>
        <function-ref name="get" scoped="" ref="0x2ac7274f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7274f61a8"/>
        <function-ref name="set" scoped="" ref="0x2ac7274f6330"/>
        <function-ref name="clr" scoped="" ref="0x2ac7274f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2ac7274ed748" loc="15:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ac7274ed748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726959150"/>
            <typename><typedef-ref name="TMicro" ref="0x2ac7269594a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ac7274f1578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2ac7274f3108" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x2ac7274f3108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7274f3458"/>
        <function-ref name="write" scoped="" ref="0x2ac7274f35e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x2ac7274f3968" loc="14:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x2ac7274f3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7274f3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7274f3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7274f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7274f21a8"/>
        <function-ref name="get" scoped="" ref="0x2ac7274f2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7274f24b8"/>
        <function-ref name="set" scoped="" ref="0x2ac7274f2640"/>
        <function-ref name="clr" scoped="" ref="0x2ac7274f27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ac7274f5b78" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ac7274f5b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726959150"/>
            <typename><typedef-ref name="TMicro" ref="0x2ac7269594a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ac7274ce8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ac7274cc920" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x2ac7274cc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726959150"/>
            <typename><typedef-ref name="TMicro" ref="0x2ac7269594a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ac727523698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ac727523d10" loc="54:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac727523d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726959150"/>
            <typename><typedef-ref name="TMicro" ref="0x2ac7269594a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac727515ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7275134a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac727513020"/>
        <function-ref name="overflow" scoped="" ref="0x2ac727513930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x2ac72750f178" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x2ac72750f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726959150"/>
            <typename><typedef-ref name="TMicro" ref="0x2ac7269594a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac72750e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72750e930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72750e4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac72750edb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ac7275098c0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ac7275098c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac727509c10"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac727509d98"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac727508020"/>
        <function-ref name="get" scoped="" ref="0x2ac7275081a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac727508330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7275084b8"/>
        <function-ref name="getMode" scoped="" ref="0x2ac727508640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7275087c8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac727508950"/>
        <function-ref name="setMode" scoped="" ref="0x2ac727508ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac727508c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ac72750b740" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac72750b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726959150"/>
            <typename><typedef-ref name="TMicro" ref="0x2ac7269594a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac72750a578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac727509020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72750aa00"/>
        <function-ref name="overflow" scoped="" ref="0x2ac7275094a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x2ac7274a1378" loc="3:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x2ac7274a1378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7274a16c8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7274a1850"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7274a19d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7274a1b60"/>
        <function-ref name="get" scoped="" ref="0x2ac7274a1ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7274a1e70"/>
        <function-ref name="set" scoped="" ref="0x2ac727502020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7275021a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2ac7275005f8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2ac7275005f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac727500948"/>
        <function-ref name="isInput" scoped="" ref="0x2ac727500ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x2ac727500c58"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727500de0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7274ff020"/>
        <function-ref name="getResistor" scoped="" ref="0x2ac7274ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7274ff330"/>
        <function-ref name="get" scoped="" ref="0x2ac7274ff4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2ac7274ff640"/>
        <function-ref name="getRaw" scoped="" ref="0x2ac7274ff7c8"/>
        <function-ref name="set" scoped="" ref="0x2ac7274ff950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2ac7274ffad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2ac7274ffc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2ac7274fe020"/>
        <function-ref name="clr" scoped="" ref="0x2ac7274fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2ac7275014e0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2ac7275014e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac727501830"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7275019b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727501b40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac727501cc8"/>
        <function-ref name="get" scoped="" ref="0x2ac727501e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac727500020"/>
        <function-ref name="set" scoped="" ref="0x2ac7275001a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac727500330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ac7274fa020" loc="14:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ac7274fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac7274fa370"/>
        <function-ref name="stop" scoped="" ref="0x2ac7274fa4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ac727544140" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ac727544140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ac727544490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ac727544618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ac7275447a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ac727544928"/>
        <function-ref name="setCca" scoped="" ref="0x2ac727544ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ac727544c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ac727543cc0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ac727543cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ac7275420a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2ac727545480" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ac727545480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7275457d0"/>
        <function-ref name="cancel" scoped="" ref="0x2ac727545958"/>
        <function-ref name="modify" scoped="" ref="0x2ac727545ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727545c68"/>
        <function-ref name="resend" scoped="" ref="0x2ac727545df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ac727548c58" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ac727548c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac727545020"/>
        <function-ref name="stop" scoped="" ref="0x2ac7275451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ac727542458" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2ac727542458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ac7275427a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ac7275377c0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ac7275377c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ac727537b10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ac727537c98"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ac727537e20"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ac727536020"/>
        <function-ref name="setCca" scoped="" ref="0x2ac7275361a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ac727536330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ac72752f460" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ac72752f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ac72752e900"/>
        <function-ref name="clear" scoped="" ref="0x2ac72752c020"/>
        <function-ref name="isValid" scoped="" ref="0x2ac72752e220"/>
        <function-ref name="set" scoped="" ref="0x2ac72752c700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ac727575de0" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ac727575de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727574170"/>
        <function-ref name="write" scoped="" ref="0x2ac7275742f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ac727574650" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ac727574650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275749a0"/>
        <function-ref name="write" scoped="" ref="0x2ac727574b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ac727536738" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ac727536738"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ac727536a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2ac727577478" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ac727577478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275777c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2ac72757dd60" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x2ac72757dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ac72752a0d8"/>
        <function-ref name="disable" scoped="" ref="0x2ac72752a260"/>
        <function-ref name="captured" scoped="" ref="0x2ac72752a3e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ac72752a570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2ac727535820" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x2ac727535820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727531020"/>
        <function-ref name="fired" scoped="" ref="0x2ac727533020"/>
        <function-ref name="startAt" scoped="" ref="0x2ac727533930"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac7275334a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac7275314a8"/>
        <function-ref name="start" scoped="" ref="0x2ac727534598"/>
        <function-ref name="stop" scoped="" ref="0x2ac727534a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ac727531940" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac727531940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac727531c90"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac727531e18"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac727530020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac7275301a8"/>
        <function-ref name="getPower" scoped="" ref="0x2ac727530330"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac7275304b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2ac727579538" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac727579538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727579888"/>
        <function-ref name="write" scoped="" ref="0x2ac727579a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ac727579da8" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ac727579da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727578170"/>
        <function-ref name="write" scoped="" ref="0x2ac7275782f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2ac72756d750" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ac72756d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac72756daa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ac72756dc28"/>
        <function-ref name="sfd" scoped="" ref="0x2ac72756ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac7275389f8" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac7275389f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727538d48"/>
        <function-ref name="cancel" scoped="" ref="0x2ac727537020"/>
        <function-ref name="modify" scoped="" ref="0x2ac7275371a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727537330"/>
        <function-ref name="resend" scoped="" ref="0x2ac7275374b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2ac72757bcb0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac72757bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ac72757a0a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ac72757a228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ac72757a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2ac727577b68" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac727577b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727576020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ac727529c98" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ac727529c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac727526020"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7275261a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727526330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac7275264b8"/>
        <function-ref name="get" scoped="" ref="0x2ac727526640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7275267c8"/>
        <function-ref name="set" scoped="" ref="0x2ac727526950"/>
        <function-ref name="clr" scoped="" ref="0x2ac727526ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac72753ab28" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac72753ab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72753ae78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ac7275307e8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7275307e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac727530b38"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac727530cc0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac727530e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2ac72757d1d8" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ac72757d1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac72757d528"/>
        <function-ref name="isSet" scoped="" ref="0x2ac72757d6b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ac72757d838"/>
        <function-ref name="set" scoped="" ref="0x2ac72757d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ac7275763d0" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac7275763d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727576920"/>
        <function-ref name="write" scoped="" ref="0x2ac727576aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ac72757b020" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ac72757b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac72757b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac72757b4f8"/>
        <function-ref name="request" scoped="" ref="0x2ac72757b680"/>
        <function-ref name="granted" scoped="" ref="0x2ac72757b808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac72757b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2ac72752a8b8" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x2ac72752a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72752ad08"/>
        <function-ref name="isInput" scoped="" ref="0x2ac727529020"/>
        <function-ref name="toggle" scoped="" ref="0x2ac7275291a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac727529330"/>
        <function-ref name="get" scoped="" ref="0x2ac7275294b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac727529640"/>
        <function-ref name="set" scoped="" ref="0x2ac7275297c8"/>
        <function-ref name="clr" scoped="" ref="0x2ac727529950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ac727574e80" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ac727574e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275731f8"/>
        <function-ref name="write" scoped="" ref="0x2ac727573380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2ac7275736f0" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ac7275736f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727573a40"/>
        <function-ref name="write" scoped="" ref="0x2ac727573bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ac727578670" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ac727578670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275789c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2ac727526e20" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x2ac727526e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac72757c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac72757c330"/>
        <function-ref name="toggle" scoped="" ref="0x2ac72757c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac72757c640"/>
        <function-ref name="get" scoped="" ref="0x2ac72757c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac72757c950"/>
        <function-ref name="set" scoped="" ref="0x2ac72757cad8"/>
        <function-ref name="clr" scoped="" ref="0x2ac72757cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac7275700c0" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac7275700c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac727570410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac727570598"/>
        <function-ref name="led1On" scoped="" ref="0x2ac727570720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac7275708a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac727570a30"/>
        <function-ref name="get" scoped="" ref="0x2ac727570bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac727570d40"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac72756f4b8"/>
        <function-ref name="set" scoped="" ref="0x2ac72756f020"/>
        <function-ref name="led0On" scoped="" ref="0x2ac72756f1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2ac72756f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ac727575558" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ac727575558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275758a8"/>
        <function-ref name="write" scoped="" ref="0x2ac727575a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ac727538198" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ac727538198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac7275384e8"/>
        <function-ref name="stop" scoped="" ref="0x2ac727538670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2ac72757a720" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ac72757a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac72757aa70"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac72757abf8"/>
        <function-ref name="write" scoped="" ref="0x2ac72757ad80"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac727579020"/>
        <function-ref name="readDone" scoped="" ref="0x2ac7275791a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2ac727578d40" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ac727578d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275770d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2ac727576e30" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ac727576e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ac727536e80" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x2ac727536e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ac7275351f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ac7275e7470" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ac7275e7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e79c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e7b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ac7275f29b8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ac7275f29b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275f2d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ac7275ea470" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac7275ea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275ea7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275ea948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ac7275e6d98" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ac7275e6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e4170"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e42f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ac7275dd470" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ac7275dd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275dd7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275dd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ac7275e45c0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ac7275e45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e4910"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e4a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ac72762e7c0" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ac72762e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72762eb10"/>
        <function-ref name="write" scoped="" ref="0x2ac72762ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ac7276307c0" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ac7276307c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727630b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727630c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ac7275f0c50" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ac7275f0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ac7275dac10" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ac7275dac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275d9020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ac7276317c0" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7276317c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727631b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727631c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ac7275e9470" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ac7275e9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e97c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ac7275e8470" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ac7275e8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e87c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ac7275e0c10" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ac7275e0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275df020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ac7275e1470" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ac7275e1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e17c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ac7275e4d60" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ac7275e4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e30d8"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ac7275f3430" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac7275f3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ac7275f3780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ac7275f3908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ac7275f3a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ac7275ee638" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac7275ee638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275ee988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ac7275eec50" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ac7275eec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275ed0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ac727634060" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac727634060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7276343b0"/>
        <function-ref name="write" scoped="" ref="0x2ac727634538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ac7275ed3a0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ac7275ed3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275ed6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ac727630020" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac727630020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727630370"/>
        <function-ref name="write" scoped="" ref="0x2ac7276304f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ac7275ef900" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac7275ef900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275efc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ac7275da470" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ac7275da470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275da7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275da948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ac7275e9c10" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ac7275e9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e8020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ac7275eac10" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac7275eac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e9020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ac7275f23a0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ac7275f23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275f26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ac7275db470" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ac7275db470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275db7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275db948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ac7275ddc10" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ac7275ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275dc020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ac7275dbc10" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ac7275dbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275da020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ac72762e020" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ac72762e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72762e370"/>
        <function-ref name="write" scoped="" ref="0x2ac72762e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ac72762f020" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ac72762f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72762f370"/>
        <function-ref name="write" scoped="" ref="0x2ac72762f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ac7275e1c10" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ac7275e1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e0020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ac7275dc470" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ac7275dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275dc7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275dc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ac727631020" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ac727631020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727631370"/>
        <function-ref name="write" scoped="" ref="0x2ac7276314f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ac7275e3cc8" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ac7275e3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e20a0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e2228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ac72762d020" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ac72762d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac72762d370"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac72762d4f8"/>
        <function-ref name="write" scoped="" ref="0x2ac72762d680"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac72762d808"/>
        <function-ref name="readDone" scoped="" ref="0x2ac72762d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ac7275f3d58" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ac7275f3d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275f20d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ac7275ecc50" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ac7275ecc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275ea020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ac7275e8c10" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ac7275e8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e7020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ac7275df470" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ac7275df470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275df7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275df948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ac7275e3528" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ac7275e3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e3878"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ac7275dfc10" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ac7275dfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275dd020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ac7275e7e10" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ac7275e7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e61a8"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ac7275f0020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ac7275f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275f0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ac7275e65f8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7275e65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e6948"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac7275f47d0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac7275f47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7275f4b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7275f4ca8"/>
        <function-ref name="request" scoped="" ref="0x2ac7275f4e30"/>
        <function-ref name="granted" scoped="" ref="0x2ac7275f3020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7275f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ac7275ed9b8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ac7275ed9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275edd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ac7275ec638" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ac7275ec638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275ec988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ac7276327c0" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ac7276327c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727632b10"/>
        <function-ref name="write" scoped="" ref="0x2ac727632c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ac727632020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ac727632020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727632370"/>
        <function-ref name="write" scoped="" ref="0x2ac7276324f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ac7275ee020" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac7275ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275ee370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ac727634800" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac727634800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727634b50"/>
        <function-ref name="write" scoped="" ref="0x2ac727634cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ac72762f7c0" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ac72762f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac72762fb10"/>
        <function-ref name="write" scoped="" ref="0x2ac72762fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ac7275e0470" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ac7275e0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e07c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ac7275dcc10" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ac7275dcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275db020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ac7275f0638" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ac7275f0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275f0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ac7275ef2e8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ac7275ef2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275ef638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ac7275e24f0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ac7275e24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e2840"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ac7275ec020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ac7275ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7275ec370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ac7275e2c90" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ac7275e2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275e1020"/>
        <function-ref name="write" scoped="" ref="0x2ac7275e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ac7275d9470" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ac7275d9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7275d9bc0"/>
        <function-ref name="write" scoped="" ref="0x2ac7275d9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ac72762dc58" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ac72762dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac72762b020"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac72762b1a8"/>
        <function-ref name="write" scoped="" ref="0x2ac72762b330"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac72762b4b8"/>
        <function-ref name="readDone" scoped="" ref="0x2ac72762b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ac72761e808" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ac72761e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac72761eb58"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ac72761ece0"/>
        <function-ref name="sfd" scoped="" ref="0x2ac72761ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac72761d168" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac72761d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac72761d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ac72761d8c0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2ac72761d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ac72761dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ac72761e020" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ac72761e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac72761e370"/>
        <function-ref name="stop" scoped="" ref="0x2ac72761e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2ac727616688" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x2ac727616688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac7276169d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ac727616b60"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727616ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac727616e70"/>
        <function-ref name="get" scoped="" ref="0x2ac727615020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac7276151a8"/>
        <function-ref name="set" scoped="" ref="0x2ac727615330"/>
        <function-ref name="clr" scoped="" ref="0x2ac7276154b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ac72760eaf0" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ac72760eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ac72760ee40"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ac72760d020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ac72760d1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2ac72760d330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ac72760d4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ac72760d640"/>
        <function-ref name="setChannel" scoped="" ref="0x2ac72760d7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ac72760d950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ac72760dad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ac72760dc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ac72760dde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ac72760c020"/>
        <function-ref name="sync" scoped="" ref="0x2ac72760c1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ac72760c430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ac72760c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2ac727655e38" loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x2ac727655e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac7276531c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ac727653348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ac72760cb80" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ac72760cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ac72760a020"/>
        <function-ref name="clear" scoped="" ref="0x2ac72760a700"/>
        <function-ref name="isValid" scoped="" ref="0x2ac72760b8f8"/>
        <function-ref name="set" scoped="" ref="0x2ac72760ade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2ac727615818" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x2ac727615818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac727615b68"/>
        <function-ref name="isInput" scoped="" ref="0x2ac727615cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727615e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac727614030"/>
        <function-ref name="get" scoped="" ref="0x2ac7276141b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac727614340"/>
        <function-ref name="set" scoped="" ref="0x2ac7276144c8"/>
        <function-ref name="clr" scoped="" ref="0x2ac727614650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ac7276076a8" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ac7276076a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7276079f8"/>
        <function-ref name="write" scoped="" ref="0x2ac727607b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ac727662020" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ac727662020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727662370"/>
        <function-ref name="write" scoped="" ref="0x2ac7276624f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2ac727661108" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ac727661108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727661458"/>
        <function-ref name="write" scoped="" ref="0x2ac7276615e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ac727610328" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac727610328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac727610678"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac727610800"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac727610988"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac727610b10"/>
        <function-ref name="getPower" scoped="" ref="0x2ac727610c98"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac727610e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ac727619c80" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x2ac727619c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac727618020"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ac7276181a8"/>
        <function-ref name="sfd" scoped="" ref="0x2ac727618330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2ac727611398" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ac727611398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7276116e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ac727617420" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x2ac727617420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ac727617770"/>
        <function-ref name="isInput" scoped="" ref="0x2ac7276178f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ac727617a80"/>
        <function-ref name="isOutput" scoped="" ref="0x2ac727617c08"/>
        <function-ref name="get" scoped="" ref="0x2ac727617d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ac727616020"/>
        <function-ref name="set" scoped="" ref="0x2ac7276161a8"/>
        <function-ref name="clr" scoped="" ref="0x2ac727616330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2ac727661970" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac727661970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727661cc0"/>
        <function-ref name="write" scoped="" ref="0x2ac727661e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac72761ce00" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac72761ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7276191a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ac72760e188" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac72760e188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac72760e4d8"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac72760e660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac72760e7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac727618600" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac727618600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac727618950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ac7276136c0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x2ac7276136c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727613a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac727613b98"/>
        <function-ref name="request" scoped="" ref="0x2ac727613d20"/>
        <function-ref name="granted" scoped="" ref="0x2ac727612020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7276121a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ac727662850" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ac727662850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727662ba0"/>
        <function-ref name="write" scoped="" ref="0x2ac727662d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2ac727612518" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ac727612518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727612868"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac7276129f0"/>
        <function-ref name="write" scoped="" ref="0x2ac727612b78"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac727612d00"/>
        <function-ref name="readDone" scoped="" ref="0x2ac727611020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ac727660210" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ac727660210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727660760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ac727618d58" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x2ac727618d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ac7276170d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac727660a18" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac727660a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac727660d68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac72765f020"/>
        <function-ref name="led1On" scoped="" ref="0x2ac72765f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac72765f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac72765f4b8"/>
        <function-ref name="get" scoped="" ref="0x2ac72765f640"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac72765f7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac72765fde8"/>
        <function-ref name="set" scoped="" ref="0x2ac72765f950"/>
        <function-ref name="led0On" scoped="" ref="0x2ac72765fad8"/>
        <function-ref name="led2On" scoped="" ref="0x2ac72765fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ac727608dc8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ac727608dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727607170"/>
        <function-ref name="write" scoped="" ref="0x2ac7276072f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2ac7276086c8" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ac7276086c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727608a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2ac727614a30" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ac727614a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ac727614d80"/>
        <function-ref name="disable" scoped="" ref="0x2ac727613020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ac7276131a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ac727613330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2ac727611a88" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac727611a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727610020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ac727619498" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x2ac727619498"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ac7276197e8"/>
        <function-ref name="stop" scoped="" ref="0x2ac727619970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ac7276b26b0" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac7276b26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ac7276b2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ac7276b64b0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276b64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac7276b6800"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac7276b6988"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac7276b6b10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac7276b6c98"/>
        <function-ref name="getPower" scoped="" ref="0x2ac7276b6e20"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac7276b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ac7276b0130" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac7276b0130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ac7276af588"/>
        <function-ref name="clear" scoped="" ref="0x2ac7276afc68"/>
        <function-ref name="isValid" scoped="" ref="0x2ac7276b0e80"/>
        <function-ref name="set" scoped="" ref="0x2ac7276ae380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ac7276b3d08" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276b3d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac7276b20a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac7276b2228"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac7276b23b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ac7276aaac8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ac7276aaac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac7276aae18"/>
        <function-ref name="isSet" scoped="" ref="0x2ac7276a9020"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7276a91a8"/>
        <function-ref name="set" scoped="" ref="0x2ac7276a9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ac7276ac020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ac7276ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ac7276ab478"/>
        <function-ref name="clear" scoped="" ref="0x2ac7276abb58"/>
        <function-ref name="isValid" scoped="" ref="0x2ac7276acd70"/>
        <function-ref name="set" scoped="" ref="0x2ac7276aa278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ac7276b33b8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ac7276b33b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ac7276b3708"/>
        <function-ref name="noAck" scoped="" ref="0x2ac7276b3890"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ac7276b3a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ac7276a3630" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ac7276a3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ac7276a3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ac7276a62e8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7276a62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac7276a6638"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac7276a67c0"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac7276a6948"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac7276a6ad0"/>
        <function-ref name="getPower" scoped="" ref="0x2ac7276a6c58"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac7276a6de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ac72769a618" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ac72769a618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac72769a968"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac72769aaf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac72769ac78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac72769ae00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac727699020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ac7276a2060" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ac7276a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ac7276a14b8"/>
        <function-ref name="clear" scoped="" ref="0x2ac7276a1b98"/>
        <function-ref name="isValid" scoped="" ref="0x2ac7276a2db0"/>
        <function-ref name="set" scoped="" ref="0x2ac7276a02b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ac7276a4b60" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7276a4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac7276a3020"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac7276a31a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac7276a3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ac72769cac8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ac72769cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac72769ce18"/>
        <function-ref name="isSet" scoped="" ref="0x2ac72769a020"/>
        <function-ref name="cancel" scoped="" ref="0x2ac72769a1a8"/>
        <function-ref name="set" scoped="" ref="0x2ac72769a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2ac7276958b0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x2ac7276958b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac727698490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ac727698b20" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ac727698b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac727697728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ac72769e020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ac72769e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ac72769d478"/>
        <function-ref name="clear" scoped="" ref="0x2ac72769db58"/>
        <function-ref name="isValid" scoped="" ref="0x2ac72769ed70"/>
        <function-ref name="set" scoped="" ref="0x2ac72769c278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ac7276a4210" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ac7276a4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ac7276a4560"/>
        <function-ref name="noAck" scoped="" ref="0x2ac7276a46e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ac7276a4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ac727705528" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ac727705528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac7276fb0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ac7276fb720" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac7276fb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac7276fa578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7276f9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7276faa00"/>
        <function-ref name="overflow" scoped="" ref="0x2ac7276f94a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ac7276f5d78" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2ac7276f5d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac7276f0088"/>
        <function-ref name="fired" scoped="" ref="0x2ac7276f26c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac7276f1470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac7276f1020"/>
        <function-ref name="getdt" scoped="" ref="0x2ac7276f0928"/>
        <function-ref name="gett0" scoped="" ref="0x2ac7276f04d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac7276f2b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac7276f38f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac7276f1a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac7276f3d90"/>
        <function-ref name="stop" scoped="" ref="0x2ac7276f2278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ac72774e020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ac72774e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac72774eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac7276f5080" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac7276f5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7276f53d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ac72774bd48" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac72774bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727780410"/>
        <function-ref name="fired" scoped="" ref="0x2ac7277204a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ac727720db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727720930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac727780898"/>
        <function-ref name="start" scoped="" ref="0x2ac727722ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ac727720020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac72774b560" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac72774b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72774b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ac72826db40" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac72826db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac728269238"/>
        <function-ref name="fired" scoped="" ref="0x2ac72826a2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2ac72826abc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac72826a738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac7282696c0"/>
        <function-ref name="start" scoped="" ref="0x2ac72826c8f8"/>
        <function-ref name="stop" scoped="" ref="0x2ac72826cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac72826d358" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac72826d358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72826d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2ac728254020" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ac728254020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac728254370"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac7282544f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac728254680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac728254808"/>
        <function-ref name="fired" scoped="" ref="0x2ac728254990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2ac7282575e0" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ac7282575e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac728257930"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac728257ab8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac728257c40"/>
        <function-ref name="get" scoped="" ref="0x2ac728257dc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac728256020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7282561a8"/>
        <function-ref name="getMode" scoped="" ref="0x2ac728256330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7282564b8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac728256640"/>
        <function-ref name="setMode" scoped="" ref="0x2ac7282567c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac728256950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2ac728256bd8" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac728256bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac728255020"/>
        <function-ref name="getControl" scoped="" ref="0x2ac7282551a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac728255330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac7282554b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac728255640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac7282557c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac728255950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac728255ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac728255c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2ac72824b8c8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2ac72824b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2ac72824bc18"/>
        <function-ref name="setEvent" scoped="" ref="0x2ac72824bda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2ac72824a020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2ac72824a1a8"/>
        <function-ref name="fired" scoped="" ref="0x2ac72824a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2ac72824d020" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2ac72824d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac72824d370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2ac72824d4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72824d680"/>
        <function-ref name="get" scoped="" ref="0x2ac72824d808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72824d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72824db18"/>
        <function-ref name="getMode" scoped="" ref="0x2ac72824dca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72824de28"/>
        <function-ref name="overflow" scoped="" ref="0x2ac72824c020"/>
        <function-ref name="setMode" scoped="" ref="0x2ac72824c1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2ac72824c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ac728251020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac728251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac72824f690"/>
        <function-ref name="fired" scoped="" ref="0x2ac7282506f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ac72824f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac728250b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac72824fb18"/>
        <function-ref name="start" scoped="" ref="0x2ac728251d70"/>
        <function-ref name="stop" scoped="" ref="0x2ac728250270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac7282527a8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac7282527a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac728252af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2ac72824c5b8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2ac72824c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2ac72824c908"/>
        <function-ref name="getControl" scoped="" ref="0x2ac72824ca90"/>
        <function-ref name="enableEvents" scoped="" ref="0x2ac72824cc18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2ac72824cda0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2ac72824b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2ac72824b1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ac72824b330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2ac72824b4b8"/>
        <function-ref name="setControl" scoped="" ref="0x2ac72824b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ac727740bd8" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac727740bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac72773d970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac72773b2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac72773ddf8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac72773b738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ac727735688" loc="63:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2ac727735688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac727734400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac727734d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac727734888"/>
        <function-ref name="overflow" scoped="" ref="0x2ac7277321f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ac7277383f8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac7277383f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac727736190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac727736aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac727736618"/>
        <function-ref name="overflow" scoped="" ref="0x2ac727735020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ac728267a20" loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac728267a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac728263088"/>
        <function-ref name="fired" scoped="" ref="0x2ac728265130"/>
        <function-ref name="startAt" scoped="" ref="0x2ac728265a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac7282655b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac728263510"/>
        <function-ref name="start" scoped="" ref="0x2ac7282667a8"/>
        <function-ref name="stop" scoped="" ref="0x2ac728266c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ac728261d20" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2ac728261d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a9b0"/>
            <typename><typedef-ref name="T32khz" ref="0x2ac72695ad08"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac72825d410"/>
        <function-ref name="fired" scoped="" ref="0x2ac72825f4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ac72825fdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac72825f930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac72825d898"/>
        <function-ref name="start" scoped="" ref="0x2ac728260ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ac72825f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ac728263b38" loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac728263b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac7282628f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac728261230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac728262d80"/>
        <function-ref name="overflow" scoped="" ref="0x2ac7282616b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ac7277b15e8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2ac7277b15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac7277b1938"/>
        <function-ref name="runTask" scoped="" ref="0x2ac7277b1ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ac727753648" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2ac727753648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727751cc0"/>
        <function-ref name="fired" scoped="" ref="0x2ac727752d50"/>
        <function-ref name="startAt" scoped="" ref="0x2ac7277516b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727751230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ac7277b1190"/>
        <function-ref name="start" scoped="" ref="0x2ac7277523f0"/>
        <function-ref name="stop" scoped="" ref="0x2ac7277528c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ac727758168" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac727758168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac7277555f0"/>
        <function-ref name="fired" scoped="" ref="0x2ac727757a88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac7277568c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac727756470"/>
        <function-ref name="getdt" scoped="" ref="0x2ac727753020"/>
        <function-ref name="gett0" scoped="" ref="0x2ac727755a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727756020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac727758cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac727755020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac727757198"/>
        <function-ref name="stop" scoped="" ref="0x2ac727757638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ac7277c5478" loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2ac7277c5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac7277c57c8"/>
        <function-ref name="runTask" scoped="" ref="0x2ac7277c5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ac7277ca208" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2ac7277ca208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac7277c65f0"/>
        <function-ref name="fired" scoped="" ref="0x2ac7277c9b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac7277c88c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac7277c8470"/>
        <function-ref name="getdt" scoped="" ref="0x2ac7277c5020"/>
        <function-ref name="gett0" scoped="" ref="0x2ac7277c6a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac7277c8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac7277cad50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac7277c6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac7277c9238"/>
        <function-ref name="stop" scoped="" ref="0x2ac7277c96d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ac7277d0020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac7277d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac7277cc358"/>
        <function-ref name="fired" scoped="" ref="0x2ac7277cf9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac7277cd748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac7277cd2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2ac7277ccc38"/>
        <function-ref name="gett0" scoped="" ref="0x2ac7277cc7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac7277cfe28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac7277d0b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac7277cdd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac7277cf088"/>
        <function-ref name="stop" scoped="" ref="0x2ac7277cf548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ac7277c3988" loc="48:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2ac7277c3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac7277c2560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ac7277c2b88" loc="49:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2ac7277c2b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ac7277c0930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ac7277bf270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ac7277c0db8"/>
        <function-ref name="overflow" scoped="" ref="0x2ac7277bf6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ac7277ba420" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac7277ba420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac7278096c8"/>
        <function-ref name="fired" scoped="" ref="0x2ac72780bdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac72780aad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac72780a688"/>
        <function-ref name="getdt" scoped="" ref="0x2ac727808020"/>
        <function-ref name="gett0" scoped="" ref="0x2ac727809b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac72780a238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac72780b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac7278090f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac72780b4c0"/>
        <function-ref name="stop" scoped="" ref="0x2ac72780b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ac7278146a0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2ac7278146a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727810a18"/>
        <function-ref name="fired" scoped="" ref="0x2ac727811158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac727811e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac7278119f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ac72780f2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ac727810e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac7278115a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac727813370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac727810448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac727813810"/>
        <function-ref name="stop" scoped="" ref="0x2ac727813cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ac7277f8a88" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x2ac7277f8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f7020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ac727802100" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x2ac727802100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727802450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ac7277fca88" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ac7277fca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277fcdd8"/>
        <function-ref name="write" scoped="" ref="0x2ac7277fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ac7277f6470" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x2ac7277f6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f67c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x2ac7277efc10" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x2ac7277efc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277ee020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ac7277f6c10" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x2ac7277f6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f5020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ac7278462e8" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x2ac7278462e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727846638"/>
        <function-ref name="write" scoped="" ref="0x2ac7278467c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ac7277e42e8" loc="104:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x2ac7277e42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e4638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ac7278013a0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x2ac7278013a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7278016f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x2ac7277ea470" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x2ac7277ea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277ea7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277ea948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ac7277e62e8" loc="102:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ac7277e62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e6638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ac7277fba88" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x2ac7277fba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277fbdd8"/>
        <function-ref name="write" scoped="" ref="0x2ac7277fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ac7277faa88" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x2ac7277faa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277fadd8"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x2ac7277f0470" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x2ac7277f0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f07c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ac7277f2c10" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x2ac7277f2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f1020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ac7277f5470" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x2ac7277f5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f57c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ac727804a18" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ac727804a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ac727804d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ac727803020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ac7278031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ac727800c50" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ac727800c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7277fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ac7277fe2e8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x2ac7277fe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7277fe738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x2ac7277e9a38" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x2ac7277e9a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e9d88"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ac7277fea00" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x2ac7277fea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7277fed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ac7277e6a88" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ac7277e6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e6dd8"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ac727800020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ac727800020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727800370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x2ac7277ebc10" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x2ac7277ebc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277ea020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ac7277fa2e8" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x2ac7277fa2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277fa638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277fa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ac7277fb2e8" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ac7277fb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277fb638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277fb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ac727803a88" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x2ac727803a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727803dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x2ac7277edc10" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x2ac7277edc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277eb020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x2ac7277ee470" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x2ac7277ee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277ee7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277ee948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x2ac7277eb470" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x2ac7277eb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277eb7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277eb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ac7277e3a88" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x2ac7277e3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e3dd8"/>
        <function-ref name="write" scoped="" ref="0x2ac727846020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ac7277e4a88" loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x2ac7277e4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e4dd8"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ac7277f1470" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x2ac7277f1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f17c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x2ac7277eec10" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x2ac7277eec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277ed020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ac7277e7a88" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x2ac7277e7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e7dd8"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ac7277f4470" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x2ac7277f4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f47c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ac727846a88" loc="111:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x2ac727846a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727846dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac727845020"/>
        <function-ref name="write" scoped="" ref="0x2ac7278451a8"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac727845330"/>
        <function-ref name="readDone" scoped="" ref="0x2ac7278454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ac727803470" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x2ac727803470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7278037c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ac7277fc2e8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x2ac7277fc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277fc638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ac7277f82e8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x2ac7277f82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f8638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x2ac7277f0c10" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x2ac7277f0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277ef020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ac7277f5c10" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x2ac7277f5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f4020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x2ac7277ef470" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x2ac7277ef470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277ef7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277ef948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ac7277f7470" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x2ac7277f7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f77c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ac727802718" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x2ac727802718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727802a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ac7277f7c10" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x2ac7277f7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f6020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac727805db8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac727805db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac727804170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7278042f8"/>
        <function-ref name="request" scoped="" ref="0x2ac727804480"/>
        <function-ref name="granted" scoped="" ref="0x2ac727804608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727804790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ac7277fd060" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x2ac7277fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7277fd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ac7277fdc90" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x2ac7277fdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7277fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ac7277e72e8" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x2ac7277e72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e7638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ac7277e8a88" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x2ac7277e8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e8dd8"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ac727800638" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ac727800638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727800988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ac7277e82e8" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ac7277e82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e8638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ac7277e32e8" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x2ac7277e32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e3638"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ac7277f1c10" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x2ac7277f1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f0020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x2ac7277ed470" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x2ac7277ed470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277ed7c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277ed948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ac727802d30" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x2ac727802d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7278010d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ac7278019b8" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x2ac7278019b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac727801d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ac7277f4c10" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x2ac7277f4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f2020"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ac7277fd678" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x2ac7277fd678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ac7277fd9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ac7277f2470" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x2ac7277f2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277f27c0"/>
        <function-ref name="write" scoped="" ref="0x2ac7277f2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x2ac7277eac10" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x2ac7277eac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac7277e95e8"/>
        <function-ref name="write" scoped="" ref="0x2ac7277e9770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ac727845780" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x2ac727845780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ac727845ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ac727845c58"/>
        <function-ref name="write" scoped="" ref="0x2ac727845de0"/>
        <function-ref name="beginRead" scoped="" ref="0x2ac727844020"/>
        <function-ref name="readDone" scoped="" ref="0x2ac7278441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ac72781e650" loc="44:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ac72781e650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ac72781e9a0"/>
        <function-ref name="rand32" scoped="" ref="0x2ac72781eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ac72781c668" loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2ac72781c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72781e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac727822868" loc="42:/home/wwhuang/git/tinyos-lab11/tos/platforms/opo/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac727822868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac727822bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ac727819d58" loc="20:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ac727819d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ac7278180d8"/>
        <function-ref name="rand32" scoped="" ref="0x2ac727818260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ac72781dd80" loc="19:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x2ac72781dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac7278198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac72781d568" loc="18:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac72781d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72781d8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac727818558" loc="23:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac727818558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac7278188a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac727818a30"/>
        <function-ref name="led1On" scoped="" ref="0x2ac727818bb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac727818d40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac727816020"/>
        <function-ref name="get" scoped="" ref="0x2ac7278161a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac727816330"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac727816950"/>
        <function-ref name="set" scoped="" ref="0x2ac7278164b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ac727816640"/>
        <function-ref name="led2On" scoped="" ref="0x2ac7278167c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IdReader" ref="0x2ac727816c88" loc="24:/home/wwhuang/git/tinyos-lab11/tos/system/RandomMtC.nc">
      <component-ref qname="RandomMtC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IdReader" scoped="" ref="0x2ac727816c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ac727815020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ac727820c68" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ac727820c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac72785c020"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac72785c1a8"/>
        <function-ref name="isState" scoped="" ref="0x2ac72785c330"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac72785c4b8"/>
        <function-ref name="requestState" scoped="" ref="0x2ac72785c640"/>
        <function-ref name="forceState" scoped="" ref="0x2ac72785c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ac727853838" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ac727853838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727853b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727853d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727852020"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7278521a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727852330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac727856a78" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac727856a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727856dc8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727853020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278531a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac727853330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7278534b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ac72784e578" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ac72784e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac72784e8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac72784ea50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac72784ebd8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac72784ed60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac72784d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac72784f298" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac72784f298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac72784f5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac72784f770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac72784f8f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac72784fa80"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac72784fc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ac72784c080" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x2ac72784c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ac72784c3d0"/>
        <function-ref name="rand32" scoped="" ref="0x2ac72784c558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac72784fe80" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac72784fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac72784e1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ac72784c848" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac72784c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac72784cb98"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac72784cd20"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac72784b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2ac72784d2a0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ac72784d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac72784d5f0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac72784d778"/>
        <function-ref name="isState" scoped="" ref="0x2ac72784d900"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac72784da88"/>
        <function-ref name="requestState" scoped="" ref="0x2ac72784dc10"/>
        <function-ref name="forceState" scoped="" ref="0x2ac72784dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ac727850468" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ac727850468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac7278507b8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac727850940"/>
        <function-ref name="isState" scoped="" ref="0x2ac727850ac8"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac727850c50"/>
        <function-ref name="requestState" scoped="" ref="0x2ac727850dd8"/>
        <function-ref name="forceState" scoped="" ref="0x2ac7278a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ac72789b020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ac72789b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac72789b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac72789c0c0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac72789c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac72789c410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ac72789c788" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ac72789c788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac72789cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ac727896818" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ac727896818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac727896b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac727896110" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac727896110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac727896460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac727897450" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac727897450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac7278977a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ac727896e58" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac727896e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278951e8"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac727895370"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac7278954f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ac727897b18" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ac727897b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac727897e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ac7278cf020" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ac7278cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac7278cf370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ac7278cf670" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ac7278cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7278cf9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278cfb48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278cfcd0"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7278cfe58"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7278ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac7278d3a40" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac7278d3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7278d3d90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278d2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278d21a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7278d2330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7278d24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ac7278d2db8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ac7278d2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7278d1170"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278d12f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278d1480"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7278d1608"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7278d1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac7278d2748" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac7278d2748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac7278d2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac72789de28" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac72789de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7278d31a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7278d3330"/>
        <function-ref name="request" scoped="" ref="0x2ac7278d34b8"/>
        <function-ref name="granted" scoped="" ref="0x2ac7278d3640"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7278d37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ac7278d1ae8" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ac7278d1ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac7278d1e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ac7278d01a8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ac7278d01a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac7278d04f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac7278d0680"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278d0808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278d0990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac7278d0b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ac7278c4528" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ac7278c4528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7278c4878"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278c4a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278c4b88"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7278c4d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7278c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ac7278c3358" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ac7278c3358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac7278c36a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2ac7278feac0" loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x2ac7278feac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac7278fee10"/>
        <function-ref name="runTask" scoped="" ref="0x2ac7278fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ac7278c3970" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac7278c3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac7278c3cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac7278c3e48"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac7278c2020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac7278c21a8"/>
        <function-ref name="getPower" scoped="" ref="0x2ac7278c2330"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac7278c24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ac7278c6490" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x2ac7278c6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7278c67e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278c6968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278c6af0"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7278c6c78"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7278c6e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ac7278c11c0" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x2ac7278c11c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ac7278c1510"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ac7278c1698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ac7278c1820"/>
        <function-ref name="dequeue" scoped="" ref="0x2ac7278c19a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ac7278c27a8" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac7278c27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278c2af8"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac7278c2c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac7278c2e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ac7278c7dc8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x2ac7278c7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac7278c6170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ac7278c9440" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x2ac7278c9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7278c9790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac7278c9918"/>
        <function-ref name="request" scoped="" ref="0x2ac7278c9aa0"/>
        <function-ref name="granted" scoped="" ref="0x2ac7278c9c28"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac7278c9db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ac7278c7118" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x2ac7278c7118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7278c7468"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278c75f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278c7778"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7278c7900"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7278c7a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ac7278c5188" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x2ac7278c5188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac7278c54d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ac7278c5808" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x2ac7278c5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac7278c5b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac7278c5ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7278c5e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7278c4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac7278c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ac727947c28" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2ac727947c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ac727946020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ac7279462a8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x2ac7279462a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ac7279465f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ac727946780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ac727946908"/>
        <function-ref name="dequeue" scoped="" ref="0x2ac727946a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ac72793bdc8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x2ac72793bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ac72793a170"/>
        <function-ref name="stopDone" scoped="" ref="0x2ac72793a2f8"/>
        <function-ref name="start" scoped="" ref="0x2ac72793a480"/>
        <function-ref name="stop" scoped="" ref="0x2ac72793a608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ac727939838" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ac727939838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727939b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727939d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727938020"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7279381a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727938330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ac727938668" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ac727938668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac7279389b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac72793c080" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac72793c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac72793c3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac72793c558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac72793c6e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ac72793c868"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac72793c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ac72793b318" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ac72793b318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ac72793b668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ac72793b7f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ac72793b978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ac72793bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2ac72793a928" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x2ac72793a928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac72793ac78"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac72793ae00"/>
        <function-ref name="isState" scoped="" ref="0x2ac727939020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac7279391a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ac727939330"/>
        <function-ref name="forceState" scoped="" ref="0x2ac7279394b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ac727938d28" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x2ac727938d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ac7279370a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ac727937228"/>
        <function-ref name="start" scoped="" ref="0x2ac7279373b0"/>
        <function-ref name="stop" scoped="" ref="0x2ac727937538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac72793cc80" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac72793cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac72793b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ac727934170" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x2ac727934170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ac7279344c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ac727934648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ac7279347d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ac727934958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ac727936d50" loc="67:/home/wwhuang/git/tinyos-lab11/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x2ac727936d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ac7279350d8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ac727935260"/>
        <function-ref name="isState" scoped="" ref="0x2ac7279353e8"/>
        <function-ref name="isIdle" scoped="" ref="0x2ac727935570"/>
        <function-ref name="requestState" scoped="" ref="0x2ac7279356f8"/>
        <function-ref name="forceState" scoped="" ref="0x2ac727935880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ac727927020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ac727927020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727927370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7279274f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727927680"/>
        <function-ref name="cancel" scoped="" ref="0x2ac727927808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727927990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac72792b5d8" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac72792b5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac72792b928"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac72792bab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac72792bc38"/>
        <function-ref name="cancel" scoped="" ref="0x2ac72792bdc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727928020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ac7279282d0" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ac7279282d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ac727928620"/>
        <function-ref name="setRetries" scoped="" ref="0x2ac7279287a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ac727928930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ac727928ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ac727928c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ac7279223c8" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ac7279223c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ac727922718"/>
        <function-ref name="noAck" scoped="" ref="0x2ac7279228a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ac727922a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ac727925550" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x2ac727925550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ac7279258a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2ac727925a28"/>
        <function-ref name="getRetries" scoped="" ref="0x2ac727925bb0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ac727925d38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ac727922020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ac72796ecc8" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x2ac72796ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac72796d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ac72796e020" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x2ac72796e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac72796e370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac72796e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac72796e680"/>
        <function-ref name="cancel" scoped="" ref="0x2ac72796e808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac72796e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ac72796cab0" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x2ac72796cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ac72796ce00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ac72796b020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ac72796b1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2ac72796b330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ac72796b4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ac72796b640"/>
        <function-ref name="setChannel" scoped="" ref="0x2ac72796b7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ac72796b950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ac72796bad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ac72796bc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ac72796bde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ac72796a020"/>
        <function-ref name="sync" scoped="" ref="0x2ac72796a1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ac72796a430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ac72796a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ac72796f020" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x2ac72796f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ac72796f370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ac72796f4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ac72796f680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ac72796f808"/>
        <function-ref name="setCca" scoped="" ref="0x2ac72796f990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ac72796fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ac727970400" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x2ac727970400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ac727970750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ac7279686a0" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x2ac7279686a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ac7279689f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ac727968b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ac727968d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ac727967020"/>
        <function-ref name="setCca" scoped="" ref="0x2ac7279671a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ac727967330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ac7279712a8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ac7279712a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac7279715f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac727971780"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727971908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727971a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac727971c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ac727976980" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ac727976980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727976cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727976e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727975020"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7279751a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727975330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ac727973628" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x2ac727973628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac727973978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ac72796d368" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x2ac72796d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ac72796d6b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ac72796d840"/>
        <function-ref name="getRssi" scoped="" ref="0x2ac72796d9c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ac72796db50"/>
        <function-ref name="getPower" scoped="" ref="0x2ac72796dcd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2ac72796de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ac72796a8d0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ac72796a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ac72796ad20"/>
        <function-ref name="changed" scoped="" ref="0x2ac727968020"/>
        <function-ref name="amGroup" scoped="" ref="0x2ac7279681a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2ac727968330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ac72796c188" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ac72796c188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ac72796c4d8"/>
        <function-ref name="getHeader" scoped="" ref="0x2ac72796c660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ac72796c7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ac727975ab0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x2ac727975ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ac727975e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ac7279662a8" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2ac7279662a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ac7279665f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ac727966780"/>
        <function-ref name="led1On" scoped="" ref="0x2ac727966908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ac727966a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ac727966c18"/>
        <function-ref name="get" scoped="" ref="0x2ac727966da0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ac727965020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ac727965640"/>
        <function-ref name="set" scoped="" ref="0x2ac7279651a8"/>
        <function-ref name="led0On" scoped="" ref="0x2ac727965330"/>
        <function-ref name="led2On" scoped="" ref="0x2ac7279654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ac727973c18" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ac727973c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ac727972020"/>
        <function-ref name="source" scoped="" ref="0x2ac7279721a8"/>
        <function-ref name="address" scoped="" ref="0x2ac727972330"/>
        <function-ref name="destination" scoped="" ref="0x2ac7279724b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ac727972640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ac7279727c8"/>
        <function-ref name="type" scoped="" ref="0x2ac727972950"/>
        <function-ref name="setType" scoped="" ref="0x2ac727972ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ac727972c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ac727972de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ac727971020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2ac727967698" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x2ac727967698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ac7279679e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ac727967b70"/>
        <function-ref name="request" scoped="" ref="0x2ac727967cf8"/>
        <function-ref name="granted" scoped="" ref="0x2ac727967e80"/>
        <function-ref name="isOwner" scoped="" ref="0x2ac727966030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ac727a7d080" loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ac727a7d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727a7d3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727a7d558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727a7d6e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ac727a7d868"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727a7d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ac727a7dc38" loc="50:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ac727a7dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac727a7c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac727a7c1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727a7c330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727a7c4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac727a7c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ac727a7c888" loc="51:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ac727a7c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ac727a7cbd8"/>
        <function-ref name="source" scoped="" ref="0x2ac727a7cd60"/>
        <function-ref name="address" scoped="" ref="0x2ac727a7b020"/>
        <function-ref name="destination" scoped="" ref="0x2ac727a7b1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ac727a7b330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ac727a7b4b8"/>
        <function-ref name="type" scoped="" ref="0x2ac727a7b640"/>
        <function-ref name="setType" scoped="" ref="0x2ac727a7b7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ac727a7b950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ac727a7bad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ac727a7bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ac727a7a020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/AMSenderC.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ac727a7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ac727a7a370"/>
        <function-ref name="noAck" scoped="" ref="0x2ac727a7a4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ac727a7a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ac72833e620" loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ac72833e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac72833e970"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac72833eaf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac72833ec80"/>
        <function-ref name="cancel" scoped="" ref="0x2ac72833ee08"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac72833d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ac72833d268" loc="50:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ac72833d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac72833d5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac72833d740"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac72833d8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac72833da50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac72833dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ac72833de20" loc="51:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ac72833de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ac72833c1a8"/>
        <function-ref name="source" scoped="" ref="0x2ac72833c330"/>
        <function-ref name="address" scoped="" ref="0x2ac72833c4b8"/>
        <function-ref name="destination" scoped="" ref="0x2ac72833c640"/>
        <function-ref name="setSource" scoped="" ref="0x2ac72833c7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ac72833c950"/>
        <function-ref name="type" scoped="" ref="0x2ac72833cad8"/>
        <function-ref name="setType" scoped="" ref="0x2ac72833cc60"/>
        <function-ref name="isForMe" scoped="" ref="0x2ac72833cde8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ac72833b020"/>
        <function-ref name="localGroup" scoped="" ref="0x2ac72833b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ac72833b430" loc="52:/home/wwhuang/git/tinyos-lab11/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x2ac72833b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ac72833b780"/>
        <function-ref name="noAck" scoped="" ref="0x2ac72833b908"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ac72833ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ac728333e58" loc="44:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ac728333e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac7283311e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac728331370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7283314f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac728331680"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac728331808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ac728331ab0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac728331ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac728331e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac728330020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7283301a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac728330330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7283304b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ac728330700" loc="47:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OpoADCTestC.OpoAdcRf.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ac728330700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ac728330a50"/>
        <function-ref name="source" scoped="" ref="0x2ac728330bd8"/>
        <function-ref name="address" scoped="" ref="0x2ac728330d60"/>
        <function-ref name="destination" scoped="" ref="0x2ac72832e020"/>
        <function-ref name="setSource" scoped="" ref="0x2ac72832e1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ac72832e330"/>
        <function-ref name="type" scoped="" ref="0x2ac72832e4b8"/>
        <function-ref name="setType" scoped="" ref="0x2ac72832e640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ac72832e7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ac72832e950"/>
        <function-ref name="localGroup" scoped="" ref="0x2ac72832ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac727a029b0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac727a029b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727a02d00"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac7279ff020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac7279ff1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac7279ff330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac7279ff4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ac727a91bd0" loc="48:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x2ac727a91bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727a90020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727a901a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727a90330"/>
        <function-ref name="cancel" scoped="" ref="0x2ac727a904b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727a90640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ac727a25e40" loc="46:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x2ac727a25e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ac727a911e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727a91370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727a914f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ac727a91680"/>
        <function-ref name="sendDone" scoped="" ref="0x2ac727a91808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ac727a8e020" loc="50:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x2ac727a8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ac727a8e370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ac727a8e4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ac727a8e680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ac727a8e808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ac727a8e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2ac727a8ec58" loc="169:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x2ac727a8ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac727a8d020"/>
        <function-ref name="runTask" scoped="" ref="0x2ac727a8d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2ac727a8d470" loc="126:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x2ac727a8d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ac727a8d7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ac727a8d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ac727a90888" loc="49:/home/wwhuang/git/tinyos-lab11/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x2ac727a90888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ac727a90bd8"/>
        <function-ref name="source" scoped="" ref="0x2ac727a90d60"/>
        <function-ref name="address" scoped="" ref="0x2ac727a8f020"/>
        <function-ref name="destination" scoped="" ref="0x2ac727a8f1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ac727a8f330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ac727a8f4b8"/>
        <function-ref name="type" scoped="" ref="0x2ac727a8f640"/>
        <function-ref name="setType" scoped="" ref="0x2ac727a8f7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ac727a8f950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ac727a8fad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ac727a8fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ac727a77498" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <component-ref qname="OpoADCTestC.RxTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac727a77498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727a736c8"/>
        <function-ref name="fired" scoped="" ref="0x2ac727a76db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac727a75ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac727a75688"/>
        <function-ref name="getdt" scoped="" ref="0x2ac727a72020"/>
        <function-ref name="gett0" scoped="" ref="0x2ac727a73b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727a75238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac727a76020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac727a730f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac727a764c0"/>
        <function-ref name="stop" scoped="" ref="0x2ac727a76960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ac727a718e8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <component-ref qname="OpoADCTestC.RfTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac727a718e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727a6dbc0"/>
        <function-ref name="fired" scoped="" ref="0x2ac727a6f238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac727a6d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac727a6fad8"/>
        <function-ref name="getdt" scoped="" ref="0x2ac727a6c4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2ac727a6c088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727a6f688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac727a70458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac727a6d5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac727a708f8"/>
        <function-ref name="stop" scoped="" ref="0x2ac727a70d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ac727a6a020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/system/TimerMilliC.nc">
      <component-ref qname="OpoADCTestC.AdcTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2ac727a6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac72695a248"/>
            <typename><typedef-ref name="TMilli" ref="0x2ac72695a5a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ac727a662b8"/>
        <function-ref name="fired" scoped="" ref="0x2ac727a69978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ac727a676c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ac727a67278"/>
        <function-ref name="getdt" scoped="" ref="0x2ac727a66b58"/>
        <function-ref name="gett0" scoped="" ref="0x2ac727a66708"/>
        <function-ref name="isRunning" scoped="" ref="0x2ac727a69dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ac727a6ab68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ac727a67c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ac727a69088"/>
        <function-ref name="stop" scoped="" ref="0x2ac727a69528"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ac7265137a8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ac726511490" loc="60:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2ac72652b6e8" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2ac72652db00" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2ac72652b020" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2ac72652d480" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2ac72652c258" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2ac726519738" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2ac726519db8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2ac72652c920" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/platforms/epic/hardware.h">
        <short>&#10; Hardware definition for the Epic platform.</short>
        <long>&#10; Hardware definition for the Epic platform.&#10;&#10; @author Prabal Dutta&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ac7264e5c40" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ac72629aae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2ac726573ae0" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2ac726573870" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2ac726576178" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ac726524dd8"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ac72653b858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2ac726572328" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2ac726571178" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2ac726573178" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2ac726572a00" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2ac7265768b0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2ac726575020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ac7265759f0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ac726524dd8"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ac72653b858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ac726575780" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ac726524dd8"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2ac72653b858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2ac72657f328" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2ac72657c6e8" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2ac72657c478" loc="79:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ac726595290" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ac726595020" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ac72657dcf8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ac72657d568" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2ac72657fc50" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2ac72657f9e0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2ac72656fa10" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2ac726585378" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ac726585108" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2ac726585cd8" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2ac726585a68" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2ac7265846e0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2ac726584470" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ac726584d68" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ac726562ae8" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2ac726579338" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2ac7265790c8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2ac72657b258" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ac726564020" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2ac72657b930" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ac726564e28" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ac726562460" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ac726564750" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ac726563500" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2ac726563da0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ac726563b30" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2ac726579cd0" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2ac726579a60" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ac7265a4020" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ac7264e7690" loc="76:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ac7264fc760" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ac7261dd020" loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ac7261e8020" loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ac7261dd738" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ac7261f0ba0" loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ac7261ef3e0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ac7266c9070" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ac7266c97a8" loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ac7266c8020" loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ac7266c8e70" loc="83:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ac7266c6480" loc="100:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ac7266c6c18" loc="117:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ac7266c8738" loc="77:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ac7266e4768" loc="134:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ac7266e44f8" loc="134:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ac7266cb900" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ac7266c7608" loc="89:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ac7266c7d20" loc="94:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ac7266da020" loc="44:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ac7266da6e8" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ac7266dc290" loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ac7266d94a0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ac7266dc930" loc="43:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ac7266dada0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ac7266dd548" loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ac7266ddbb8" loc="41:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ac726711440" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ac726711b28" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2ac72670c290" loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ac72670c020" loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ac726714dc0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ac726710950" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2ac72670cb10" loc="117:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ac726710258" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ac726713ca8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2ac72670e020" loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2ac726713510" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ac726714020" loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2ac72670f0d8" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2ac72670e748" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2ac72670f838" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ac7267146e0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <function command="" provided="0" name="setAutoAck" ref="0x2ac726a040b8" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2ac726a05ab0" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2ac726a05de8" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2ac7269dbb70" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2ac7269db2a0" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2ac7269dcad8" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2ac7269db020" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2ac7269e19c0" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ac7269e1750" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2ac726a053a0" loc="98:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2ac7269dd290" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ac7269dd020" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ac7269e09f8" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ac7269e0788" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2ac726a03258" loc="117:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2ac7269dc338" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ac7269dc0c8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2ac726a04a48" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2ac7269df178" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ac7269728d0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ac7269eb020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2ac7269df8f8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2ac7269e1020" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ac7269e00d8" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2ac7269dd9c0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2ac7269c80c8" loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ac7269ca788" loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ac7269caae8" loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac7269cadf8" loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ac7269ef3c0" loc="135:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac7269f0dc8" loc="135:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac7269ef108" loc="135:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ac7269f05c0" loc="123:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ac7269c7370" loc="96:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac7269c7100" loc="96:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ac7269c67a0" loc="110:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac7269c61f8" loc="110:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ac7269c6520" loc="110:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac726959a78" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac726959a78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ac726951328" loc="136:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ac726956e68" loc="83:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ac726954ad8" loc="114:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ac726954540" loc="114:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ac726954858" loc="114:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ac726955da8" loc="98:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ac726950290" loc="151:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ac726951a48" loc="144:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ac726955610" loc="92:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ac726958570" loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ac726958300" loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ac7269539e0" loc="129:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ac726953448" loc="129:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ac726953760" loc="129:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ac726956020" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ac726958d40" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ac7269567c8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ac726971c18" loc="113:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ac7269719a8" loc="113:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ac7269990a8" loc="138:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ac72699adb8" loc="138:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ac726971030" loc="104:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ac72699a448" loc="130:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ac726983938" loc="120:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ac726984a00" loc="97:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ac726984110" loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ac7269831d8" loc="102:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ac726982360" loc="128:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2ac726960328" loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x2ac7269693b0" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ac726969140" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x2ac726967810" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ac726967248" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x2ac726967590" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x2ac726961368" loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ac726963180" loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x2ac7269639a8" loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x2ac726963d00" loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x2ac7269610c8" loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x2ac72695eb38" loc="227:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x2ac72695e4d8" loc="227:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x2ac72695e840" loc="227:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x2ac726965a90" loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ac7269668e8" loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x2ac726965140" loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x2ac7269654a8" loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x2ac7269657f0" loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x2ac72695f020" loc="206:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac726960c70" loc="206:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2ac726a393e0" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ac726a3b778" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac726921140"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x2ac7269215f8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ac726a3c2d8" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x2ac7269226e8"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x2ac726923d88"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x2ac726a3c6a0" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac726921140"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x2ac7269215f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x2ac726a3c9f0" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x2ac726a3cd68" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x2ac726a3b170" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x2ac726a3b4b8" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2ac726a382a0" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x2ac726a39c78" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x2ac726a38020" loc="107:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x2ac726a3ee78" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x2ac726a36660" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ac726a5eb10" loc="95:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ac726a5a328" loc="105:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x2ac726a4c650" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726939858"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x2ac7269372c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x2ac726a785e0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac726921140"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x2ac7269215f8"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ac726a78370" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x2ac726a75a88" loc="106:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x2ac726a74c00" loc="118:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x2ac726a744a0" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x2ac726a74230" loc="112:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x2ac726a4cdf8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726936878"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x2ac726935168"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x2ac726a4bb38" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac726921140"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x2ac7269215f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ac726a4b520" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x2ac726a4b8b8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac726921140"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x2ac7269215f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2ac726a73bc0" loc="128:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x2ac726a4e478" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726939858"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x2ac7269372c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x2ac726a4e208" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726939858"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x2ac7269372c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x2ac726a770a8" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ac726a78db8" loc="89:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x2ac726a77ab0" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ac726a77840" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x2ac726a75328" loc="101:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x2ac726a733a0" loc="123:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x2ac726a72328" loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x2ac726a4ee60" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726936878"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x2ac726935168"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x2ac726a4ebf0" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2ac726936878"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x2ac726935168"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ac726a503e0" loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ac726a50bd0" loc="98:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ac726b754b0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ac726b75d78" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ac726b72bf0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ac726b72440" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ac726b68ac8" loc="79:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ac726b71c90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ac726b68858" loc="79:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ac726b71c90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ac726b6caf0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ac726b695e8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ac726b71c90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ac726b69378" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ac726b71c90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ac726b68020" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ac726b71c90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ac726bf55f8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
              <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726bf9c40" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ac726bf5020" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac726bf5330" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ac726bf0020" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726bf6c60" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ac726bee020" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726bf0d58" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ac726beb150" loc="126:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726becb20" loc="126:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac726bece30" loc="126:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ac726bec290" loc="106:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ac726bed3e0" loc="94:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726beee00" loc="94:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac726bed160" loc="94:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ac726c0dae8" loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac726c0dae8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ac726c0dd18" loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726c0dd18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2ac726c369d8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726c0dd18"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c36768" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2ac726c35ab8" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c35848" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2ac726c05870" loc="49:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c05600" loc="49:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ac726c34d10" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726c0dd18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c34750" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ac726c34a90" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726c0dd18"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2ac726c29728" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c29140" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2ac726c294a8" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2ac726c287e8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c28578" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2ac726c2a978" loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2ac726c2a020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2ac726c2dd68" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ac726c0a0a8" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726be9dd8" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ac726c09290" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c09020" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ac726c07338" loc="85:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c070c8" loc="85:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ac726c10680" loc="177:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ac7269da4c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c10410" loc="177:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ac726c1a418" loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c1a1a8" loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ac726bf4990" loc="68:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ac726c1b418" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c1b1a8" loc="78:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ac726c16bc0" loc="121:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c16608" loc="121:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ac726c16940" loc="121:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ac726c18760" loc="103:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c181a8" loc="103:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ac726c184e0" loc="103:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ac726c13290" loc="147:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c13020" loc="147:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ac726c125a0" loc="162:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c12020" loc="162:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ac726c12320" loc="162:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ac7269da110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ac726c14020" loc="136:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c15d60" loc="136:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ac726c0fa50" loc="187:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ac7269da4c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ac726c0f4a0" loc="187:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ac726c0f7d0" loc="187:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ac7269da4c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ac726c0c818" loc="195:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wwhuang/git/tinyos-lab11/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ac7269da4c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2ac726c3f290" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c3f020" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2ac726c42578" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c42308" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2ac726c44d30" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ac726c44ac0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2ac726c44290" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ac726c44020" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2ac726c43728" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2ac726c434b8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2ac726c403b0" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c40140" loc="88:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2ac726c68830" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2ac726c68250" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ac726c685b0" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2ac726c4f6a8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ac726c4f100" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2ac726c4f428" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2ac726c4bb80" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ac726c4b5b0" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2ac726c4b900" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2ac726c4e290" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2ac725b99718"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ac726c4e020" loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2ac726c4cb60" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ac726c4c8f0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2ac726c50930" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ac726c506c0" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2ac726c4ed30" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ac726c4eac0" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2ac726c37290" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c37020" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2ac726c3b490" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c3ee80" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2ac726c3b210" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2ac726c39290" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c39020" loc="59:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2ac726c3a7e0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c3a1f8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2ac726c3a560" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2ac726c6b290" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c6b020" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2ac726c48338" loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c480c8" loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ac726c62e78" loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c628e8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac726c62bf8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ac726c5a2d8" loc="125:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c5bc90" loc="125:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac726c5a020" loc="125:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ac726c5b488" loc="112:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ac726c5e108" loc="89:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c5fe50" loc="89:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ac726c5c5c8" loc="100:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c5c020" loc="100:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ac726c5c348" loc="100:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ac726c71050" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ac726c72a88" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2ac726c72da0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ac726c70258" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2ac726c6d8d8" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ac726c6eae0" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2ac726c6d338" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac726c6d648" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ac726c6e348" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ac726c70d30" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ac726c6e0c8" loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2ac726c71a60" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2ac726c717f0" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ac726ca0a28" loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ac726ca0290" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ac726c747d0" loc="95:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ac726c73020" loc="105:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wwhuang/git/tinyos-lab11/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2ac726c9aa50" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c9a7a8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2ac726c9a020" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2ac726995390"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2ac726994c28"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c9bc38" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2ac726c99cb0" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2ac726993720"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2ac726990020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac726c999c8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2ac726c797e8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2ac726c77778" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2ac726c77020" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2ac726c7a020" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2ac726c79020" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2ac726c78020" loc="76:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2ac726c787d0" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2ac726c7a818" loc="56:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2ac726c92178" loc="71:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2ac726c95798" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2ac726c939b0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2ac726c93740" loc="66:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2ac726c93020" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2ac726c96508" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ac726c96298" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2ac726c95020" loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ac726c96cc0" loc="51:/home/wwhuang/git/tinyos-lab11/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2ac726ce42a0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ac726ce42a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2ac726ce4ad8" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
        <documentation loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ac726ce37c8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ac726ce42a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ac726ce3248" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2ac726ce3548" loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ac726ce42a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ac726d29290" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ac726973618"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac726d29020" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ac726d29ce8" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ac726973618"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac726d29a78" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2ac726d0e678" loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ac7269728d0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ac7269eb020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac726cd87b8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac726cd87b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ac726cd89e8" loc="56:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ac726d08328" loc="109:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ac726d0a450" loc="78:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ac726d09960" loc="103:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ac726d093c0" loc="103:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ac726d096e0" loc="103:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ac726d0abc0" loc="88:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ac726d08aa8" loc="116:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ac726d0b4e0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ac726d0b270" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726cd89e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ac726d0bcb0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ac726cf9020" loc="50:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ac726cf9e70" loc="60:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ac726cf9780" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ac7269da4c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ac726cfb818" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ac7269da4c0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ac726cfb260" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ac7269da4c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ac726cfb598" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ac7269da878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2ac726d220d8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ac726973618"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ac726cf65e0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ac726973618"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ac726cf76b0" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ac726cf6020" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ac726cf6350" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ac726cf4c60" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ac726973618"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ac726cf6e30" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ac726cf46a0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ac726cf49d0" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ac726cfd8c8" loc="68:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ac726cfd178" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2ac726cfea20" loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2ac726cfe1d8" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac726dfe3f8" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac726dfe3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ac726dfe628" loc="57:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726dfe628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ac726dfd020" loc="64:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac726dfe628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ac726dfc070" loc="76:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ac726dfd838" loc="71:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ac726dfc760" loc="82:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2ac726eefb48" loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ac726eeebf0" loc="66:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ac726eee4b8" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ac726eee248" loc="61:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2ac726eef360" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ac726f0da50" loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ac726f0a418" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ac726f0d328" loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2ac726f0cc30" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2ac726f0c9c0" loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2ac726f10b68" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2ac726f0c258" loc="59:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2ac7270108c8" loc="24:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2ac72700f0d8" loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2ac72700f8a8" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2ac72702c348" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac72702dd58" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ac72702c0c8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2ac7270272b0" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac727028940" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ac727028c70" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ac727027020" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ac72702ac50" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ac726973618"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac72702a6a0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ac72702a9d0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2ac72702d020" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ac726973618"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac72702f908" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ac72702fc38" loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ac72702b948" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac72702b060" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ac72702b390" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ac72702b6b8" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ac727052930" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ac727052020" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ac727052380" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac7270526a0" loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ac727051cc8" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ac727051060" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ac7270513c0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac7270516e0" loc="82:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ac727051a28" loc="83:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2ac7270569b0" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2ac727056740" loc="45:/home/wwhuang/git/tinyos-lab11/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2ac727120c20" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ac72710a898"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ac72710aca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2ac727122c98" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac727122a28" loc="62:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2ac72711d020" loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac72711ece8" loc="74:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2ac72711e4c0" loc="68:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ac72711da28" loc="81:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac72711d7b8" loc="81:/home/wwhuang/git/tinyos-lab11/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x2ac72710ea78" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac72710e808" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2ac72710e0d8" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2ac727133290" loc="213:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x2ac72713e730" loc="143:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x2ac72714dc70" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270de528"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2ac7270ded50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ac72714da00" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270de528"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x2ac7270ded50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x2ac727141978" loc="123:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x2ac727147020" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270d9280"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2ac7270d9aa8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ac727148cc8" loc="70:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270d9280"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x2ac7270d9aa8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2ac727138928" loc="180:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x2ac727135ce8" loc="197:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x2ac727148590" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270db350"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x2ac7270dbac8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x2ac7271477a8" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270d9280"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x2ac7270d9aa8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x2ac727143338" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x2ac7271430c8" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x2ac7271459d0" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x2ac727138258" loc="179:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x2ac72714adc8" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270db350"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2ac7270dbac8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ac72714ab58" loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270db350"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x2ac7270dbac8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x2ac727146848" loc="85:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2ac727136020" loc="181:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x2ac727145290" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x2ac727145020" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x2ac727142ac0" loc="113:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x2ac727141258" loc="118:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2ac727139468" loc="177:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x2ac72713c570" loc="163:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x2ac72713f830" loc="133:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2ac727139b40" loc="178:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x2ac72713d020" loc="148:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x2ac7271366d8" loc="182:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ac727143aa8" loc="103:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x2ac7270e3568"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x2ac7270e0ce0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x2ac727136e10" loc="187:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x2ac727134b20" loc="207:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x2ac727146108" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x2ac727147e68" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2ac727133bb8" loc="224:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac727133948" loc="224:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x2ac72714a428" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ac7270de528"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x2ac7270ded50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x2ac72713f0d8" loc="128:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2ac72713d710" loc="153:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x2ac72713ac78" loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ac7270f7180"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2ac7270f7588"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ac72713aa08" loc="174:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ac7270f7180"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x2ac7270f7588"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x2ac72713a020" loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ac72710a898"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ac72710aca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ac72713cd58" loc="168:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x2ac72710a898"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x2ac72710aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2ac72717a430" loc="231:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x2ac7271355d0" loc="192:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x2ac727142290" loc="108:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x2ac727134440" loc="202:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x2ac72713de10" loc="158:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x2ac72713e020" loc="138:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ac7271ab360" loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x2ac7271d1958" loc="80:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x2ac7271e2020" loc="31:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x2ac7271d7a58" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ac7271d77e8" loc="62:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x2ac7271a0988" loc="11:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x2ac7271d5e40" loc="71:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x2ac7271ddd60" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x2ac7271e30d8" loc="28:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x2ac7271e2dd8" loc="34:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2ac7271e4118" loc="25:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x2ac7271e6e80" loc="25:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x2ac7271e7728" loc="21:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x2ac7271df990" loc="41:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x2ac7271d68d8" loc="66:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x2ac7271d1258" loc="78:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x2ac7271d7110" loc="61:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x2ac7271cc070" loc="91:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x2ac7271c8710" loc="100:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x2ac7271e9788" loc="14:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x2ac7271df290" loc="38:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x2ac7271dea58" loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x2ac7271e4978" loc="27:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x2ac7271a16f0" loc="7:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x2ac7271d9958" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ac7271d96e8" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x2ac7271a1020" loc="6:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x2ac7271d5720" loc="69:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x2ac7271d00d8" loc="81:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x2ac7271cb770" loc="94:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x2ac7271c8020" loc="97:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x2ac7271d4cb8" loc="74:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x2ac7271d07a8" loc="83:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x2ac7271d61d8" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x2ac7271cd178" loc="87:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x2ac7271e9e40" loc="15:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x2ac7271dbe40" loc="53:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x2ac7271ce5c8" loc="86:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x2ac7271d2ae8" loc="77:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x2ac7271dd5f8" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x2ac7271dd388" loc="46:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x2ac7271c9020" loc="95:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x2ac7271d9020" loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x2ac7271d45a8" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x2ac7271a0290" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ac72712c500"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2ac72712c908"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x2ac7271a0020" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x2ac72712c500"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x2ac72712c908"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x2ac7271e0ba8" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x2ac7271e7020" loc="19:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ac7271e8c30" loc="19:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x2ac7271de2d0" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ac7271de060" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x2ac7271cd8e8" loc="90:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x2ac7271e67d0" loc="24:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x2ac7271e85a8" loc="18:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x2ac7271da7d8" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x2ac7271da568" loc="54:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2ac725b9ab20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x2ac7271e90d8" loc="12:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x2ac7271d0e68" loc="84:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x2ac7271d23e0" loc="75:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x2ac7271d5020" loc="68:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x2ac7271db6f0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x2ac7271db480" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x2ac7271e04b8" loc="35:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x2ac7271e37b8" loc="29:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x2ac7271c9730" loc="96:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x2ac7271e60a8" loc="22:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ac7271e7dc8" loc="22:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x2ac7271cc7d0" loc="92:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x2ac7271e26f0" loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x2ac7271cb020" loc="93:/home/wwhuang/git/tinyos-lab11/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ac7272d0c00" loc="56:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2ac7272cebf0" loc="73:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ac7272d03e0" loc="46:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ac7272ce428" loc="65:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ac7272cd508" loc="81:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ac7274c43b0" loc="13:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ac7274c4140" loc="13:/home/wwhuang/git/tinyos-lab11/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ac7274b03f0" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2ac7274b4ab8" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2ac7274b4e00" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac7274b0160" loc="10:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ac7274af0b8" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ac7274b0ac8" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ac7274b0dd8" loc="11:/home/wwhuang/git/tinyos-lab11/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac7274ef420" loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac7274ef420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ac7274ef650" loc="59:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac7274ef650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2ac7274ed118" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac7274ef650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ac7274efe78" loc="66:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ac7274ef650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2ac7275438d0" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ac72756d400" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ac72756ea68" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2ac72756d180" loc="63:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2ac72756e328" loc="55:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2ac727571b40" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ac7275718d0" loc="49:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2ac727527ae8" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ac725b9a790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac727527878" loc="58:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2ac72752bb60" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ac7261e01d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac72752b8f0" loc="50:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ac727524938" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac7275246c8" loc="72:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ac727525a20" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ac7275257b0" loc="65:/home/wwhuang/git/tinyos-lab11/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ac7269cda20"/>
                <typename><typedef-ref name="message_t" ref="0x2ac7269ca020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ac727699a68" loc="53:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ac727699a68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ac727695328" loc="61:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2ac725b9b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wwhuang/git/tinyos-lab11/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ac72781f400" loc="53:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ac72781f400"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ac72781c020" loc="64:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ac7261e4780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ac72781f400"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ac72781fc38" loc="64:/home/wwhuang/git/tinyos-lab11/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ac72781f400"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
